<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Articulos on El Baúl del programador</title>
    <link>https://elbauldelprogramador.com/categories/articulos/index.xml</link>
    <description>Recent content in Articulos on El Baúl del programador</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-ES</language>
    <atom:link href="https://elbauldelprogramador.com/categories/articulos/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>10 de las Mejores Herramientas en la Línea de Comandos</title>
      <link>https://elbauldelprogramador.com/top-10-de-herramientas-que-son-mejores-en-la-linea-de-comandos/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/top-10-de-herramientas-que-son-mejores-en-la-linea-de-comandos/</guid>
      <description>&lt;figure&gt;
&lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; class=&#34; wp-image-938 alignleft&#34; title=&#34;Top 10 de las Mejores Herramientas en la Línea de Comandos&#34; src=&#34;https://elbauldelprogramador.com/img/2012/08/original1.jpg&#34; alt=&#34;Comandos&#34; width=&#34;640px&#34; height=&#34;360px&#34; /&gt;
&lt;/figure&gt;

&lt;p&gt;Escribir commandos en una terminal puede parecer tedioso, pero con las herramientas correctas, la línea de comandos puede ser increíblemente poderosa. Aquí están nuestras herramientas de línea de comandos favoritas que hacen impresionantes cosas que simplemente no puedes encontrar en una GUI (Interfaz Gráfica de Usuario).&lt;/p&gt;

&lt;p&gt;Nota: Mientras que un montón de tutoriales y videos en esta página son Linux-central, estos comandos son útiles para todos. Los usuarios de Mac pueden usar todos estos comandos en sus Terminales de la misma forma, y los usuarios de Windows pueden &lt;a href=&#34;http://lifehacker.com/179514/geek-to-live--introduction-to-cygwin-part-i&#34; target=&#34;_blank&#34;&gt;chequear Cygwin&lt;/a&gt; para una mayor experiencia de terminal como-UNIX donde estas herramientas vienen de la mano. Además no todas las herramientas vienen preinstaladas en cada sistema, por lo que puedes necesitar instalar algunas de ellas por separado antes de que puedas usarlas.
&lt;!--ad--&gt;&lt;/p&gt;

&lt;h2 id=&#34;10-top&#34;&gt;10. Top&lt;/h2&gt;

&lt;p&gt;Cuando tu computadora comienza a congelarse, realentarse, o simplemente comportarse de forma extraña, el comando &lt;em&gt;top&lt;/em&gt; puede ayudarte a enderezarla. Simplemente escribiendo *top *en una terminal, puedes obtener una lista de cada programa que está corriendo en tu sistema, así como cuántos recursos del sistema están consumiendo. Luego, si encuentras uno que se haya vuelto un poco loco, puedes matarlo y volver tu sistema a la normalidad, rápidamente. Esto en su totalidad lleva unos pocos segundos y no necesitas esperar que ningunas ventanas o atractivas imágenes carguen. Revisa &lt;a href=&#34;http://lifehacker.com/5445302/control-your-system-with-the-top-command&#34; target=&#34;_blank&#34;&gt;esta rápida introducción a top&lt;/a&gt; para más información, y si quieres algo un poco más amigable, el comando htop es un reemplazo mucho mejor.&lt;/p&gt;

&lt;h2 id=&#34;9-ifconfig&#34;&gt;9. Ifconfig&lt;/h2&gt;

&lt;p&gt;Si tienes más de una computadora en tu casa, es probable que necesites entrar en la configuración de tu red reiteradas veces. Conocer tu red puede ayudarte a &lt;a href=&#34;http://lifehacker.com/5935151/the-remote-control-conundrum-how-to-choose-the-right-remote-for-your-home-theater-pc&#34; target=&#34;_blank&#34;&gt;controlar tu HTPC&lt;/a&gt;, &lt;a href=&#34;http://lifehacker.com/5867786/how-to-monitor-your-bittorrent-downloads-from-any-computer-or-mobile-device&#34; target=&#34;_blank&#34;&gt;monitorear tus descargas de BitTorrent&lt;/a&gt;, o &lt;a href=&#34;http://lifehacker.com/5822590/turn-an-old-computer-into-a-networked-backup-streaming-or-torrenting-machine-with-freenas&#34; target=&#34;_blank&#34;&gt;compartir archivos entre computadoras&lt;/a&gt;. Cuando llegue el momento, ifconfig será tu mejor amigo. Muestra la dirección IP de tu computadora, la dirección MAC de tu tarjeta Ethernet y Wi-Fi, y mucho más. Revisa &lt;a href=&#34;http://www.techrepublic.com/article/linux-101-use-ifconfig-in-linux-to-configure-your-network/6040932&#34; target=&#34;_blank&#34;&gt;esta introducción a ifconfig&lt;/a&gt; para ver cómo se usa.&lt;/p&gt;

&lt;h2 id=&#34;8-chmod-y-chown&#34;&gt;8. Chmod y Chown&lt;/h2&gt;

&lt;p&gt;De vez en cuando, te encuentras con un error de &amp;#8220;permiso denegado&amp;#8221; al intentar acceder a un archivo, y eso puede ser exasperante. Correr &lt;code&gt;chmod&lt;/code&gt;editará los permisos de cualquier archivo, permitiéndote leer, escribir y/o ejecutar un archivo dado, acorde a tus especificaciones. Puedes hacer esto desde la GUI, pero &lt;code&gt;chmod&lt;/code&gt; es un poco más poderoso, especialmente si estás trabajando con múltiples archivos. Para ver cómo se usa, revisa &lt;a href=&#34;http://www.ghacks.net/2011/02/18/linux-101-using-chmod-and-chown/&#34; target=&#34;_blank&#34;&gt;esta guía de chmod y su hermano chown&lt;/a&gt;, que te ayudará a obtener total propiedad de un archivo.&lt;/p&gt;

&lt;h2 id=&#34;7-ssh&#34;&gt;7. SSH&lt;/h2&gt;

&lt;p&gt;Para qué configurar un &lt;a href=&#34;http://lifehacker.com/5902654/use-your-home-computer-from-anywhere-a-comprehensive-guide-to-remote-controlling-your-pc&#34; target=&#34;_blank&#34;&gt;sistema de pantalla completa compartida&lt;/a&gt; cuando todo lo que necesitas es checkear una sencilla cosa? SSH te conecta a otra computadora y te permite usar su terminal como si estuvieras sentado justo en frente de ella. Puedes checkear procesos activos, cambiar permisos, y acceder a archivos en tu máquina remota justo desde la máquina que está frente a ti. Puede hacer mucho más también, desde controlar&lt;a href=&#34;http://lifehacker.com/5919558/turn-an-old-computer-into-a-networked-backup-streaming-or-torrenting-machine-with-ubuntu&#34; target=&#34;_blank&#34;&gt; un servidor sin monitor&lt;/a&gt; hasta &lt;a href=&#34;http://lifehacker.com/237227/geek-to-live--encrypt-your-web-browsing-session-with-an-ssh-socks-proxy&#34; target=&#34;_blank&#34;&gt;encriptar tu navegador web&lt;/a&gt; en una conexión menos-que-segura. Incluso puede ayudarte a &lt;a href=&#34;http://lifehacker.com/5760626/how-to-install-and-set-up-ssh-on-your-jailbroken-ios-device&#34; target=&#34;_blank&#34;&gt;controlar tu dispositivo iOS&lt;/a&gt; .&lt;/p&gt;

&lt;h2 id=&#34;6-wget&#34;&gt;6. Wget&lt;/h2&gt;

&lt;p&gt;Puedes ingresar a un sitio web y bajar un archivo en un click, pero si quieres serio contro sobre tus descargas wget es lo mejor para la tarea. Con unos pocos tipeos puedes descargar automáticamente toda la música de un sitio web, continuar reactivar descargas que son interrumpidas, o incluso &lt;a href=&#34;http://lifehacker.com/5774707/download-the-entire-archive-of-nasas-astronomy-picture-of-the-day-with-one-command&#34; target=&#34;_blank&#34;&gt;capturar el archivo entero de la “Imagen Astronómica del Día”&lt;/a&gt; (“Astronomy Picture of the Day”) de la NASA. Revisa nuestra &lt;a href=&#34;http://lifehacker.com/161202/geek-to-live--mastering-wget&#34; target=&#34;_blank&#34;&gt;guía de capacitación en wget&lt;/a&gt; para ver todo lo que esta pequeña herramienta puede hacer.&lt;/p&gt;

&lt;h2 id=&#34;5-vi-y-vim&#34;&gt;5. Vi y Vim&lt;/h2&gt;

&lt;p&gt;A pesar de todos las embellecidas herramientas para escritura que hay por ahí, el texto plano sigue siendo una de las formas más útiles para manejar información. Puede ser para crear una &lt;a href=&#34;http://lifehacker.com/5859642/why-you-should-set-up-your-to+do-list-in-a-plain-text-file-and-how-to-do-it&#34; target=&#34;_blank&#34;&gt;extremadamente versátil lista de tareas&lt;/a&gt;, &lt;a href=&#34;http://lifehacker.com/5828789/how-to-create-an-attractive-customized-desktop-hud-with-rainmeter&#34; target=&#34;_blank&#34;&gt;ayudarte a ajustar la configuración de tu aplicación favorita&lt;/a&gt;, o incluso permitirte&lt;a href=&#34;http://lifehacker.com/5790955/how-to-make-a-web-site-the-complete-guide&#34; target=&#34;_blank&#34;&gt; construir un sitio web completo&lt;/a&gt;. Y si bien hay &lt;a href=&#34;http://lifehacker.com/5706475/five-best-text-editors&#34; target=&#34;_blank&#34;&gt;una gran cantidad de editores de texto excelentes&lt;/a&gt;, muchos usuarios poderosos eligen decididamente Vi y Vim. Vi y Vim son editores de texto de línea de comandos que son totalmente basados en teclado, permitiéndote navegar por grandes bloques de texto con sólo tipear unas pocas teclas. Si te tomas en serio la edición de texto, estos editores son el camino a seguir, a pesar de su curva de aprendizaje. Afortunadamente,&lt;a href=&#34;http://lifehacker.com/5844890/the-interactive-vim-tutorial-teaches-you-how-to-use-the-super+efficient-vim-text-editor&#34; target=&#34;_blank&#34;&gt; la web está llena de tutoriales&lt;/a&gt; sobre cómo usarlos.&lt;/p&gt;

&lt;h2 id=&#34;4-grep&#34;&gt;4. Grep&lt;/h2&gt;

&lt;p&gt;No todo el trabajo de línea de comandos es limpio y simple. A veces, correrás un comando y obtendrás una pared gigante de texto que es imposible de vadear. Por suerte, grep te ayudará a encontrar lo que estás buscando. Por sí solo, puede buscar una frase específica a través de todo el texto dentro de un archivo en tu sistema (por ejemplo, grep Laundry todo.txt), que es útil en sí mismo. Sin embargo, el verdadero poder de grep viene cuando se utiliza junto con otros comandos. ¿No encuentras lo que estás buscando en la salida de &lt;em&gt;top&lt;/em&gt;? Puedes utilizar grep para buscar el programa que estás buscando. Echa un vistazo a&lt;a href=&#34;http://eriwen.com/tools/grep-is-a-beautiful-tool/&#34; target=&#34;_blank&#34;&gt; este tutorial&lt;/a&gt; para aprender a usar grep, y combinarlo con otros comandos, sólo necesitas aprender &amp;#8230;&lt;/p&gt;

&lt;h2 id=&#34;3-pipes&#34;&gt;3. Pipes&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Pipes&lt;/em&gt; no es el nombre de una herramienta específica, sino más bien una clase de herramientas que te ayudan a enviar la salida de un comando a otro comando. Tomando el ejemplo de #4, en donde queríamos encontrar algo específico en la salida de &lt;em&gt;top&lt;/em&gt;. Para ello, deberías ejecutar algo como &lt;em&gt;2 top-l | grep firefox&lt;/em&gt;. El símbolo | conecta la salida de &lt;em&gt;top&lt;/em&gt; a &lt;em&gt;grep&lt;/em&gt;, que busca entonces &lt;em&gt;firefox&lt;/em&gt; y encuentra la información relevante. También puedes conectar la salida de un comando a un archivo de texto con el símbolo&amp;gt;, como por ejemplo:* ifconfig &amp;gt; myip.txt.* Para más ejemplos de como usar *pip*es, visita nuestro &lt;a href=&#34;http://lifehacker.com/5633909/who-needs-a-mouse-learn-to-use-the-command-line-for-almost-anything&#34; target=&#34;_blank&#34;&gt;manual de línea de comandos para principiantes&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;2-find&#34;&gt;2. Find&lt;/h2&gt;

&lt;p&gt;A diferencia de grep, que busca texto dentro de archivos, &lt;em&gt;find&lt;/em&gt; es una herramienta que te ayuda a encontrar archivos en función de otros criterios, como nombre, tipo de archivo, o fecha de última edición. Es mucho más poderosa que el tradicional buscador Spotlight o el de Windows, y una de las mejores maneras de encontrar rápidamente archivos en tu sistema. Además, si quieres buscar algo dentro de un archivo, puedes conectar la salida del &lt;em&gt;find&lt;/em&gt; a &lt;em&gt;grep&lt;/em&gt; y resolverlo. Para ver cómo se hace, checkea&lt;a href=&#34;http://eriwen.com/productivity/find-is-a-beautiful-tool/&#34; target=&#34;_blank&#34;&gt; este gran tutorial&lt;/a&gt; para el comando &lt;em&gt;find&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;1-apt-get-y-otros-gestores-de-paquetes&#34;&gt;1. Apt-get y otros gestores de paquetes&lt;/h2&gt;

&lt;p&gt;Si estás cansado de abrir un navegador web y visitar un sitio web sólo para descargar un programa, los gestores de paquetes son un regalo del cielo. Gestores de paquetes - como &lt;em&gt;apt-get&lt;/em&gt; de Ubuntu, &lt;em&gt;pacman&lt;/em&gt; de Arch Linux, o algún &lt;a href=&#34;http://mxcl.github.com/homebrew/&#34; target=&#34;_blank&#34;&gt;brebaje casero&lt;/a&gt; de un Sistema Operativo X que hace a la instalación muy fácil. Con ellos, puedes buscar en una gran base de datos de aplicaciones, así como descargarlas e instalarlas con sólo tipear unas teclas. Todo lo que necesitas saber es el nombre de la aplicación que estás buscando. Incluso te permite instalar los requisitos previos necesarios para ese programa -como Java- , para que no tengas que hacerlo tú mismo. el gestor de paquetes que utilizas generalmente depende de tu sistema operativo, entonces googlea para ver qué gestores están disponibles para tu sistema y qué aplicaciones están disponibles en sus repositorios.&lt;/p&gt;

&lt;p&gt;Si te has cansado de la interfaz gráfica de usuario, checkea nuestra &lt;a href=&#34;http://lifehacker.com/5622340/who-needs-a-mouse-learn-to-use-the-command-line-for-almost-anything&#34; target=&#34;_blank&#34;&gt;lista de aplicaciones de línea de comandos no convencionales&lt;/a&gt; y si no lo has hecho todavía, asegúrate de leer sobre &lt;a href=&#34;http://lifehacker.com/5743814/become-a-command-line-ninja-with-these-time+saving-shortcuts&#34; target=&#34;_blank&#34;&gt;cómo convertirse en un ninja de línea de comandos con atajos para ahorrar tiempo&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Fuente | &lt;a href=&#34;http://lifehacker.com/5935869/top-10-tools-that-are-better-in-the-command-line&#34; target=&#34;_blank&#34;&gt;lifehacker&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>10 razones para rootear tu teléfono Android</title>
      <link>https://elbauldelprogramador.com/10-razones-para-rootear-tu-telefono-android/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/10-razones-para-rootear-tu-telefono-android/</guid>
      <description>&lt;figure&gt;
   &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;10 razones para rootear tu teléfono Android&#34; src=&#34;https://elbauldelprogramador.com/img/2013/08/ku-bigpic.jpg&#34; width=&#34;970px&#34; height=&#34;546px&#34;&gt;&lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/curso-programacion-android/&#34; title=&#34;Android&#34;&gt;Android&lt;/a&gt; es uno de los sistemas operativos más abiertos, versátil y personalizable del mercado. Quizá pienses que no es necesario &lt;a href=&#34;https://elbauldelprogramador.com/rootear-samsung-galaxy-s-gt-i9003/&#34; title=&#34;Rootear Samsung Galaxy S GT-I9003&#34;&gt;rootearlo&lt;/a&gt;, pero te sorprenderías de la cantidad de cosas que se pueden hacer con un teléfono Android rooteado. A continuación se listan 10 razones por las que merece la pena (Traducidas de &lt;em&gt;LifeHacker&lt;/em&gt;):&lt;/p&gt;

&lt;h1 id=&#34;10-desbloquear-características-ocultas-e-instalar-aplicaciones-incompatibles&#34;&gt;10. Desbloquear características ocultas e instalar aplicaciones “incompatibles”&lt;/h1&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;figure&gt;
   &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;10 razones para rootear tu teléfono Android&#34; src=&#34;https://elbauldelprogramador.com/img/2013/08/ku-xlarge.jpg&#34; width=&#34;640px&#34; height=&#34;360px&#34;&gt;&lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;En ocasiones, incluso Android no es lo suficientemente abierto para proporcionar las características que necesitas. Puede que una aplicación no esté disponible para instalar en nuestro dispositivo por algún motivo. Sin embargo, un teléfono rooteado puede ayudarnos a solucionar este problema: es posible instalar aplicaciones bloqueadas por las compañías telefónicas, adquirir características de las últimas versiones de Android, hacer que aplicaciones incompatibles sean compatibles o incluso emular características de otros dispositivos. En resumen, rootear el teléfono te proporciona la capacidad de hacer muchas más cosas.&lt;/p&gt;

&lt;h1 id=&#34;9-automatizar-todo&#34;&gt;9. Automatizar todo&lt;/h1&gt;

&lt;figure&gt;
   &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;10 razones para rootear tu teléfono Android&#34; src=&#34;https://elbauldelprogramador.com/img/2013/08/ku-xlarge1.jpg&#34; width=&#34;640px&#34; height=&#34;360px&#34;&gt;&lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;Probablemente hayas oído hablar de &lt;strong&gt;&lt;a title=&#34;Unleash the Power of Android with These Automated Apps&#34; href=&#34;http://lifehacker.com/5930652/unleash-the-power-of-android-with-these-automated-apps&#34; target=&#34;_blank&#34;&gt;Tasker&lt;/a&gt;&lt;/strong&gt;, la aplicación que automatiza &lt;strong&gt;todo&lt;/strong&gt; en tu teléfono. Aunque no es necesario tener el dispositivo rooteado para instalarla, es posible hacer muchas más cosas de estarlo. Tareas como alternar entre redes 2G y 3G, activar/desactivar el GPS, cambiar la &lt;a href=&#34;https://elbauldelprogramador.com/tipos-de-gobernadores-en-las-cpus/&#34; title=&#34;Tipos de gobernadores en las CPUs&#34;&gt;velocidad del microprocesador&lt;/a&gt;, encender la pantalla y otras requieren del teléfono que esté rooteado. Por lo que para obtener el máximo beneficio de aplicaciones como esta, es necesario rootear.&lt;/p&gt;

&lt;h1 id=&#34;8-aumentar-la-velocidad-del-teléfono-y-la-duración-de-la-batería&#34;&gt;8. Aumentar la velocidad del teléfono y la duración de la batería&lt;/h1&gt;

&lt;figure&gt;
   &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;Aumentar la velocidad del teléfono y de la batería&#34; src=&#34;https://elbauldelprogramador.com/img/2013/08/ku-xlarge.png&#34; width=&#34;640px&#34; height=&#34;384px&#34;&gt;&lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;Puedes hacer montones de cosas para &lt;a title=&#34; speed up your phone&#34; href=&#34;http://lifehacker.com/5897770/how-to-speed-up-clean-up-and-revive-your-android-phone&#34; target=&#34;_blank&#34;&gt;acelerar el teléfono&lt;/a&gt; y incrementar la vida de la batería. Pero, como probablemente estés pensando, un teléfono rooteado podrá hacer más cosas. Con &lt;strong&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.mhuang.overclocking&amp;hl=es&#34; target=&#34;_blank&#34;&gt;SetCPU&lt;/a&gt;&lt;/strong&gt; puedes &lt;em&gt;underclockear&lt;/em&gt; el microprocesador para ahorra batería u &lt;em&gt;overclockearlo&lt;/em&gt; para obtener mayor rendimiento. Así como usar la aplicación &lt;em&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.oasisfeng.greenify&amp;hl=es&#34; target=&#34;_blank&#34;&gt;Greenfy&lt;/a&gt;&lt;/em&gt; para poner en hibernación aquellas aplicaciones que no estás usando &amp;#8212; Perfecto para esas aplicaciones que se mantienen ejecutando en segundo plano.&lt;/p&gt;

&lt;h1 id=&#34;7-bloquear-anuncios-en-cualquier-aplicación&#34;&gt;7. Bloquear Anuncios en cualquier aplicación&lt;/h1&gt;

&lt;figure&gt;
   &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;Bloquear Anuncios en cualquier aplicación&#34; src=&#34;https://elbauldelprogramador.com/img/2013/08/ku-xlarge2.jpg&#34; width=&#34;640px&#34; height=&#34;360px&#34;&gt;&lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;Todos comprendemos la necesidad de introducir anuncios ocasionales &amp;#8212; Así es como se hace dinero. Por contrapartida, algunos anuncios llegan a ser muy molestos y consumen mucho ancho de banda. Si quieres bloquear los anuncios en ciertas aplicaciones, &lt;a title=&#34;How to Block Ads in Android Browsers and Apps&#34; href=&#34;http://lifehacker.com/5851038/how-to-block-ads-in-android-browsers-and-apps&#34; target=&#34;_blank&#34;&gt;rootearlo con diferencia la mejor forma de lograrlo&lt;/a&gt;. &lt;strong&gt;&lt;a title=&#34;Ad Free&#34; href=&#34;http://adfree.bigtincan.com/&#34; target=&#34;_blank&#34;&gt;AdFree&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a title=&#34;AdBlock Plus&#34; href=&#34;https://adblockplus.org/en/android-about&#34; target=&#34;_blank&#34;&gt;AdBlock Plus&lt;/a&gt;&lt;/strong&gt; y &lt;strong&gt;&lt;a title=&#34;Ad Away&#34; href=&#34;https://code.google.com/p/ad-away/&#34; target=&#34;_blank&#34;&gt;Ad Away&lt;/a&gt;&lt;/strong&gt; son tres buenas opciones.&lt;/p&gt;

&lt;h1 id=&#34;6-hacer-copias-de-seguridad-para-transferirlas-a-otro-dispositivo&#34;&gt;6. Hacer copias de seguridad para transferirlas a otro dispositivo&lt;/h1&gt;

&lt;figure&gt;
   &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;Hacer copias de seguridad para transferirlas a otro dispositivo&#34; src=&#34;https://elbauldelprogramador.com/img/2013/08/ku-xlarge3.jpg&#34; width=&#34;640px&#34; height=&#34;360px&#34;&gt;&lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;Cuando obtenemos un nuevo dispositivo Android &amp;#8212; o lo restauramos a como vino de fábrica- puedes facilitarte mucho el trabajo realizando una copia de seguridad de tus aplicaciones y ajustes. Así, puedes volver a tener todo tal y como estaba &lt;a title=&#34;How to Upgrade to a New Android Phone and Take Everything with You&#34; href=&#34;http://lifehacker.com/5843206/how-to-upgrade-to-a-new-android-phone-and-take-everything-with-you&#34; target=&#34;_blank&#34;&gt;en unos cuantos golpes de dedo&lt;/a&gt;. De no tener el dispositivo rooteado, es posible realizar copias de seguridad de aplicaciones y datos, pero no será posible hacerlo con las aplicaciones y ajustes del sistema, ni automatizar el proceso tal y como hace &lt;strong&gt;&lt;a title=&#34;Titanium Backup&#34; href=&#34;https://play.google.com/store/apps/details?id=com.keramidas.TitaniumBackup&#34; target=&#34;_blank&#34;&gt;Titanium Backup&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;5-eliminar-aplicaciones-pre-instaladas&#34;&gt;5. Eliminar aplicaciones pre-instaladas&lt;/h1&gt;

&lt;figure&gt;
   &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;Eliminar aplicaciones preinstaladas&#34; src=&#34;https://elbauldelprogramador.com/img/2013/08/ku-xlarge4.jpg&#34; width=&#34;640px&#34; height=&#34;360px&#34;&gt;&lt;/amp-img&gt;
&lt;/figure&gt;**Titanum Backup** sirve para más cosas además de realizar copias de seguridad. También puede des-instalar todas esas aplicaciones que vienen instaladas por defecto en el teléfono y que no solemos usar. Antes de des-instalar nada, es recomendable congelar la aplicación y ver si todo sigue funcionando, de ser así, es seguro des-instalarla. *Personalmente llevo usando bastante tiempo una aplicación llamada &lt;a title=&#34;Gemini App Manager&#34; href=&#34;https://play.google.com/store/apps/details?id=com.seasmind.android.gmappmgr&#34; target=&#34;_blank&#34;&gt;Gemini App Manager&lt;/a&gt;, la cual dispone de esta funcionalidad, entre otras muchas.*

# 4. Personalizar Android por completo

&lt;figure&gt;
   &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;Personalizar Android por completo&#34; src=&#34;https://elbauldelprogramador.com/img/2013/08/ku-xlarge5.jpg&#34; width=&#34;640px&#34; height=&#34;360px&#34;&gt;&lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;Si eres de los que disfrutan haciendo modificaciones a cada característica del teléfono, rootear es lo que necesitas. Ya sea para personalizar el diseño del teclado con algo como &lt;a title=&#34;Keyboard Manager&#34; href=&#34;http://lifehacker.com/5703147/keyboard-manager-automatically-sets-your-android-keyboard-based-on-screen-orientation&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Keyboard Manager&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;u obtener un desplazamiento más rápido (&lt;em&gt;scroll&lt;/em&gt;), perfeccionar la administración multitarea, instalar temas con &lt;a title=&#34;Pimp My ROM&#34; href=&#34;http://lifehacker.com/5949000/pimp-my-rom-tweaks-your-rooted-android-phone-in-every-way-imaginable&#34; target=&#34;_blank&#34;&gt;Pimp My ROM,&lt;/a&gt;&lt;/strong&gt;. Al rootear el teléfono tenemos la capacidad de personalizar cada rincón de nuestro dispositivo.&lt;/p&gt;

&lt;h1 id=&#34;3-flashear-un-kernel-personalizado&#34;&gt;3. Flashear un kernel personalizado&lt;/h1&gt;

&lt;figure&gt;
   &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;Flashear un Kernel personalizado&#34; src=&#34;https://elbauldelprogramador.com/img/2013/08/ku-xlarge7.jpg&#34; width=&#34;640px&#34; height=&#34;360px&#34;&gt;&lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;Para aplicar algunas de las mejores modificaciones a Android se necesita un kernel personalizado, el cual sólo se puede &lt;em&gt;flashear&lt;/em&gt; un teléfono rooteado. El &lt;em&gt;kernel&lt;/em&gt; es el responsable de la comunicación entre las aplicaciones y el hardware, con lo cual un kernel modificado puede proporcionar mejoras en el rendimiento, duración de la batería, incluso características adicionales como el &lt;em&gt;Wifi tethering&lt;/em&gt; en dispositivos que no lo soportan por defecto, una carga de batería más rápida y &lt;a href=&#34;http://lifehacker.com/5881842/how-to-get-better-battery-life-and-performance-on-your-android-phone-with-a-new-kernel&#34; target=&#34;_blank&#34;&gt;mucho más&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;2-flashear-una-rom-personalizada&#34;&gt;2. Flashear una ROM personalizada&lt;/h1&gt;

&lt;figure&gt;
   &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;Flashear una ROM personalizada&#34; src=&#34;https://elbauldelprogramador.com/img/2013/08/ku-xlarge11.jpg&#34; width=&#34;640px&#34; height=&#34;360px&#34;&gt;&lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;Es probable que hayas oído de ROMs, y es que es de lo mejor de tener un teléfono rooteado. Una ROM personalizada es básicamente una versión personalizada de Android, y cambia la forma en la que usas el teléfono. La principal ventaja es poder instalar versiones de Android que aún no están disponibles para nuestro dispositivo. Algunas incluyen sus propias características y otras cambian por completo todo. No importa qué teléfono tengas &amp;#8212; Es recomendable que busques una ROM que te guste y la pruebes.&lt;/p&gt;

&lt;h1 id=&#34;1-ser-verdaderamente-el-dueño-de-tu-teléfono&#34;&gt;1. Ser verdaderamente el dueño de tu teléfono&lt;/h1&gt;

&lt;figure&gt;
   &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;Ser verdaderamente el dueño de tu teléfono&#34; src=&#34;https://elbauldelprogramador.com/img/2013/08/ku-xlarge8.jpg&#34; width=&#34;640px&#34; height=&#34;360px&#34;&gt;&lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;Al final, todo esto se reduce a una cosa: &lt;strong&gt;tú eres el dueño de tu dispositivo&lt;/strong&gt;, y deberías poder hacer lo que quisieras con él. Ciertas compañías y fabricantes intentan que esto no sea posible, pero con acceso de root, posees el teléfono de verdad, ya que puedes modificar cualquier cosa.&lt;/p&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Top 10 Reasons to Root Your Android Phone&lt;/em&gt; »» &lt;a href=&#34;http://lifehacker.com/top-10-reasons-to-root-your-android-phone-1079161983&#34; target=&#34;_blank&#34;&gt;LifeHacker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Fotos por&lt;/em&gt; »» &lt;a href=&#34;http://www.flickr.com/photos/a_mason/4255426890/&#34; target=&#34;_blank&#34;&gt;Andrew Mason&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>5 Razones para estar entusiasmados con Java en el 2013</title>
      <link>https://elbauldelprogramador.com/5-razones-para-estar-entusiasmados-con-java-en-el-2013/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/5-razones-para-estar-entusiasmados-con-java-en-el-2013/</guid>
      <description>&lt;p&gt;&lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2012/12/java1-300x227.jpg&#34; alt=&#34;java&#34; width=&#34;300px&#34; height=&#34;227px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Habiendo terminado el 2012, es tiempo de mirar hacia los próximos 12 meses en el mundo del desarrollo. Luego de leer &lt;a href=&#34;http://jaxenter.com/what-will-2013-bring-developers-place-their-bets-45933.html&#34; target=&#34;_blank&#34;&gt;este interesante artículo&lt;/a&gt; sobre las predicciones de algunos respetados desarrolladores, presentamos cinco sencillas razones por las cuales debes entusiasmarte con lo que traerá el 2013&amp;#8230;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Java 8&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Un tema obvio para comenzar para la mayoría de los desarrolladores Java, es la &lt;em&gt;release&lt;/em&gt; del 2013. Asumiendo que no habrá demoras, podemos esperar que Java 8 llegue en Septiembre, trayendo consigo muchas funciones lambda esperadas.&lt;/p&gt;

&lt;p&gt;Es bastante probable que en el período inmediatamente siguiente a la salida de Java 8, veamos publicaciones en blogs tanto sobre quejas por la complejidad de las nuevas características como porque estas mismas no son lo suficientemente importantes como para justificar su interés.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;De cualquier manera, algunas características muy necesarias que estaban demoradas finalmente aparecen y tendremos que ponernos a trabajar en serio. La mejorada API de Date and Time en Java 8 también merece una mención.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Los lenguajes de la JVM van un paso adelante&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;El 2012 fue realmente el año en que los lenguajes para la JVM tomaron un papel principal. Liderando el grupo se econtró el multi-paradigma Scala, cosechando &lt;a href=&#34;http://www.scala-lang.org/node/1658&#34; target=&#34;_blank&#34;&gt;impresionantes clientes empresariales&lt;/a&gt; gracias a la inversión en Typesafe. Extendiendo las posibilidades con Akka y Play 2.0!, parece ser que las fundaciones están focalizadas en avanzar más en el 2013. El desafío real es vender Scala a todos aquellos que no necesiten algo pesado.&lt;/p&gt;

&lt;p&gt;Dynamic Groovy no se quedó atrás el año pasado, agregando compilación estática en el mix con Groovy 2.0. Una versión principal se espera poco después de Java 8 para que los desarrolladores Groovy puedan aprovechar al máximo las nuevas características. El equipo de soporte, incluyendo Gradle y Grails, podría ser un gran atractivo para aquellos que buscan una alternativa a Java que no se aleje demasiado.&lt;/p&gt;

&lt;p&gt;No hemos mencionado las bondades de Clojure, JRuby y &lt;a href=&#34;http://kotlin.jetbrains.org/&#34; target=&#34;_blank&#34;&gt;Kotlin&lt;/a&gt;; este último con mucho trabajo ya que está cercano a su versión final. En última instancia, el éxito se reduce a una comunidad activa, la cual muchos lenguajes de la JVM se han percatado, y los proyectos derivados de esa comunidad.&lt;/p&gt;

&lt;p&gt;Si el 2012 fue el despegue, el 2013 es la consolidación en los círculos empresariales, lo cual es un incentivo para que los desarrolladores utilicen el lenguaje.&lt;/p&gt;

&lt;p&gt;**3.  La importancia &lt;strong&gt;en aumento &lt;/strong&gt;de JavaScript en Java**&lt;/p&gt;

&lt;p&gt;Los detalles fueron delgados en el terreno de las nuevas iniciativas en OpenJDK para la mayor parte del 2012, pero llegando a fin de año, habíamos aprendido un poco más acerca de los objetivos de cada proyecto y su importancia para la innovación en Java.&lt;/p&gt;

&lt;p&gt;El nuevo set del motor JavaScript a incluir en Java 8 integrará &lt;a href=&#34;http://mail.openjdk.java.net/pipermail/announce/2012-November/000139.html&#34; target=&#34;_blank&#34;&gt;JavaScript dentro de las aplicaciones Java&lt;/a&gt;. El &lt;a href=&#34;http://openjdk.java.net/projects/nashorn/&#34; target=&#34;_blank&#34;&gt;Proyecto Nashorn &lt;/a&gt;cimienta la noción del resurgimiento de Javascript e incluso mayor relevancia para los desarrolladores Java.&lt;/p&gt;

&lt;p&gt;Iniciado en secreto, Nashorn fue liberado en Noviembre y apareció en el repositorio OpenJDK&lt;a href=&#34;https://blogs.oracle.com/nashorn/entry/open_for_business&#34; target=&#34;_blank&#34;&gt; cuatro días antes de Navidad&lt;/a&gt;. Otro gran punto extra para Nashorn es la inclusión crucial del extendidamente popular node.js dentro de lo pactado, marcando el comienzo de un futuro políglota. Con muchos más detalles prometidos, estaremos monitoreando, esta vez, con ojos de águila.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Sacando más partido de tu inversión - Aprovechando la GPU &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Otro proyecto en OpenJDK que tiene un gran potencial es &lt;a href=&#34;http://openjdk.java.net/projects/sumatra/&#34; target=&#34;_blank&#34;&gt;Sumatra&lt;/a&gt;, con el objetivo de potenciar un mayor rendimiento de Java utilizando la GPU. Las investigaciones iniciales están focalizadas en la JVM Hotspot para asentar las bases, antes de &amp;#8216;apuntalar&amp;#8217; las librerías de Java 8 y las características propias del lenjuaje como *lambdas *para testear las técnicas que utilizan las últimas vanguardias de Java.&lt;/p&gt;

&lt;p&gt;El proyecto, liderado por un especialista AMD en GPU, espera encontrar algunos obstáculos en el camino con la API de Java y sus construcciones, por lo tanto no veremos las ideas implementadas en Java 8, pero Sumatra puede liderar algunos grandes avances y nuevas técnicas en la línea del desarrollo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Java entra más en profundidad en la nube&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Con docenas de opciones para IaaS y PaaS que inundan el mercado, desde indies como Jelastic y gigantes de la industria como Oracle y AWS, los desarrolladores estan repletos de opciones. Java, al parecer, ha realizado con éxito el salto al nuevo mundo de &amp;#8220;la nube&amp;#8221;.&lt;/p&gt;

&lt;p&gt;El mayor problema del momento, como resalta Martijn Verburg en el blog J&lt;a href=&#34;http://www.javaadvent.com/2012/12/java-2012-review-and-future-predictions.html&#34; target=&#34;_blank&#34;&gt;ava Advent Calendar&lt;/a&gt;, es la falta de estandarización y optimización. Con las características de la nube propias de Java, &lt;a href=&#34;http://jaxenter.com/oracle-pushes-cloud-features-back-to-java-ee-8-44301.html&#34; target=&#34;_blank&#34;&gt;diferidas en Java EE 8&lt;/a&gt;, es ahora cuestión de los proveedores el hecho de facilitar estándares como &lt;a href=&#34;http://jaxenter.com/round-the-campfire-talking-paas-standards-with-oracle-cloudsoft-and-cloudbees-44571.html&#34; target=&#34;_blank&#34;&gt;CAMP&lt;/a&gt; o, en su defecto, a la comunidad para que brinden nuevos frameworks universales como &lt;a href=&#34;http://www.jclouds.org/&#34; target=&#34;_blank&#34;&gt;jclouds&lt;/a&gt;. Mientras tanto, otros se niegan a esperar pacientemente que Oracle provea características como capacidad multiusuario y recolección de basura (&lt;em&gt;garbage collection&lt;/em&gt;) eficiente, como Waratek.*
*&lt;/p&gt;

&lt;p&gt;Con plataformas en la nube convirtiendose rápidamente en la norma, es probable que veamos el lanzamiento de aún más soluciones tercerizadas para soporte de Java en la nube: con Java EE 8 próximamente entre nosotros  (posiblemente 2014), tal vez ni siquiera lo necesitemos. (Elliot Bentley)&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h4 id=&#34;referencias&#34;&gt;Referencias&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;5 Reasons to be excited about Java in 2013&lt;/em&gt; »» &lt;a href=&#34;http://jaxenter.com/5-reasons-to-be-excited-about-java-in-2013-45938.html&#34; target=&#34;_blank&#34;&gt;jaxenter.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>5 Razones por las cuales en 5 años los IDEs de escritorio estarán muertos</title>
      <link>https://elbauldelprogramador.com/futuro-ides-de-escritorio/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/futuro-ides-de-escritorio/</guid>
      <description>&lt;p&gt;Sí, no es broma. En 5 años, todos los desarrolladores codificarán en la nube. No sólo codificarán allí sino que también compilarán*, &lt;strong&gt;&lt;em&gt;testearán, correrán, depurarán y desplegarán&lt;/em&gt;&lt;/strong&gt; las aplicaciones en la nube. Es inevitable, aunque no sea muy obvio todavía. De hecho, los proyectos IDE basados en la nube están saliendo al mercado como los jugadores más importantes con serias intenciones y visiones claras y estratégicas. Sí, es imposible hacer una predicción del 100% sobre cómo se comportará el mercado en 1-2 años. Las nuevas tendencias en la industria del desarrollo de software hablan de la necesidad de una forma más productiva de codificar. Hay un largo incremento en el número de aplicaciones desarrolladas en todo el mundo, mientras que el número de desarrolladores se mantiene bastante igual. ¿Qué significa esto? Significa que los desarrolladores tienen que volverse más productivos. Al margen de los limites que existen en la resistencia y productividad del ser humano, es posible ganar algo de tiempo optimizando los procesos de codificación, compilación, testeo, ejecución y despliegue. Aquí es exactamente cuando un IDE ubicado en la nube entra en juego como un serio rival para las herramientas offline. Algunas de las ventajas más obvias de los IDEs online incluyen:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;mayor-productividad-y-fácil-integración&#34;&gt;&lt;strong&gt; Mayor productividad y fácil integración&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;¿Cuánto tiempo lleva instalar y configurar el entorno, VM y plugins para probar, ejecutar e implementar una simple aplicación Java? ¿Cuáles son tus estimaciones más conservadoras? ¿Una hora? ¡Piensa un poco mejor! Son cuatro largas horas, mínimo. Una máquina limpia necesitará Java, Maven (o cualquier otro administrador de construcción de proyectos), Tomcat, Eclipse, plug-in para su PaaS elegido (nombrando herramientas de forma aleatoria). ¿No es mucho para una simple aplicación Spring? Bueno, un IDE en la nube ya está configurado y listo para empezar en cualquier momento. Eso es como un automóvil con un conductor que nunca apaga el motor. Un desarrollador puede utilizar cualquier máquina, ejecutar cualquier Sistema Operativo. No hay necesidad de descargar y configurar el entorno y buscar los plugins necesarios. Aquí está la forma de crear una simple aplicación Spring en Codenvy e implementarla en CloudFoundry:&lt;/p&gt;

&lt;h1 id=&#34;construir-probar-y-ejecutar-un-proyecto-en-la-nube&#34;&gt;&lt;strong&gt;Construir, probar y ejecutar un proyecto en la nube&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;Un IDE situado en la nube aloja todos los servicios necesarios juntos de forma tal que están inmediatamente disponibles cuando se los solicita. Los proyectos son construidos en máquinas poderosas, las cuales desplazarán a las computadoras de los desarrolladores. En otras palabras, es posible usar laptops y máquinas de escritorio de características mediocres. Las construcciones son más rápidas y no requieren muchos recursos (los desarrolladores pueden realizar otras tareas mientras se están construyendo los proyectos).&lt;/p&gt;

&lt;p&gt;Ejecutar y depurar aplicaciones en la nube es otra caracteristica fundamental de un buen IDE ubicado en la web. Una vez que el proyecto está construido, está listo para ser ejecutado o depurado. Aún más, es posible actualizar aplicaciones en tiempo de ejecución, por ejemplo, usando el plugin JRebel. Con cualquier cambio hecho al código fuente, los desarrolladores pueden, de hecho, revisarlos en las aplicaciones corriendo. Lo mismo aplica para el modo de depuración. La aplicación está levantada en el servidor IDE, mientras que un desarrollador puede &lt;em&gt;jugar&lt;/em&gt; con ella configurándole breakpoints, inspeccionando y cambiando variables, evaluando expresiones, sentencia por sentencia, etc.&lt;/p&gt;

&lt;h1 id=&#34;compartir-y-colaborar&#34;&gt;&lt;strong&gt;Compartir y colaborar&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;Tal vez esta es una de las razones principales por las cuales los IDEs de la nube avanzarán. En el mundo actual de las redes sociales, es totalmente inaceptable no tener la posibilidad de compartir un proyecto online. Los IDEs de la nube van mucho más allá. Además de funcionalidades de compartición (simplemente enviando un hipervínculo a un proyecto es suficiente para un desarrollador o un equipo para unirse al proyecto), incluye el modo de colaboración en tiempo real. Sí, esto significa que dos desarrolladores ubicados en partes opuestas del mundo pueden trabajar en el mismo archivo o trozo de código simultáneamente. ¿Y qué podemos decir respecto a chatear directamente en el editor? Esto es completamente posible en el modo colaborativo que los principales IDEs de la nube del mercado tienen en su caja de herramientas (&lt;a href=&#34;https://c9.io/&#34; target=&#34;_blank&#34;&gt;Cloud9 &lt;/a&gt;tiene colaboración en tiempo real mientras que Codenvy está planeando incluirlo pronto). Aquí puedes ver la funcionalidad de colaboración en &lt;a href=&#34;https://codenvy.com/&#34; target=&#34;_blank&#34;&gt;Codenvy&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;control-administrativo-y-conformidad&#34;&gt;&lt;strong&gt;Control administrativo y conformidad&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;Los supervisores de los equipos de desarrollo (especialmente cuando son tercerizados) definitivamente apreciarán tener un mecanismo simple de control y monitoreo para ver cuánto código ha sido escrito y prevenir pérdidas de código. Un proyecto, un entorno, muchos espacios de trabajo virtualizados y un panel de administración.&lt;/p&gt;

&lt;h1 id=&#34;en-conclusión&#34;&gt;&lt;strong&gt;En conclusión&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;Es cierto que a los IDEs de la web actualmente les faltan características de vanguardia y capacidades que los IDEs offline tienen, por ejemplo, el tan popular Eclipse. De todos modos, yendo a gran velocidad, los proyectos de IDEs de la nube están mejorando y progresando día a día, liberando a los desarrolladores de instalaciones aburridas y de los problemas inherentes a la configuración del entorno de desarrollo.&lt;/p&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;DZone&lt;/em&gt; »» &lt;a href=&#34;http://architects.dzone.com/articles/5-reasons-why-5-years-desktop&#34; target=&#34;_blank&#34;&gt;5 Reasons Why in 5 Years Desktop IDEs Will Be Dead&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>6 formas usadas por los cibercriminales para robar o vulnerar credenciales de login</title>
      <link>https://elbauldelprogramador.com/6-formas-usadas-por-los-cibercriminales-para-robar-o-vulnerar-credenciales-de-login/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/6-formas-usadas-por-los-cibercriminales-para-robar-o-vulnerar-credenciales-de-login/</guid>
      <description>&lt;p&gt;&lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/06/blog_sevenways.png&#34; alt=&#34;7 formas usadas por cibercriminales para robar o vulnerar credenciales de login&#34; width=&#34;700px&#34; height=&#34;350px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;El mundo digital es un vecindario muy peligroso lleno de atacantes listos para robar los datos más personales e importantes para los negocios. A estas alturas deberíamos saber que la ”*&lt;a href=&#34;https://elbauldelprogramador.com/seguridad/&#34;&gt;seguridad&lt;/a&gt;*” significa algo más que disponer de una contraseña única y larga. Para entender cómo proteger nuestros datos y cuentas, en &lt;em&gt;duosecurity&lt;/em&gt; han hecho una recopilación de las formas más comunes que usan los atacantes para robar datos ajenos en la red.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h3 id=&#34;1-malware&#34;&gt;1: Malware&lt;/h3&gt;

&lt;p&gt;El &lt;strong&gt;malware&lt;/strong&gt; representa un conjunto de amenazas a un sistema, como &lt;strong&gt;spyware, keyloggers y troyanos&lt;/strong&gt;. Con este tipo de software maligno, las contraseñas son un objetivo muy valioso para los atacantes que infectan el sistema. Si piensas que el robo de contraseñas usando &lt;strong&gt;malware&lt;/strong&gt; es complicado, quizá te sorprenda saber que existen unos kits de malware llamados &lt;strong&gt;&lt;a href=&#34;http://blog.webroot.com/2013/01/30/a-peek-inside-a-diy-password-stealing-malware/&#34; target=&#34;_blank&#34;&gt;DIY&lt;/a&gt;&lt;/strong&gt;(Do it yourself) diseñados específicamente para tal fin. Además, los troyanos se están centrando en robar datos críticos como los datos de acceso a bancos con una variante a &lt;strong&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Zeus_(Trojan_horse)&#34; target=&#34;_blank&#34;&gt;Zeus&lt;/a&gt;&lt;/strong&gt; llamada &lt;strong&gt;&lt;a href=&#34;http://gcn.com/articles/2012/01/10/zeus-trojan-returns-steals-bank-account-info-fbi-warns.aspx&#34; target=&#34;_blank&#34;&gt;Gameover&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;2-brechas-en-sitios-webs&#34;&gt;2: Brechas en sitios Webs&lt;/h3&gt;

&lt;p&gt;Confiamos una gran cantidad de datos sensibles a sitios webs de todo tipo, y los agujeros de seguridad son bastante más frecuentes de lo que pensamos. A través de varios métodos, como &lt;a href=&#34;https://elbauldelprogramador.com/introduccion-sql-sql-introduction/&#34;&gt;inyección SQL&lt;/a&gt;, subida remota de archivos o un simple ataque a fuerza bruta para romper credenciales de los usuarios las webs están contínuamente siendo atacadas. Cualquiera que tenga un servidor propio sabrá lo cierto que es esto. Una vez que se logra robar una &lt;a href=&#34;https://elbauldelprogramador.com/como-se-almacenan-tus-contrasenas-en-internet-y-cuando-la-longitud-de-la-misma-no-importa/&#34; title=&#34;Cómo se almacenan tus contraseñas en internet (y cuando la longitud de la misma no importa)&#34;&gt;contraseña&lt;/a&gt;, la información filtrada a menudo acaba en lugares como &lt;em&gt;pastebin&lt;/em&gt; y redes &lt;em&gt;bittorrent&lt;/em&gt;, esperando a ser usadas. Si además se usa la misma contraseña en todas las webs el daño puede ser enorme.&lt;/p&gt;

&lt;h3 id=&#34;3-configuraciones-de-software-incorrectas&#34;&gt;3: Configuraciones de software incorrectas&lt;/h3&gt;

&lt;p&gt;Si alguna vez has configurado un software destinado al entorno empresarial, seguramente sabrás que seleccionar por error (o no seleccionar) una casilla o cualquier configuración sensible puede marcar la diferencia entre estar seguro o ser un blanco fácil. Éstas configuraciones incorrectas que conducen a las brechas en la seguridad son bastante comunes. La complejidad de la seguridad frecuentemente da lugar a descuidos menores que se convierten en graves problemas.&lt;/p&gt;

&lt;h3 id=&#34;4-vulnerabilidades-en-las-aplicaciones&#34;&gt;4: Vulnerabilidades en las aplicaciones&lt;/h3&gt;

&lt;p&gt;El código fuente siempre tendrá bugs. Mientras sigamos desarrollando mayores y más complejas aplicaciones, la probabilidad de que aumenten los problemas de seguridad del código es casi una certeza. En error en la comprobación de un trozo de código puede fácilmente desenbocar en un problema muy grave, como &lt;a href=&#34;http://www.enterprisenetworkingplanet.com/netsecur/article.php/3916331/Watch-for-Authentication-Bypass-Vulnerabilities.htm&#34; target=&#34;_blank&#34;&gt;saltarse la autentificación&lt;/a&gt;. Por tanto, un fallo de seguridad en un trozo de código podría dar por válido a un usuario incorrecto o permitir al atacante saltarse la autentificación por completo.&lt;/p&gt;

&lt;h3 id=&#34;5-estafas-de-phishing&#34;&gt;5: Estafas de Phishing&lt;/h3&gt;

&lt;p&gt;El phishing es una forma de enviar correspondencia (como el email) que engaña a la víctima para hacerle clickar en un enlace hacia un formulario de apariencia normal pero fraudulento, haciendose pasar por un formulario legítimo, como el de nuestro banco. Al rellenar el formulario creyendo que es legítimo, en realidad se están enviando esos datos a los cibercriminales.&lt;/p&gt;

&lt;h3 id=&#34;6-control-de-acceso&#34;&gt;6: Control de Acceso&lt;/h3&gt;

&lt;p&gt;Lo último que una empresa desea es aparecer en una lista de las &lt;a href=&#34;http://www.darkreading.com/database/5-big-database-breaches-of-spring-2013/240155864&#34; target=&#34;_blank&#34;&gt;mayores brechas de seguridad&lt;/a&gt;. Tratar de controlar el acceso a datos (o credenciales) puede ser todo un reto. Sin un sólido control de acceso, una brecha puede ocurrir rápidamente al olvidar cambiar una contraseña o al no restringir desde donde puede un usuario loggearse. Muchas organizaciones fallan a la hora de limitar los privilegios de sus empleados, no disponen de métodos de autentificación lo suficientemente robustos o, en algunos casos, simplemente no protegen los datos y recursos críticos. Sin centrarse en cómo fluyen los datos de una empresa a otra, y quién puede acceder a ellos en cada momento, la información puede terminar rápidamente en manos de un atacante.&lt;/p&gt;

&lt;h3 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h3&gt;

&lt;p&gt;Como hemos ido viendo a lo largo del artículo, hay muchas formas en las que un atacante puede hacerse con nuestros datos, está claro que con una contraseña no estamos protegidos, así que lo recomendable es usar, siempre que se pueda, otra capa de seguridad como la &lt;a href=&#34;https://elbauldelprogramador.com/todos-los-lugares-donde-deberias-habilitar-autenticacion-de-dos-factores-ahora-mismo/&#34; title=&#34;Todos los lugares donde deberías habilitar la Autenticación de Dos Factores ahora mismo&#34;&gt;autentificación de dos factores&lt;/a&gt;. Además, para generar contraseñas bastante fuertes es posible usar webs como &lt;a href=&#34;http://passwordsgenerator.net/&#34; target=&#34;_blank&#34;&gt;passwordsgenerator.net&lt;/a&gt;. El problema de este tipo de contraseñas es que son imposibles de recordar. Una solución es guardarlas en un fichero de texto y encriptarlas con &lt;a href=&#34;https://elbauldelprogramador.com/editar-y-crear-archivos-cifrados-con-gpg-en-vim/&#34; title=&#34;Editar y crear archivos cifrados con GPG en Vim&#34; target=&#34;_blank&#34;&gt;GPG&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;referencias&#34;&gt;Referencias&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;blog.duosecurity.com&lt;/em&gt; »» &lt;a href=&#34;https://blog.duosecurity.com/2013/06/7-ways-cybercriminals-steal-or-defeat-login-credentials-2/&#34; target=&#34;_blank&#34;&gt;7 Ways Cybercriminals Steal or Defeat Login Credentials&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>7 dilemas que enfrentan los desarrolladores de hoy</title>
      <link>https://elbauldelprogramador.com/el-top-7-de-dilemas-que-enfrentan-los-desarrolladores-de-hoy/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/el-top-7-de-dilemas-que-enfrentan-los-desarrolladores-de-hoy/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Plataformas, bases de datos, control de usuario - dilemas que atrapan al programador antes de la primera línea de código&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tu jefe lo quiere para ayer, pero más vale que cumpla con los standards de mañana. Los clientes quieren todas las características que se puedan imaginar, pero no te atrevas a confundirlos dándoles todos los botones que desee. Tus compañeros programadores quieren que documentes tu código, pero ellos simplemente responden &amp;#8220;tl;dr&amp;#8221; (Too Long; didn&amp;#8217;t read) a cualquier cosa que escribes.&lt;/p&gt;

&lt;p&gt;Así como la tecnología evoluciona, también lo hacen los dilemas que enfrentan los desarrolladores. Cada elección, desde la plataforma hasta el almacenamiento de datos, incluyendo a cuánto control darle a los usuarios, está cargada de preguntas. Y gracias a la nube, el crecimiento de la tecnología móvil y la acelerada vanguardia, pareciera como si el mundo de la programación enfrentara una nueva elección - y dilema - a un ritmo creciente.&lt;/p&gt;

&lt;p&gt;Empaquetar tus problemas y darles un nombre puede ayudarte a gestionar y tal vez incluso encontrar soluciones, o al menos eso dicen. Con ese fin, aquí presentamos una lista de los dilemas más importantes que enfrentan los programadores de hoy en día. No significa que esté completa - dicho nuevamente, qué proyecto relacionado con el desarrollo de aplicaciones lo está alguna vez?&lt;/p&gt;

&lt;p&gt;¿Tienes otro dilema? Agrégalo a los comentarios.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;dilema-n-1-cuándo-decir-sí-a-nuevos-requerimientos&#34;&gt;Dilema n° 1: Cuándo decir sí a nuevos requerimientos&lt;/h1&gt;

&lt;p&gt;Si tuviéramos un dólar por cada requisito que nuestros clientes quieren, todavía estaríamos en bancarrota porque ésto requeriría la construcción de un sistema de contabilidad que asocie cada dólar con cada requisito. Éstos por lo tanto tendrían que ser reticulados y priorizados dado que nuestros clientes incluso exigirían un sofisticado sistema de gestión de bug/requisito para sus dólares. Luego la base de datos de los requisitos deseados necesitaría un backup en la nube y traducción a todos los idiomas.&lt;/p&gt;

&lt;p&gt;Este es el dilema: Todos quieren un código rico en características, pero nadie quiere pagar el costo de la gestión de todo eso. Cualquiera que haya tratado de construir algo tan simple como una aplicación de control remoto de cuatro botones sabe cuántos millones y millones de años de diseño se necesitan para crear algo así de simple. Hacer algo elegante exige el sudor que todo lo empapa.&lt;/p&gt;

&lt;p&gt;Los clientes, el departamento de marketing, representantes de ventas en el campo - no importa quién hace la solicitud. Darles el botón que quieren en realidad puede ser lo peor que puedes hacer por ellos. De repente puede haber demasiados botones y demasiada confusión acerca de lo que hace cada uno. Lo ideal es hacer algo lo suficientemente fácil de comprender intuitivamente, pero por desgracia, la creación de algo intuitivo para aquellos que son propensos a pedir demasiado para su software es casi imposible.&lt;/p&gt;

&lt;p&gt;Ya has intentado citando la vieja &amp;#8220;Regla de las 10.000&amp;#8243; a tu jefe, la cual sostiene que cualquier cosa que valga la pena requiere de al menos 10.000 horas de trabajo para que llegue a ser competente. Eso no hace más que causar gracia, ya que el encargado del area comercial va a dedicar más tiempo a la redacción de un patético reporte o e-mail que a tratar de entender las características que has incluido en tu aplicación, incluso si son las funcionalidades que los usuarios dijeron que deseaban.&lt;/p&gt;

&lt;p&gt;Lamentablemente, lo ideal suele ser intentar convencer al cliente de que en realidad no desea la funcionalidad que pidió. Después de todo, Twitter sigue ofreciendo un sistema de pobre funcionalidad que impone un límite de 140 caracteres, ridículo en la era de &lt;em&gt;discos terabyte&lt;/em&gt;. Sin embargo, quédese tranquilo sabiendo que todos los intentos de facilitar nuevas características son ejemplos de intentar demasiado.&lt;/p&gt;

&lt;p&gt;Si tan sólo esta solución para el problema de los requisitos de funcionalidad infinita estuviera disponible para todos nosotros&amp;#8230;&lt;/p&gt;

&lt;h1 id=&#34;dilema-n-2-cuánta-documentación-es-suficiente&#34;&gt;Dilema n° 2 : ¿Cuánta documentación es suficiente?&lt;/h1&gt;

&lt;p&gt;Estaba sentado en una reunión con un project manager agresivo que realmente quería adherirse a un project manager de la competencia. Este manager prometió que el código generado por su equipo tendría &amp;#8220;documentación&amp;#8221;. Dijo presentándose al estilo James Bond pausándose y diciendo: &amp;#8220;&amp;#8230; documentación completa.&amp;#8221;&lt;/p&gt;

&lt;p&gt;Lo único peor que no tener documentación es tener una estantería repleta de carpetas llenas de interminables documentos. A algunos project managers les encanta medir su progreso por la libra, y ven &lt;em&gt;más&lt;/em&gt; palabras como &lt;em&gt;mejores&lt;/em&gt; palabras. Cualquiera que haya leído (o mejor dicho, sufrido) &amp;#8220;Moby Dick&amp;#8221; en la escuela secundaria conoce la sensación.&lt;/p&gt;

&lt;p&gt;Queremos información sobre el código, pero nadie tiene un acrónimo para Muy Poca Información (Too Little Information). Todos en Facebook conocen la sigla TMI.&lt;/p&gt;

&lt;p&gt;No hay una respuesta fácil para el programador. Lo ideal sería que el código sea lo suficientemente limpio y autodocumentado para evitar la necesidad de largos párrafos explicando lo que el código hace. La documentación generada por código no se queda atrás como la documentación escrita cuando alguien reescribe el código sin tener en cuenta el texto.&lt;/p&gt;

&lt;p&gt;Hay esperanzas de que colecciones aún más inteligentes de debuggers (depuradores) y compiladores analizadores de código serán capaz de hacer un mejor trabajo comprendiendo nuestro código. Las últimas versiones de las máquinas virtuales llevan un registro enorme para cada rutina que se está ejecutando. Mientras que la mayor parte del énfasis se pone en la performance, este tipo de metadata puede ser más útil que la documentación real mediante la detección del cambio en los datos.&lt;/p&gt;

&lt;p&gt;Sin embargo pasarán años antes de que podamos beber Kool-Aid y soñar con Inteligencia Artificial entendiendo nuestro código. Por ahora, nos quedamos con el problema de &lt;a target=&#34;_blank&#34; href=&#34;http://www.infoworld.com/d/application-development/how-get-developers-document-their-code-183908&#34;&gt;Cómo crear suficiente documentación&lt;/a&gt; para mantener a todos contentos sin generar diferencias entre el conjunto de funcionalidades real y lo que describimos.&lt;/p&gt;

&lt;h1 id=&#34;dilema-n-3-a-la-nube-o-no-a-la-nube&#34;&gt;Dilema n°3: ¿A la nube, o no a la nube?&lt;/h1&gt;

&lt;p&gt;Es mucho más fácil llamar a un nuevo servidor de la nube que llenar un formulario de solicitud para pedir a la gente de mantenimiento que compre uno nuevo. Presionas un botón y tienes tu propio servidor.&lt;/p&gt;

&lt;p&gt;Por desgracia, este enfoque puede ser costoso. Los servidores pueden costar sólo unos pocos centavos por una hora, pero aumentan cuando todo el mundo quiere su propio cluster para cada proyecto. La otra cuestión es que hay cientos de servidores en la nube, la mayoría de ellos creados por personas que se fueron del proyecto hace varios años. Es más barato seguir pagando la cuenta que averiguar lo que hacen.&lt;/p&gt;

&lt;p&gt;Y lo que es peor, no se tiene ningún poder sobre los servidores. Algunas compañías son famosas por redactar Términos de Servicio que son muy unilaterales, afirmando, por ejemplo, que tienen el derecho de apagar las máquinas sin &amp;#8220;ninguna razón&amp;#8221;. Eso parece estar cambiando a medida que los proveedores reconocen que tal extralimitación aleja a los clientes de mucho dinero. Pero nadie sabe lo que ocurre si surjen problemas en la nube. A veces esto ayuda a controlar el pago del cheque de retiro y jubilación de la persona que tenía la responsabilidad de mantener el servidor levantado.&lt;/p&gt;

&lt;p&gt;Cuanto más tercerizas, más pierdes el control y volanteas tratando de recuperarlo. Cuanto menos externalizas hacia la nube, más volanteas para que todo se mantenga funcionando. Condenado si lo haces, condenado si no lo haces.&lt;/p&gt;

&lt;h1 id=&#34;dilema-nº4-mantener-el-código-viejo-o-darle-paso-a-lo-nuevo&#34;&gt;Dilema nº4: ¿Mantener el código viejo, o darle paso a lo nuevo?&lt;/h1&gt;

&lt;p&gt;Uno de los desafíos más profundos en la ejecución de una pila de software empresarial es decidir cuándo seguir con lo viejo y cuándo cambiar a lo nuevo. Cada línea de código en la pila se vuelve más viejo a cada minuto, y aunque parezca lo contrario, la realidad es que el software se las arregla para encontrar la forma de empeorar, poco a poco.&lt;/p&gt;

&lt;p&gt;El antiguo código realmente dejar de funcionar. Los socios comienzan a ofrecer servicios ligeramente diferentes y a veces dejan de respaldar a todas las funciones juntas. Twitter, por ejemplo, bloqueó a las personas que utilizaban su API antigua cuando la empresa comenzó a insistir en el uso de la API de OAuth. Estas historias se repiten una y otra vez.&lt;/p&gt;

&lt;p&gt;El problema es que sustituir lo viejo con lo nuevo puede ser costoso. Los programadores de lo nuevo se ven obligados a mantener la compatibilidad con el código antiguo, un reto que a menudo requiere escribir dos programas: uno lleno de los viejos bugs (errores) y uno lleno de otros nuevos que todavía no han sido descubiertos.&lt;/p&gt;

&lt;p&gt;Para empeorar las cosas, el nuevo código está generalmente atado a los standares más altos. He visto los nuevos e impresionantes componentes de AJAX correr mucho más lento que el antiguo código mainframe de pantalla verde, porque tienen elegantes botones y un montón de imágenes que &lt;em&gt;desafían&lt;/em&gt; la capacidad de placa de vídeo. La apariencia (look) es impecable, pero el comportamiento (feel) es más lento.&lt;/p&gt;

&lt;p&gt;No hay una respuesta fácil a este dilema. El código anterior sigue funcionando. Nos gusta. Es sólo que &lt;a target=&#34;_blank&#34; href=&#34;http://www.infoworld.com/t/microsoft-windows/windows-8-consumer-preview-windows-frankenstein-187749&#34;&gt;no es compatible con la nueva versión del Sistema Operativo&lt;/a&gt; o con el nuevo chip multicore. El nuevo código cuesta dinero. En general podemos arreglar un número de problemas evidentes del código viejo, pero quién sabe qué nuevos problemas pueden aparecer?&lt;/p&gt;

&lt;h1 id=&#34;dilema-nº-5-sql-vs-nosql&#34;&gt;Dilema nº 5: SQL vs NoSQL&lt;/h1&gt;

&lt;p&gt;Hay un gran desafío para los Administradores de Base de Datos del mundo: seguir con &lt;em&gt;SQLs de prueba-y-error&lt;/em&gt; o cambiar a la&lt;a target=&#34;_blank&#34; href=&#34;http://www.infoworld.com/d/data-explosion/no-sql-new-databases-new-applications-400&#34;&gt; tendencia NoSQL&lt;/a&gt; donde todo es más grande y está listo para un interminable flujo de datos.&lt;/p&gt;

&lt;p&gt;Las nuevas Bases de Datos NoSQL suenan atractivas. Pueden ser mucho más rápidas que las anteriores, y muchas veces obligan a los usuarios a evitar muchos de los problemas que causaron tantos disgustos las primeras veces. Consultas con JOINs, por ejemplo, pueden hacer más lenta la Base de Datos si el esquema es demasiado complicado. NoSQL las tira por la ventana, junto con muchas partes del esquema. Se puede almacenar cualquier par clave-valor que desees, y la Base de Datos NoSQL, va a responder.&lt;/p&gt;

&lt;p&gt;Pero si te fijas bien, las bases de datos NoSQL no son siempre tan maravillosas. En primer lugar, generalmente no ofrecen garantías de que los datos se graben. Es más probable que se graben bien, pero existe también la posibilidad de que algo le suceda a un disco duro o a un equipo del clúster y se pierda la información. Algunas de las más recientes &lt;a target=&#34;_blank&#34; href=&#34;http://www.infoworld.com/d/data-explosion/first-look-oracle-nosql-database-179107&#34;&gt;opciones NoSQL de empresas como Oracle&lt;/a&gt; permiten solicitar una confirmación de la transacción, pero el código necesita jugar con los pulgares y esperar, al igual que si utilizara una Base de Datos SQL.&lt;/p&gt;

&lt;p&gt;Hay cuestiones más profundas. Muchos de los problemas de velocidad de la leva sobre porque los programadores no piensan en los efectos sutiles de SQL Server. La forma de estructurar las tablas y consultas se puede hacer una gran diferencia en el rendimiento. Vinculación de tablas múltiples juntas y obligando a la base de datos para unir toda la información ralentiza las cosas.&lt;/p&gt;

&lt;p&gt;Pero si intentas lograr lo mismo con una Base de Datos NoSQL, estarás escribiendo dentro y fuera de multiples lugares y deseando que se mantenga consistente. Tienes que hacer todo el trabajo con JOINs entre secciones dispares de la Base de Datos, lo que probablemente signifique que tendrás- que pagar el costo en velocidad. Siendo consciente de ello y capaz de pensar en la forma de compensarlo durante el diseño del código, todo saldrá bien. Pero si no, el código será más lento y cargado de bugs.&lt;/p&gt;

&lt;p&gt;Este dilema tiene una respuesta simple: las aplicaciones que necesitan una mayor consistencia deberán confiar en las garantías de la antigua maquinaria SQL. Las aplicaciones que necesiten velocidad y puedan manejar algunos registros mezclados pueden elegir las nuevas Bases de Datos NoSQL.&lt;/p&gt;

&lt;p&gt;Pero si se requiere velocidad y consistencia, también empezarás a tirarte de los pelos.&lt;/p&gt;

&lt;h1 id=&#34;dilema-n-6-elegir-entre-native-o-web-mobile&#34;&gt;Dilema n°6: Elegir entre Native o Web mobile&lt;/h1&gt;

&lt;p&gt;Al principio, Apple no iba a dejar a nadie desarrollar aplicaciones para iPhone. Si querías incluir a iPhone en tu compatibilidad, tenías que codificar con HTML5 para Safari. Era una forma elegante de esquivar la conocida limitación impuesta a los desarrolladores.&lt;/p&gt;

&lt;p&gt;Por desgracia, nadie estaba contento con el &lt;a target=&#34;_blank&#34; href=&#34;http://www.infoworld.com/d/developer-world/iphone-developers-locked-apples-walled-garden-740&#34;&gt;bloqueo de la plataforma&lt;/a&gt;. La gente quería escribir código nativo, un camino definitivamente esencial para juegos que requerían velocidad, y útiles para aplicaciones más lentas que te permitían acceder a información. Apple cedió, y ahora tenemos la App Store.&lt;/p&gt;

&lt;p&gt;El problema es que el código para el iPhone no funcionará con otros smartphones y viceversa. Cualquier compañía que quiera ser compatible con múltiples fabricantes debe recodificar sus aplicaciones – un proceso largo y lento, propenso a incompatibilidades. Además, implica doble o triple recodificación.&lt;/p&gt;

&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;http://www.infoworld.com/d/html5/download-infoworlds-megaguide-html5-175982&#34;&gt;HTML5&lt;/a&gt; es una buena opción. Si puedes codificar tu aplicación como una página Web, hay una buena probabilidad de que los usuarios puedan abrirla en el navegador del smartphone. Ya hay &lt;a target=&#34;_blank&#34; href=&#34;http://www.infoworld.com/t/mobile-development/12-essential-programming-tools-the-mobile-web-185145&#34;&gt;un gran número de buenos frameworks&lt;/a&gt; que hacen esto un poco más sencillo.&lt;/p&gt;

&lt;p&gt;El problema es que no está necesariamente entre los intereses de los fabricantes de smartphones incluir esta interoperabilidad. Si los teléfonos van a destacarse, necesitarán ofrecer algo especial, y esto generalmente significa algo diferente. Cosa que no se logrará si todos corren las mismas aplicaciones HTML5.&lt;/p&gt;

&lt;p&gt;Hay una gran cantidad de rumores de que la performance de HTML5 en los smartphones no es tan buena como podría ser. Algunos sostienen que el motor de HTML5 es un poco más lento. No hay una forma sencilla de probar esto o incluso entender la motivación que hay detrás de cualquier código complicado. En muchos casos, HTML5 es más lento debido a que es interpretado en lugar de compilarse directamente para el hardware.&lt;/p&gt;

&lt;p&gt;La respuesta a este dilema es definir qué tan importante será el rendimiento de la aplicación para mobile. Si es esencial, entonces el código compilado para cada arquitectura es la respuesta. Si no es tan relevante, entonces existe un buen margen de maniobra para explorar HTML5.&lt;/p&gt;

&lt;h1 id=&#34;dilema-n-7-cuánto-control-deberían-realmente-tener-los-usuarios&#34;&gt;Dilema n°7: ¿Cuánto control deberían realmente tener los usuarios?&lt;/h1&gt;

&lt;p&gt;Los usuarios de software son como adolescentes. Se dice : Ellos quieren toda la libertad posible, pero esperan que usted, el buen padre, los rescates en brazos. Ellos quieren todas las ventajas del patio vallado, pero insisten en poder escaparse por alguna puerta trasera cada vez que se les de la gana.&lt;/p&gt;

&lt;p&gt;La cuestión del control es una dificultad primaria para los programadores. El &lt;a target=&#34;_blank&#34; href=&#34;http://www.infoworld.com/d/open-source-software/why-software-patents-are-evil-188738&#34;&gt;espíritu Open Source&lt;/a&gt; está influenciando la cultura con su insistencia de que todo el mundo debería tener la posibilidad de recompilar la pila y ajustarla para que se adapte a cualquier cosa. Desgraciadamente, el usuario medio no puede hacer uso de este poder, sin importar cuánto lo desee. Incluso muchos programadores han tenido que perder horas buscando la versión correcta de las librerías y la última edición del compilador. &lt;em&gt;Control &lt;/em&gt; carece de significado si no se dispone del tiempo para usarlo.&lt;/p&gt;

&lt;p&gt;Algunas compañías están incentivando el ideal de bases de datos abiertas. Se supone que todos tenemos la posibilidad de descargar información de todos. Lamentablemente, la mayoría de nosotros no puede hacer nada con la información, y los únicos con el tiempo y la energía para usar estas puertas abiertas son otras compañías.&lt;/p&gt;

&lt;p&gt;No hay respuesta a este dilema. Si le das control a los usuarios, ellos se quejarán de la interface visual y de las funcionalidades que no tienen. Si no les das, seguirán gruñéndote por ello.&lt;/p&gt;

&lt;p&gt;Fuente: &lt;a target=&#34;_blank&#34; href=&#34;http://www.infoworld.com/d/application-development/top-7-dilemmas-facing-todays-developers-193412&#34;&gt;infoworld&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Basta con las Tablas Arcoiris: lo que necesitas saber sobre esquemas de contraseñas seguras</title>
      <link>https://elbauldelprogramador.com/basta-con-las-tablas-arcoiris-lo-que-necesitas-saber-sobre-esquemas-de-contrasenas-seguras/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/basta-con-las-tablas-arcoiris-lo-que-necesitas-saber-sobre-esquemas-de-contrasenas-seguras/</guid>
      <description>&lt;p &gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/2012/08/rainbow1.png&#34;&gt;&lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; class=&#34;wp-image-901 aligncenter&#34; title=&#34;rainbow&#34; alt=&#34;&#34; src=&#34;https://elbauldelprogramador.com/img/2012/08/rainbow1.png&#34; width=&#34;536px&#34; height=&#34;303px&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;En la esfera social de bookmark (&amp;#8220;socialbookmarkosphere&amp;#8221;) se habla &lt;a href=&#34;http://kestas.kuliukas.com/RainbowTables/&#34;&gt;insistentemente&lt;/a&gt; de las &amp;#8220;&lt;a href=&#34;http://www.codinghorror.com/blog/2007/09/rainbow-hash-cracking.html&#34; target=&#34;_blank&#34;&gt;Tablas Arcoiris&lt;/a&gt;&amp;#8220;, cuál es el significado real de &lt;em&gt;password security&lt;/em&gt;, y por qué demuestran que Microsoft hizo un trabajo de mala calidad en la seguridad de *Windows for Workgroups *hace 15 años. Esto realmente me enloquece. Si el eje soporte &amp;#8220;avanzado&amp;#8221; de tu modelo de amenazas es &amp;#8220;Tablas Arcoiris&amp;#8221;, deja de trabajar en tu aplicación &lt;em&gt;Calendario Social de Compras&lt;/em&gt; ahora mismo: no puedo confiar en ti con mi Reddit karma score, y mucho menos el número de mi tarjeta de crédito.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Para comenzar, almacenamiento de contraseñas 101&lt;/strong&gt;: Los servidores &lt;a title=&#34;Cómo se almacenan tus contraseñas en internet (y cuando la longitud de la misma no importa)&#34; href=&#34;https://elbauldelprogramador.com/como-se-almacenan-tus-contrasenas-en-internet-y-cuando-la-longitud-de-la-misma-no-importa/&#34; target=&#34;_blank&#34;&gt;no suelen almacenar las contraseñas reales&lt;/a&gt;. En su lugar, encriptan la contraseña, guardan el hash, y descartan la contraseña. El valor del hash puede verificar una contraseña de una página de login, pero no puede ser revertido de nuevo al valor de la contraseña. Por lo tanto cuando inevitablemente pierdes tu tabla de contraseñas SQL, no se han expuesto todas las contraseñas; sólo lo residual.&lt;/p&gt;

&lt;p&gt;Ahora re-expliquemos las Tablas Arcoiris:
&lt;!--ad--&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Toma un &amp;#8220;diccionario&amp;#8221; - por ejemplo, todas las combinaciones de caracteres alfanuméricos con menos de 15 caracteres.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Encríptalas a todas.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Graba los resultados en un DVD.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Ahora tienes cientos de billones de valores hash que pueden revertirse al valor original - una &amp;#8220;tabla arcoiris&amp;#8221;. Para usarla,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Toma tu tabla de hashes robada&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;por cada hash&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;búscala en la tabla arcoiris&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Si está allí, lo resolviste.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Aquí está lo que necesitas saber sobre Tablas Arcoiris: ningún esquema moderno de contras&lt;/strong&gt;eñas** es vulnerable a ellos.**&lt;/p&gt;

&lt;p&gt;Las Tablas Arcoiris son de fácil acierto. Para cada clave, genera un número aleatorio (un &amp;#8216;&lt;em&gt;nonce&amp;#8217;&lt;/em&gt;). Genera el hash de la contraseña con el nonce, y almacena ambos valores. El servidor dispone de información suficiente para verificar contraseñas (el nonce se guarda descubierto). Pero incluso con un pequeño valor aleatorio, digamos, 16 bits, las tablas arcoiris son inviables: en la actualidad hay 65.536 &amp;#8220;variantes&amp;#8221; de cada hash, y en vez de 300 billones de entradas en la tabla arcoiris, necesitas cuatrillones. El nonce en este esquema se llama &amp;#8220;salt&amp;#8221; (sal).&lt;/p&gt;

&lt;p&gt;Genial, ¿no? Sí, y la &lt;a href=&#34;http://en.wikipedia.org/wiki/Crypt_%28Unix%29&#34; target=&#34;_blank&#34;&gt;criptografía Unix&lt;/a&gt; - casi el &lt;em&gt;mínimo común denominador&lt;/em&gt; en sistemas de seguridad - ha tenido esta característica &lt;a href=&#34;http://static.usenix.org/events/usenix99/provos/provos_html/node9.html&#34; target=&#34;_blank&#34;&gt;desde 1976&lt;/a&gt;. Si esto son novedades para tí, no deberías estar diseñando sistemas de contraseñas. Usa alguna buena de otro.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No, en serio. &lt;a href=&#34;http://www.openwall.com/john/interviews/SF-20060222-p3&#34; target=&#34;_blank&#34;&gt;Usa algún sistema de contraseñas de otro&lt;/a&gt;. No construyas uno propio.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;****La mayoría de los peores problemas de seguridad de la industria (como el famoso y deficiente hash LANMAN) sucedieron porque inteligentes desarrolladores enfocaron el código de seguridad de la misma forma que hicieron el resto del código. La diferencia entre el código de seguridad y el código de la aplicación es que cuando el de la aplicación falla, lo descubres en el momento, pero cuando falla el de seguridad, te enteras 4 años más tarde, cuando un DVD con todos los códigos de tarjetas de crédito de tus clientes y la información CVV2 comienza a circular en Estonia.&lt;/p&gt;

&lt;p&gt;Aquí hay un esquema de vanguardia de un post reciente de un blog sobre Tablas Arcoiris y Salts:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hash = md5(&#39;deliciously-salty-&#39; + password)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hay al menos dos problemas con este código. Sí, el autor no sabe que es un salt; &amp;#8220;deliciously-salty-&amp;#8221; is not a nonce (además, Jeff, a tu computadora realmente no le interesa si separas la contraseña de el nonce con un guión; es una computadora, no una maestra de 2do grado).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pero hay un problema mucho mayor con este código: las letras &amp;#8220;md5&amp;#8243;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;** **Dos razones.&lt;/p&gt;

&lt;p&gt;Estás esperando que haga una crítica severa acerca de cómo no hay &lt;a href=&#34;http://www.reddit.com/r/programming/comments/2fu8q/we_worship_md5_the_god_of_hash/c2fwf2&#34; target=&#34;_blank&#34;&gt;ninguna cualidad redentora&lt;/a&gt; para justificar &lt;a href=&#34;http://www.skrenta.com/2007/08/md5_tutorial.html&#34; target=&#34;_blank&#34;&gt;el uso de MD5 en 2007&lt;/a&gt;. Eso es cierto (MD5 está roto, es demasiado lento para usarlo como un hash de propósito general, etc.) Pero ese no es el problema.&lt;/p&gt;

&lt;p&gt;El problema es que MD5 es rápido. Entonces lo son sus competidores modernos, como SHA1 y SHA256. &lt;a href=&#34;http://cr.yp.to/hash127/faq.html&#34; target=&#34;_blank&#34;&gt;La velocidad es un propósito de diseño&lt;/a&gt; de un hash seguro moderno, debido a que los hashes son bloques de construcción de casi todos los sistemas criptográficos, y usualmente tienen &amp;#8216;demanda de ejecución&amp;#8217; de nivel &amp;#8216;por paquete&amp;#8217; o &amp;#8216;por mensaje&amp;#8217;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;La velocidad es exactamente lo que no quieres en una función de hash de contraseñas.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;**** ** **Los esquemas modernos de contraseñas son atacados con cracker de contraseñas incrementales. Crackers incrementales no precalculan todas las posibles contraseñas crackeadas. Consideran cada hash de contraseña individualmente, y alimentan su diccionario a través de la función de hash de contraseña de la misma manera que tu página de login de PHP lo haría. A los crackers de Tablas Arcoiris les gusta que Ophcrack use espacio para atacar contraseñas; los crackers incrementales como John the Ripper, Crack y LC5 trabajan con tiempo: estadísticas y cómputo.&lt;/p&gt;

&lt;p&gt;En el juego de atacar contraseñas se gana puntos según el tiempo consumido para crackear una contraseña X. Con las tablas arcoiris, ese tiempo depende de qué tan grande tu tabla necesita ser y que tan rápido puedes buscarla. Con crackers incrementales, el tiempo depende de qué tan rápido puedes hacer correr tu función de hash de contraseñas.&lt;/p&gt;

&lt;p&gt;Cuanto más puedas optimizar tu función, más rápida se vuelva, más debil tu esquema es. MD5 y SHA1, incluso cifradores de bloque convencionales como DES, son diseñados para ser rápidos. MD5, SHA1 y DES son hasheadores de contraseña débiles. En las CPU modernas, crudos bloques de construcción encriptada como DES y MD5 pueden ser&lt;a href=&#34;http://citeseer.ist.psu.edu/cache/papers/cs/5811/http:zSzzSzwww.dmi.ens.frzSz~porninzSzbitslice.pdf/pornin99automatic.pdf&#34; target=&#34;_blank&#34;&gt; separados en bits&lt;/a&gt;, &lt;a href=&#34;http://www.openwall.com/john/doc/CHANGES.shtml&#34; target=&#34;_blank&#34;&gt;vectorizados y paralelizados&lt;/a&gt; para hacer búsquedas de contraseña rápidas como un rayo. Dejar &lt;a href=&#34;http://www.east.isi.edu/~bschott/pubs/grembowski02comparative.pdf&#34; target=&#34;_blank&#34;&gt;fuera de juego a las implementaciones FPGA&lt;/a&gt; costó sólo cientos de dólares.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Usar funciones hash caseras para autenticar las contraseñas es tan ingenuo como usar funciones hash salt. No lo hagas.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;¿Qué es lo nuevo aquí?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Primero, lo que tu sistema operativo ya te da&lt;/strong&gt;: un esquema de contraseñas &amp;#8220;optimizado&amp;#8221; para ser computacionalmente caro. El más famoso de estos es el esquema FreeBSD MD5 de &lt;a href=&#34;http://en.wikipedia.org/wiki/Poul-Henning_Kamp&#34; target=&#34;_blank&#34;&gt;PHK&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;La diferencia entre el esquema de PHK y el que estabas por usar para tu carrito de compras 2.0 es simple. Estabas por aplicar MD5 en un salt y la contraseña y luego guardar el hash. PHK aplica MD5 por miles de iteraciones. Ésto es lo que llamamos &amp;#8220;&lt;em&gt;stretching&lt;/em&gt;&amp;#8221; (extenderse).&lt;/p&gt;

&lt;p&gt;El esquema MD5 de PHK es sencillo de codificar y está incluido en los sistemas operativos Linux y BSD. Si tienes que elegir entre el código PHP que tienes y el esquema de PHK, elige el de PHK o fallarás la auditoría PCI. [*]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;La respuesta más simple es &amp;#8220;hashing adaptativo&amp;#8221;&lt;/strong&gt;(adaptive hashing), el cual Neils Provos y David Mazieres inventaron para OpenBSD en 1999. Su esquema original&lt;a href=&#34;http://www.usenix.org/events/usenix99/provos/provos_html/node1.html&#34; target=&#34;_blank&#34;&gt; es llamado &amp;#8220;bcrypt&lt;/a&gt;&amp;#8220;, pero la idea es más importante que el algoritmo.&lt;/p&gt;

&lt;p&gt;Hay tres grandes diferencias entre Provos-Mazieres y el esquema de PHK:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Bcrypt fue inventado por dos hombres inteligentes y el de PHK fue&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;inventado sólo por un hombre inteligente. Eso es literalmente el doble de inteligente.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Bcrypt usa Blowfish en lugar de MD5. Blowfish es un cifrador en bloque con un notoriamente caro tiempo de configuración. Optimizar Blowfish para que sea más rápido, tendrías que contribuir con un importante avance en la criptografía. Nuestros practicantes de seguridad son todos &amp;#8220;apostadores&amp;#8221;, y usualmente nos gusta apostar a lo que nos &amp;#8220;demande importantes avances en criptografía&amp;#8221;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Provos y Mazieres extendieron Blowfish. Se llaman los suyos&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Eksblowfish&amp;rdquo;. Eksblowfish es más deplorable: el tiempo de configuración&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;tarda más que Blowfish. ¿Cuánto más? *Tu llamado. *Puedes hacer que un intento con contraseña simple lleve milisegundos, o puedes hacer que tarde horas.&lt;/p&gt;

&lt;p&gt;¿Por qué bcrypt es como un gran acierto? Piensa en el problema desde dos perspectivas: el servidor, y el atacante.&lt;/p&gt;

&lt;p&gt;Primero, el servidor: tienes decenas de miles de logins por hora, o decenas por segundo. Comparado con los impactos en la base de datos y los refrescos de página y E/S, el checkeo de contraseña es despreciable. No te preocupes si tu testeo de contraseña tarda el doble de tiempo, o incluso diez veces más, porque los hash no caen dentro del rango &lt;sup&gt;80&lt;/sup&gt;&amp;frasl;&lt;sub&gt;20&lt;/sub&gt;.&lt;/p&gt;

&lt;p&gt;Ahora, el atacante. Esto es fácil. El atacante se preocupa mucho si los tests de contraseña toman el doble de tiempo. Si un testeo de contraseña tarda el doble, el tiempo total de crackeo de contraseña tarda también el doble.&lt;/p&gt;

&lt;p&gt;¿Comprendes?&lt;/p&gt;

&lt;p&gt;La mayor ventaja del hashing adaptativo es que puedes ajustarlo. De la misma forma que las computadoras son cada vez más rápidas, el mismo bloque de código continúa produciendo contraseñas que son difíciles de crackear.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Finalmente, como tu abogado en este asunto, me veo obligado a informarte sobre SRP.&lt;/strong&gt;****&lt;/p&gt;

&lt;p&gt;SRP es el protocolo de Contraseña Remota Segura de Stanford (&lt;a href=&#34;http://srp.stanford.edu/design.html&#34; target=&#34;_blank&#34;&gt;Stanford Secure Remote Password&lt;/a&gt; protocol). Es un sistema de criptografía de clave pública diseñado para almacenar y validar contraseñas de forma segura sin guardarlas o transmitirlas sin cifrar.&lt;/p&gt;

&lt;p&gt;Este objetivo de diseño es mucho mejor de lo que suena, ya que hay usualmente algunas cuestiones inevitables en el diseño de sistemas de contraseñas:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Puedes guardar el hash de la contraseña. Ahora si pierdes la base de datos de contraseñas, no expones las contraseñas efectivas. No obstante, tampoco tú sabes el valor real de las contraseñas, lo que significa que para validarlas, tus clientes necesitan enviártelas sin encriptar.&lt;/li&gt;
&lt;li&gt;Puedes usar un esquema de desafío-respuesta (*challenge-response), *donde ambos lados usan un problema matemático para demostrarse entre sí que conocen la contraseña, pero ninguno de los dos lados envía la contraseña sobre la red. Estos esquemas son buenos, pero no funcionan si ambos lados no tienen acceso al valor real de la contraseña – en otras palabras, el servidor tiene que almacenarla sin encriptar.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;La mayoría de los practicantes elegirán el esquema de hashing. Ambos ataques – robo de bases de datos y contraseñas robadas por &lt;em&gt;phishing –&lt;/em&gt; ocurren todo el tiempo. Pero las bases de datos robadas comprometen más contraseñas.&lt;/p&gt;

&lt;p&gt;SRP resuelve las compensaciones. Es una extensión de Diffie-Hellman. El detalle destacado de esta publicación: en lugar de almacenar un hash de la contraseña con &lt;em&gt;salt&lt;/em&gt;, almacenas un “verificador”, el cual es un número elevado a la (obviamente muy grande) potencia del módulo N del hash de la contraseña.&lt;/p&gt;

&lt;p&gt;Si entiendes DH, SRP simplemente va a tener sentido para ti. Si no, &lt;a href=&#34;http://en.wikipedia.org/wiki/Diffie-Hellman&#34; target=&#34;_blank&#34;&gt;Wikipedia te explicará mejor que yo&lt;/a&gt;. Para la prueba del próximo miércoles, necesitas saber:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SRP está relacionado con Diffie-Hellman.&lt;/li&gt;
&lt;li&gt;SRP es un protocol &lt;em&gt;desafío-respuesta&lt;/em&gt; que permite al servidor que demuestre que sabes la contraseña sin que la misma se inserte en la red.&lt;/li&gt;
&lt;li&gt;SRP no require que almacenes las contraseñas en texto plano; sino que las guardas en un verificador criptográfico no-revertible.&lt;/li&gt;
&lt;li&gt;Los verificadores SRP “Cracking” rápidamente podrían involucrar un avance singificativo a la criptografía.&lt;/li&gt;
&lt;li&gt;SRP es lo suficientemente simple para correr sin Javascript.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;¡Increíble! ¿Por qué no estás usando SRP en este preciso momento? Te dare tres razones:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SRP está patentado&lt;/li&gt;
&lt;li&gt;Para hacerlo funcionar de forma segura en un navegador, tienes que cubrir la página de login sobre SSL; de otra forma, &lt;a href=&#34;http://www.matasano.com/log/251/oh-meebo/&#34; target=&#34;_blank&#34;&gt;como Meebo&lt;/a&gt;, te enredarás en un esquema que puede ser mordido por cualquiera que pueda hacer *phishing *una página web.&lt;/li&gt;
&lt;li&gt;SRP es fácil de estropear, por lo que los primeros N mainstreams de Rails o PHP o las implementaciones Pylons SRP serán trivialmente bypassables por al menos el primer año hasta que sean implementadas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;¿Qué hemos aprendido?&lt;/p&gt;

&lt;p&gt;Aprendimos que si es 1975, puedes incendiar ARPANet con un ataque de Tabla arcoiris. Si es 2007, un ataque de ese tipo te incendia a tí, aprendimos que deberías volver a 1975 y esperar 30 años antes de intentar diseñar un esquema de hashing de contraseñas.&lt;/p&gt;

&lt;p&gt;Aprendimos que si hemos aprendido algo de este post, deberíamos consultar a nuestros amigos y vecinos en el campo de seguridad pidiendo ayuda con nuestros esquemas de contraseñas, porque nadie va a encontrar el error que termine el juego de nuestros esquemas MD5 hasta el momento después de que el número de tarjeta de crédito de mi madre sea vendido en un puesto de ruta en Tallinn, Estonia.&lt;/p&gt;

&lt;p&gt;Aprendimos que en un esquema de hashing de contraseñas, la velocidad es el enemigo. Aprendimos que MD5 fue diseñado para velocidad. Entonces, aprendimos que MD5 es el enemigo. También Jeff Atwood y Richard Skrenta.&lt;/p&gt;

&lt;p&gt;Finalmente, aprendimos que si queremos almacenar contraseñas en forma segura tenemos tres opciones razonables: el esquema MD5 de PHK, el esquema Bcrypt de Provos-Maziere y SRP. Aprendimos que la opción correcta es Bcrypt.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;[∗] &lt;em&gt;Disclaimer: I cannot actually flunk your PCI audit.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Fuente | &lt;a href=&#34;http://chargen.matasano.com/chargen/2007/9/7/enough-with-the-rainbow-tables-what-you-need-to-know-about-s.html&#34; target=&#34;_blank&#34;&gt;Matasano Security&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BotBrew basil, Compila, instala y ejecuta aplicaciones Linux en Android</title>
      <link>https://elbauldelprogramador.com/botbrewcompila-instala-y-ejecuta-aplicaciones-linux-en-android/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/botbrewcompila-instala-y-ejecuta-aplicaciones-linux-en-android/</guid>
      <description>&lt;p&gt;Leyendo noticias en mi lector RSS he encontrado un artículo interesante que comparto con vosotros.
Se trata de un programa que permitirá tener un sistema debian básico en el dispostivo.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Paso 1:&lt;/strong&gt; Instalar busybox (Herramienta que provee de varias utilidades estándares de Unix) desde la play Store, (Requiere &lt;a href=&#34;https://elbauldelprogramador.com/rootear-samsung-galaxy-s-gt-i9003/&#34; title=&#34;Rootear Samsung Galaxy S GT-I9003&#34;&gt;root&lt;/a&gt;) En caso de que el teléfono no esté rooteado, puedes seguir los pasos indicados en el vídeo de más abajo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Paso 2:&lt;/strong&gt; Para conseguir que tu dispositivo sea aún más poderoso, instala &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.botbrew.basil&#34;&gt;BostBrew Basil&lt;/a&gt;, esta aplicación inicializa el sistema base y permite manejar la instalación de paquetes mediante Dpkg y Apt en lugar de Opkg. Permitiendo instalar algunos paquetes linux.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Paso 3:&lt;/strong&gt; Instalar los paquetes necesarios&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Conectamos el teléfono al pc mediante adb con &lt;code&gt;./adb shell&lt;/code&gt; y ejecutamos los comandos de &lt;strong&gt;botbrew&lt;/strong&gt; así:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;/data/botbrew-basil/init -- comando aquí
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Es decir, para instalar un entorno debian completo, se haría lo siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;sh-4.1# /data/botbrew-basil/init -- apt-get install repository-emdebian
sh-4.1# /data/botbrew-basil/init -- apt-get install debianbotbrew-debian-minimal
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Existe la posibilidad de instalar el paquete &lt;strong&gt;botbrew-wrapper&lt;/strong&gt; para evitar tener que preceder los comandos con la ruta mencionada arriba:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;shell@android:/ &lt;span class=&#34;c1&#34;&gt;# /data/botbrew-basil/init -- apt-get install botbrew-wrapper&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A partir de ahora basta con ejecutar el comando &lt;strong&gt;botbrew2&lt;/strong&gt; y seguidamente los comandos deseados, por ejemplo, para isntalar gcc y g++:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;shell@android:/ &lt;span class=&#34;c1&#34;&gt;# su&lt;/span&gt;
shell@android:/ &lt;span class=&#34;c1&#34;&gt;# botbrew2&lt;/span&gt;
shell@android:/ &lt;span class=&#34;c1&#34;&gt;# apt-get install gcc g++&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Instalados los compiladores, podemos ejecutar aplicaciones escritas en C/C++, probemos con un hola Mundo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Hola mundo!&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Compilado y ejecutado desde Android&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ya solo queda compilarlo y ejecutarlo, dejo una captura de pantalla como prueba de que funciona:&lt;/p&gt;

&lt;figure&gt;
    &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2012/12/Screenshot_2012-12-04-17-14-141.png&#34; alt=&#34;&#34; title=&#34;Compilando código C/C++ en android&#34; width=&#34;800px&#34; height=&#34;480px&#34;&gt;&lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;Y no solo eso, también podemos instalar python:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@android&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# apt-get install python2.7-minimal&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@android&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# cd /tmp&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@android&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# echo &amp;quot;print &amp;quot;Hola Mundo desde Android!&amp;quot;&amp;quot; &amp;gt;&amp;gt; hello.py&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@android&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# python2.7 hello.py&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Hola&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Mundo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;desde&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Android&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;De nuevo, com prueba, una captura de pantalla:&lt;/p&gt;

&lt;figure&gt;
    &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2012/12/Screenshot_2012-12-04-17-32-141.png&#34; alt=&#34;&#34; title=&#34;Ejecutando programas en python desde Android&#34; width=&#34;800px&#34; height=&#34;480px&#34;&gt;&lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;A continuación un vídeo explicando el proceso de instalación de busybox sin permisos de root:&lt;/p&gt;

&lt;h3 id=&#34;referencias&#34;&gt;Referencias&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Geeknizer&lt;/em&gt; »» &lt;a href=&#34;http://geeknizer.com/install-run-linux-applications-on-android/&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;XDA-Developers&lt;/em&gt; »» &lt;a href=&#34;http://forum.xda-developers.com/showpost.php?p=26261600&amp;postcount=119&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Buenas prácticas para el Diseño de una API RESTful Pragmática</title>
      <link>https://elbauldelprogramador.com/buenas-practicas-para-el-diseno-de-una-api-restful-pragmatica/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/buenas-practicas-para-el-diseno-de-una-api-restful-pragmatica/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Esta es una traducción lo más literal posible del artículo original, ya que quería preservar la opinión personal del autor así como también el destacable trabajo de investigación y análisis que realizó.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tu modelo de datos ha empezado a estabilizarse y es el momento de crear una API pública para tu aplicación web. Te das cuenta de que es difícil hacer cambios significativos a tu API una vez que fue liberada, quieres lo mejor y lo antes posible. Ahora, en internet no escasean opiniones sobre diseño de APIs. Pero, debido a que no hay un standard adoptado popularmente que funcione en todos los casos, te quedas con un manojo de opciones: ¿Qué formatos deberías aceptar? ¿Cómo deberías autenticar? ¿Debería tu API ser versionada?&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Diseñando una API para &lt;a href=&#34;http://www.supportfu.com/&#34;&gt;SupportFu&lt;/a&gt; (una alternativa para &lt;a href=&#34;http://www.supportfu.com/zendesk-alternative&#34;&gt;Zendesk&lt;/a&gt;), intenté encontrar respuestas pragmáticas a estas preguntas. Mi objetivo para la &lt;a href=&#34;http://dev.supportfu.com/api/v1&#34;&gt;API de SupportFu&lt;/a&gt; es que sea fácil de usar, facil de adoptar y lo suficientemente flexible para implementarla en nuestras propias interfaces de usuario.&lt;/p&gt;

&lt;h2 id=&#34;tl-dr&#34;&gt;TL,DR&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Usa SSL en todos lados, sin excepciones&lt;/li&gt;
&lt;li&gt;Una API es tan buena como lo es su documentación – por lo tanto realiza una buena documentación&lt;/li&gt;
&lt;li&gt;Versiona a través de la URL, no de los encabezados&lt;/li&gt;
&lt;li&gt;Usa parámetros de consulta para filtros avanzados, ordenamiento y búsqueda&lt;/li&gt;
&lt;li&gt;Provee una forma de limitar cuáles campos son devueltos desde la API&lt;/li&gt;
&lt;li&gt;Devuelve algo útil de las peticiones POST, PATCH &amp;amp; PUT&lt;/li&gt;
&lt;li&gt;HATEOAS todavía no es muy práctico&lt;/li&gt;
&lt;li&gt;Usa JSON donde sea posible, XML sólo si tienes la obligación&lt;/li&gt;
&lt;li&gt;Deberías usar camelCase con JSON, pero snake_case es un 20% más fácil de leer&lt;/li&gt;
&lt;li&gt;Usa Pretty Print por defecto y asegura que gzip esté soportado&lt;/li&gt;
&lt;li&gt;No uses respuestas encapsuladas por defecto&lt;/li&gt;
&lt;li&gt;Considera usar JSON para cuerpos de peticiones POST, PUT y PATCH&lt;/li&gt;
&lt;li&gt;Pagina usando encabezados Link&lt;/li&gt;
&lt;li&gt;Provee una forma de cargar automáticamente representaciones de datos relacionados al recurso solicitado&lt;/li&gt;
&lt;li&gt;Provee una forma de sobreescribir el método HTTP&lt;/li&gt;
&lt;li&gt;Provee encabezados de respuesta útiles para controles de tráfico (rate limiting)&lt;/li&gt;
&lt;li&gt;Usa autenticación basada en tokens, transportado en OAuth2 donde se necesite delegación&lt;/li&gt;
&lt;li&gt;Incluir encabezados de respuesta que faciliten el caché&lt;/li&gt;
&lt;li&gt;Define un error de carga útil (payload) que sea consumible&lt;/li&gt;
&lt;li&gt;Utilizar efectivamente los códigos de error HTTP&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;1-requisitos-fundamentales-para-la-api&#34;&gt;1. Requisitos fundamentales para la API&lt;/h2&gt;

&lt;p&gt;Muchas de las opiniones sobre diseño de API que aparecen en la web son discusiones académicas en torno a interpretaciones subjetivas de las normas difusas en lugar de lo que tiene sentido en el mundo real. Mi objetivo con este artículo es describir las mejores prácticas para una API pragmática diseñada para aplicaciones web de hoy en día. No hago ningún intento de satisfacer un standard si no parece viable. Para ayudar a guiar el proceso de toma de decisiones, he escrito algunos de los requisitos que la API debe cubrir:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Debería utilizar estándares web donde tengan sentido&lt;/li&gt;
&lt;li&gt;Debería ser amigable para el desarrollador y ser explorable mediante una barra de direcciones del navegador&lt;/li&gt;
&lt;li&gt;Debería ser sencilla, intuitiva y consistente para que la adopción no sólo sea fácil, sino también agradable&lt;/li&gt;
&lt;li&gt;Debería proporcionar suficiente flexibilidad para potenciar mayoritariamente la UI &lt;a href=&#34;http://www.supportfu.com/&#34;&gt;SupportFu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Debería ser eficiente, manteniendo el equilibrio con los demás requisitos&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Una API es una interfaz de usuario (UI) para un desarrollador – al igual que cualquier UI, es importante asegurar que la experiencia del usuario esté pensada cuidadosamente!&lt;/p&gt;

&lt;h2 id=&#34;2-usa-acciones-y-urls-restful&#34;&gt;2. Usa acciones y URLs RESTful&lt;/h2&gt;

&lt;p&gt;Si hay una cosa que ha ganado amplia adopción, son los principios REST. Estos fueron presentados por primera vez por &lt;a href=&#34;http://roy.gbiv.com/&#34;&gt;Roy Felding&lt;/a&gt; en el &lt;a href=&#34;http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm&#34;&gt;Capítulo 5&lt;/a&gt; de su disertación sobre &lt;a href=&#34;http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm&#34;&gt;arquitecturas de software ubicadas en redes de trabajo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Los fundamentales principios de &lt;a href=&#34;https://en.wikipedia.org/wiki/Representational_state_transfer&#34;&gt;REST&lt;/a&gt; se basan en separar tu API en recursos lógicos. Estos recursos son manipulados usando peticiones HTTP donde el método (GET, POST, PUT, PATCH, DELETE) tienen un significado específico.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¿Pero qué puede hacer un recurso?&lt;/strong&gt; Bueno, estos deberían ser &lt;a href=&#34;https://blog.apigee.com/detail/restful_api_design_nouns_are_good_verbs_are_bad&#34;&gt;sustantivos (¡no verbos!)&lt;/a&gt; que tengan sentido desde una perspectiva del consumidor de la API. Aunque tus modelos internos pueden mapear cuidadosamente con los recursos, no es necesario que sea un mapeo uno-a-uno. La clave es no filtrarse ningún detalle irrelevante de implementación. Por ejemplo, algunos de los sustantivos de SupportFu podrían ser &lt;em&gt;ticket&lt;/em&gt;, &lt;em&gt;usuario&lt;/em&gt; y &lt;em&gt;grupo&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Una vez que tienes tus recursos definidos, necesitas identificar qué acciones aplican a ellos y cómo deberían relacionarse con tu API. Los principios REST proveen estrategias para manejar acciones &lt;a href=&#34;http://en.wikipedia.org/wiki/Create,_read,_update_and_delete&#34;&gt;CRUD&lt;/a&gt; usando métodos HTTP relacionados de la siguiente forma:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;GET /tickets&lt;/em&gt;- Devuelve una lista de tickets&lt;/li&gt;
&lt;li&gt;&lt;em&gt;GET /tickets/12&lt;/em&gt;- Devuelve un ticket específico&lt;/li&gt;
&lt;li&gt;&lt;em&gt;POST /tickets&lt;/em&gt;- Crea un nuevo ticket&lt;/li&gt;
&lt;li&gt;&lt;em&gt;PUT /tickets/12&lt;/em&gt;- Actualiza el ticket #12&lt;/li&gt;
&lt;li&gt;&lt;em&gt;PATCH /tickets/12&lt;/em&gt;- Actualiza parcialmente el ticket #12&lt;/li&gt;
&lt;li&gt;&lt;em&gt;DELETE /tickets/12&lt;/em&gt;- Elimina el ticket #12&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La grandeza de REST es que estas impulsando métodos HTTP existentes a implementar funcionalidades importantes en sólo un simple endpoint &lt;em&gt;/tickets&lt;/em&gt;. No hay convención de nombres de métodos para seguir y la estructura URL es limpia y clara.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¿El nombre del Endpoint debería ser singular o plural?&lt;/strong&gt; La regla mantenlo-simple (keep-it-simple) aplica aquí. Si bien tu gramática interna te dirá que está mal describir una instancia única de un recurso utilizando el plural, la respuesta pragmática es mantener el formato de la URL consistente y siempre usar plural. No tener que lidiar con plurales irregulares (person/people, goose/geese) hace más simple la vida del consumidor de la API y es más sencillo para el proveedor de la API implementarla (como los más modernos frameworks manejarán nativamente &lt;em&gt;/tickets&lt;/em&gt; y &lt;em&gt;/tickets/12&lt;/em&gt; bajo un controlador comun).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¿Pero cómo lidiar con las relaciones?&lt;/strong&gt; Si una relación puede existir con un sólo recurso, los principios REST proveen una guía útil. Veamos esto con un ejemplo. Un ticket en &lt;a href=&#34;http://www.supportfu.com/&#34;&gt;SupportFu&lt;/a&gt; consiste en un número de mensajes. Estos mensajes pueden ser lógicamente mapeados al endpoint /tickets de la siguiente forma:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;GET /tickets/12/messages&lt;/em&gt; - Devuelve una lista de mensajes para el ticket #12&lt;/li&gt;
&lt;li&gt;&lt;em&gt;GET /tickets/12/messages/5&lt;/em&gt; - Devuelve el mensaje #5 para el ticket #12&lt;/li&gt;
&lt;li&gt;&lt;em&gt;POST /tickets/12/messages&lt;/em&gt; - Crea un nuevo mensaje en el ticket #12&lt;/li&gt;
&lt;li&gt;&lt;em&gt;PUT /tickets/12/messages/5&lt;/em&gt; – Actualiza el mensaje #5 para el ticket #12&lt;/li&gt;
&lt;li&gt;&lt;em&gt;PATCH /tickets/12/messages/5 -&lt;/em&gt; Actualiza parcialmente el mensaje #5 para el ticket #12&lt;/li&gt;
&lt;li&gt;&lt;em&gt;DELETE /tickets/12/messages/5&lt;/em&gt; - Borra el mensaje #5 para el ticket #12&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Alternativamente, si una relación puede existir independientemente del recurso, tiene sentido incluir sólo un identificador en la representación de la salida del recurso. El consumidor de la API debería entonces tener que acertar al endpoint de la relación. Sin embargo, si la relación es comunmente requerida junto con el recurso, la API podría ofrecer funcionalidad para automáticamente incluir la representación de la relación y evitar el segundo impacto en la API.
&lt;strong&gt;¿Qué ocurre con las acciones que no corresponden a las operaciones CRUD?&lt;/strong&gt;
Aquí es donde las cosas pueden confundirse. Hay un número de enfoques:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Reestructura la acción para que aparezca como un campo de un recurso. Esto funciona si la acción no toma parámetros. Por ejemplo, un acción “activate” puede ser asignada a un campo booleano &lt;em&gt;activated&lt;/em&gt; y actualizado vía PATCH al recurso.&lt;/li&gt;
&lt;li&gt;Tratalo como un sub-recurso con principios REST. Por ejemplo, la API de GitHub te permite “&lt;a href=&#34;http://developer.github.com/v3/gists/#star-a-gist&#34;&gt;star a gist&lt;/a&gt;“(marcar como importante) con &lt;em&gt;PUT /gists/:id/star&lt;/em&gt; y “&lt;a href=&#34;http://developer.github.com/v3/gists/#unstar-a-gist&#34;&gt;unstar&lt;/a&gt;” (desmarcar) con DELETE /gists/:id/star.&lt;/li&gt;
&lt;li&gt;A veces realmente no tienes forma de mapear la acción a una estructura REST apropiada. Por ejemplo, una búsqueda multi-recurso no tiene sentido ser asignada a un endpoint de un recurso específico. En este caso, &lt;em&gt;/search&lt;/em&gt; podría tener más sentido incluso si no es un sustantivo. Esto está BIEN – sólo realiza lo que sea correcto desde la perspectiva del consumidor de la API y asegúrate de que esté claramente documentado para evitar confusiones.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;3-ssl-en-todos-lados-todo-el-tiempo&#34;&gt;3. SSL en todos lados – todo el tiempo&lt;/h2&gt;

&lt;p&gt;Usa siempre SSL. Sin excepciones. Hoy, tus APIs web pueden ser accedidas desde cualquier lado donde haya internet (como librerías, cafeterías, aeropuertos, entre otros). No todos son seguros. Muchos no encriptan las comunicaciones, permitiendo facilmente ser espiados o falsificados si son interceptadas las credenciales de autenticación.&lt;/p&gt;

&lt;p&gt;Otra ventaja de usar siempre SSL es que garantiza que las comunicaciones encriptadas simplifiquen los esfuerzos de autenticación – puedes salir simplemente con los tokens de acceso en vez de tener que firmar cada petición a la API.&lt;/p&gt;

&lt;p&gt;Hay que tener cuidado con los accesos no-SSL a las URLs de la API. &lt;strong&gt;NO&lt;/strong&gt; las redirecciones a sus homólogas SSL. Es recomendable que lances un error. La última cosa que quieres para tus clientes pobremente configurados es enviar peticiones a un endpoint sin encriptar, sólo para ser redireccionados silenciosamente al verdadero endpoint encriptado.&lt;/p&gt;

&lt;h2 id=&#34;4-documentación&#34;&gt;4. Documentación&lt;/h2&gt;

&lt;p&gt;Una API es buena tanto como lo sea su documentación. Los docs deberían ser fáciles de encontrar y de acceso público. Muchos desarrolladores revisarán la documentación antes de realizar cualquier esfuerzo para integrarla. Cuando los docs están escondidos dentro de un archivo PDF o están permitido sólo para usuarios identificados, no son entonces sólo difíciles de encontrar sino que también dificultan la búsqueda.&lt;/p&gt;

&lt;p&gt;Los documentos deberían mostrar ejemplos de ciclos completos de petición/respuesta. Preferentemente, las peticiones deberían poder ser “pegadas” – tanto los hipervínculos deberían poder ser pegados en un navegador como los ejemplos de código deberían poder ser pegados en una consola. &lt;a href=&#34;http://developer.github.com/v3/gists/#list-gists&#34;&gt;GitHub&lt;/a&gt; y &lt;a href=&#34;https://stripe.com/docs/api&#34;&gt;Strip&lt;/a&gt; hacen un muy buen trabajo en este aspecto.&lt;/p&gt;

&lt;p&gt;Una vez que liberes una API pública, te comprometes a no romper cosas sin previo aviso. La documentación debe incluir información y detalles sobre futuras actualizaciones a la API que sean visibles al exterior. Las actualizaciones deben ser entregadas a través de un blog (es decir, una lista de cambios) o una lista de correo (preferiblemente ambos).&lt;/p&gt;

&lt;h2 id=&#34;5-versionado&#34;&gt;5. Versionado&lt;/h2&gt;

&lt;p&gt;Siempre versiona tu API. El versionado te ayuda a iterar más rápido y evitar peticiones inválidas desde endpoints actualizados. Además te ayuda a resolver cualquier transición importante de versión de la API mientras continúas ofreciendo viejas versiones de la API por un período de tiempo.&lt;/p&gt;

&lt;p&gt;Hay opiniones cruzadas respecto si &lt;a href=&#34;http://stackoverflow.com/questions/389169/best-practices-for-api-versioning&#34;&gt;la versión de la API debería ser incluida en la URL o en el encabezado&lt;/a&gt;. Académicamente hablando, debería probablemente estar en el encabezado. Sin embargo, la versión necesita estar en la URL para asegurar la posibilidad de explorar en el navegador los recursos a través de las versiones (recuerda los requerimientos de la API especificados al inicio del artículo).&lt;/p&gt;

&lt;p&gt;Soy un gran fanático del &lt;a href=&#34;https://stripe.com/docs/api#versioning&#34;&gt;alcance que Stripe ha tomado respecto al versionado de la API&lt;/a&gt; - la URL tiene un número de versión principal (v1), pero la API tiene las sub-versiones basadas en fechas que pueden ser elegidas mediante un encabezado de petición HTTP personalizado. En este caso, la versión principal proporciona la estabilidad estructural de la API en su conjunto, mientras que las sub-versiones representan cambios más pequeños (campos inhabilitados, cambios en el endpoint, etc).&lt;/p&gt;

&lt;p&gt;Una API nunca va a ser completamente estable. El cambio es inevitable. Lo importante es cómo se gestiona el cambio. Anuncios de fechas y planificaciones bien documentados puede ser una buena práctica para muchas APIs. Todo se reduce a lo que es razonable teniendo en cuenta la industria y los posibles consumidores de la API.&lt;/p&gt;

&lt;h2 id=&#34;6-filtrado-ordenación-y-búsqueda-en-los-resultados&#34;&gt;6. Filtrado, ordenación y búsqueda en los resultados&lt;/h2&gt;

&lt;p&gt;Lo mejor es mantener la URL base de recursos tan simple como sea posible. Filtros de resultados complejos, requisitos de ordenamiento y búsqueda avanzada (cuando se limita a un solo tipo de recurso) pueden ser implementados fácilmente como parámetros de consulta en la parte superior de la URL base. Veamos esto en más detalle:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Filtrado:&lt;/strong&gt; Usa un único parámetro de consulta por cada campo que implemente el filtro. Por ejemplo, cuando se pide una lista de tickets del endpoint &lt;em&gt;/tickets&lt;/em&gt;, podrías querer limitarla a sólo los que están en estado abierto. Esto puede ser logrado con una petición como &lt;em&gt;GET /tickets?state=open&lt;/em&gt;. En este caso, state es el parámetro de la consulta que implementa el filtro.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ordenación:&lt;/strong&gt; Similar al filtrado, un parámetro genérico &lt;em&gt;sort&lt;/em&gt; puede ser usado para describir las reglas de ordenamiento. Organiza los requerimientos de ordenamiento complejos permitiendo que el parámetro de ordenación sea tomado de una lista de campos separados por coma, cada uno con un posible negativo unario para implicar orden descendiente. Veamos algunos ejemplos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;GET /tickets?sort=-priority&lt;/em&gt; – Devuelve una lista de tickets en orden de prioridad descendiente&lt;/li&gt;
&lt;li&gt;_GET /tickets?sort=-priority,created&lt;em&gt;at&lt;/em&gt;- Devuelve una lista de tickets en orden de prioridad descendiente. Con una prioridad específica, los tickets más viejos son ordenados primero.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Búsqueda:&lt;/strong&gt; A veces los filtros básicos no son suficientes y se necesita la posibilidad de realizar una búsqueda completa sobre el texto. Tal vez ya estés usando &lt;a href=&#34;http://www.elasticsearch.org/&#34;&gt;ElasticSearch&lt;/a&gt; u otra búsqueda basada en la tecnología &lt;a href=&#34;http://lucene.apache.org/&#34;&gt;Lucene&lt;/a&gt;. Cuando una búsqueda completa sobre el texto es usada como un mecanismo de devolución de instancias de recurso para un tipo de recurso específico, puede ser expuesto en la API como un parámetro de consulta al endpoint del recurso. Digamos &lt;em&gt;q&lt;/em&gt;. Las consultas de búsqueda deberían ser pasadas directamente al motor de búsqueda y la salida de la API deberían estar en el mismo formato que un lista de resultado normal.
Combinando todo esto, podemos construir consultas como:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;_GET /tickets?sort=-updated&lt;em&gt;at&lt;/em&gt; – Devuelve los tickets recientemente actualizados&lt;/li&gt;
&lt;li&gt;_GET /tickets?state=closed&amp;sort;=-updated&lt;em&gt;at -&lt;/em&gt; Devuelve los tickets recientemente cerrados&lt;/li&gt;
&lt;li&gt;_GET /tickets?q=return&amp;state;=open&amp;sort;=-priority,created&lt;em&gt;at&lt;/em&gt; – Devuelve el ticket abierto de mayor prioridad que menciona la palabra ‘return’&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Alias para las consultas comunes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para hacer que la experiencia con la API sea más agradable para el consumidor promedio, considera empaquetar sets de condiciones dentro de una ruta REST facilmente accesible. Por ejemplo, la consulta de tickets cerrados recientemente puede ser empaquetada como _GET /tickets/recently&lt;em&gt;closed.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;7-limitando-los-campos-que-son-devueltos-por-la-api&#34;&gt;7. Limitando los campos que son devueltos por la API&lt;/h2&gt;

&lt;p&gt;El consumidor de la API no siempre necesita la representación completa de un recurso. La habilidad de seleccionar y elegir los campos devueltos permite el doble beneficio de dejar que el consumidor de la API minimice el tráfico de red y acelere su propio uso de la API.
Usa el parámetro de consulta &lt;em&gt;fields&lt;/em&gt; que tome una lista de campos separados con coma. Por ejemplo, la siguiente petición debería traer sólo la información suficiente para mostrar una lista ordenada de tickets abiertos:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bash GET /tickets?fields=id,subject,customer_name,updated_at&amp;amp;state;=open&amp;amp;sort;=-updated_at&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;8-update-creation-deberían-devolver-una-representación-de-un-recurso&#34;&gt;8. Update &amp;amp; Creation deberían devolver una representación de un recurso&lt;/h2&gt;

&lt;p&gt;Una llamada PUT, POST o PATCH puede hacer modificaciones a los campos del recurso subyacente que no fueron parte de los parámetros provistos (por ejemplo: los campos timestamp created_at o updated_at ). Para evitarle al consumidor de la API tener que consultar nuevamente a la API por un recurso actualizado, agrega el retorno de la actualización (o creación) como parte de la respuesta.
En el caso de un POST que sea un resultado de una creación, usa el &lt;a href=&#34;http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.5&#34;&gt;código de status HTTP 201&lt;/a&gt; e incluye un encabezado &lt;a href=&#34;http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30&#34;&gt;Location&lt;/a&gt; que apunte a la URL del nuevo recurso.&lt;/p&gt;

&lt;h2 id=&#34;9-deberías-hateoas&#34;&gt;9. ¿Deberías HATEOAS?&lt;/h2&gt;

&lt;p&gt;Hay muchas opiniones variadas sobre si el consumidor de la API debería crear hipervínculos o si los hipervínculos deberían ser provistos por la API. Los principios de diseño RESTful especifican &lt;a href=&#34;https://blog.apigee.com/detail/hateoas_101_introduction_to_a_rest_api_style_video_slides&#34;&gt;HATEOAS&lt;/a&gt;, el cual aproximadamente declara que esa interacción con un &lt;em&gt;endpoit&lt;/em&gt; debería definirse en la metadata que viene con la respuesta, y no basada en información que va por fuera de la banda (&lt;em&gt;out-of-band&lt;/em&gt;).
A pesar de que la web generalmente trabaja con los principios HATEOAS (ej, cuando vamos a una portada y seguimos hipervínculos basados en lo que vemos en la página), no creo que estemos listos para HATEOAS en la API todavía. Cuando navegamos en un sitio, las decisiones sobre qué hipervínculos van a ser clickeados se hacen durante la ejecución. Sin embargo, con una API, las decisiones como qué peticiones van a ser enviadas son tomadas cuando el código de integración de la API es escrito, no en tiempo de ejecución. ¿Podrían las decisiones ser aplazadas al tiempo de ejecución? Seguro, de todas maneras, no hay mucho que ganar bajando esa ruta al código ya que el código no estaría disponible para manejar cambios significantes en la API sin romperse. Esto significa que HATEOAS es prometedor pero no está listo para ser protagonista todavía. Algún esfuerzo más tiene que ser realizado para definir los estándars y herramientas al rededor de estos principios para que su potencial sea completamente aprovechado.
Por ahora es mejor asumir que el usuario tiene acceso a la documentación e incluir los identificadores de recursos en la respuesta, la cual el consumidor de la API usará cuando crea hipervínculos. Hay un par de ventajas en utilizar los identificadores – los datos que viajan sobre la red son minimizados y los datos almacenados por los consumidores de la API también son minimizados (ya que son guardados los identificadores cortos, en vez de las URLs que contienen los identificadores).
Además, dado que este post es partidario de incluir los números de versión en la URL, tiene más sentido a largo plazo para el consumidor de la API almacenar los identificadores y no las URLs. Después de todo, el identificador es estable versión por versión pero la URL que representa no lo es!&lt;/p&gt;

&lt;h2 id=&#34;10-sólo-respuestas-json&#34;&gt;10. Sólo respuestas JSON&lt;/h2&gt;

&lt;p&gt;Es tiempo de dejar XML atras en las APIs. Es verborrágico, es difícil de parsear, dificil de leer, su modelo de datos es incompatible con la mayoría de los modelos de datos de los lenguajes de programación y sus ventajas son irrelevantes cuando tus necesidades primarias de respuesta son serializaciones de una representación de datos interna.
No voy a poner mucho esfuerzo en explicar las razones de lo dicho arriba si se puede ver cómo otros (&lt;a href=&#34;http://apiblog.youtube.com/2012/12/the-simpler-yet-more-powerful-new.html&#34;&gt;Youtube&lt;/a&gt;, &lt;a href=&#34;https://dev.twitter.com/docs/api/1.1/overview#JSON_support_only&#34;&gt;Twitter&lt;/a&gt; &amp;amp; &lt;a href=&#34;http://developers.blog.box.com/2012/12/14/v2_api/&#34;&gt;Box&lt;/a&gt;) ya han comenzado el éxodo XML.
Simplemente te dejaré que veas las gráficas de Google Trends (&lt;a href=&#34;http://www.google.com/trends/explore?q=xml+api#q=xml%20api%2C%20json%20api&amp;amp;cmpt=q&#34;&gt;XML API vs JSON API&lt;/a&gt;) para que medites:&lt;/p&gt;

&lt;figure&gt;
    &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2014/01/201305-xml-vs-json-api.png&#34; title=&#34;Buenas prácticas para el Diseño de una API RESTful Pragmática&#34; alt=&#34;Buenas prácticas para el Diseño de una API RESTful Pragmática&#34; width=&#34;817px&#34; height=&#34;237px&#34;&gt;&lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;No obstante, si tu base de clientes consiste en un gran número de clientes empresariales, puedes tener que dar soporte XML de todas maneras. Si debes hacerlo, te surgirá una nueva pregunta:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¿Debería cambiar el tipo del contenido basado en encabezados Accept o basado en la URL?&lt;/strong&gt; Para garantizar la explorabilidad del navegador, debería basarse en la URL. La opción más razonable debería ser agregar una extensión &lt;em&gt;.xml&lt;/em&gt; o &lt;em&gt;.json&lt;/em&gt; al endpoint de la URL .&lt;/p&gt;

&lt;h2 id=&#34;11-snake-case-vs-camelcase-para-el-nombre-de-los-campos&#34;&gt;11. snake_case vs camelCase para el nombre de los campos&lt;/h2&gt;

&lt;p&gt;Si estás usando JSON (JavaScript Object Notation) como tu principal formato de representación, la forma “correcta” de hacer las cosas es seguir la convención de nombres de JavaScript – y esto sinifica camelCase para el nombre de los campos! Si entonces optas por el camino de construir librerias cliente en varios lenguajes, lo mejor es usar la convención de nombres correspondiente al idioma – camelCase para C# y Java, snake_case para python y ruby.&lt;/p&gt;

&lt;p&gt;Para pensar: Siempre sentí que &lt;a href=&#34;http://en.wikipedia.org/wiki/Snake_case&#34;&gt;snake_case&lt;/a&gt; es más fácil para leer que la convención &lt;a href=&#34;http://en.wikipedia.org/wiki/CamelCase&#34;&gt;camelCase&lt;/a&gt; de JavaScript. Pero no tenía ninguna evidencia para respaldar esta “sensación”, hasta ahora. Basado en un &lt;a href=&#34;http://ieeexplore.ieee.org/xpl/articleDetails.jsp?tp=&amp;amp;arnumber=5521745&#34;&gt;estudio visual sobre camelCase y snake_case&lt;/a&gt; (&lt;a href=&#34;http://www.cs.kent.edu/~jmaletic/papers/ICPC2010-CamelCaseUnderScoreClouds.pdf&#34;&gt;PDF&lt;/a&gt;) del 2010, &lt;strong&gt;snake_case es un 20% más facil de leer que camelCase&lt;/strong&gt;! Este impacto en legibilidad puede afectar la explorabilidad de la API y los ejemplos de la documentación.
Muchas JSON APIs populares usan snake_case. Sospecho que esto se debe a la serialización de librerías que siguen las convenciones de nombres de los lenguajes subyacentes que utilizan. Tal vez necesitamos tener librerías de serialización JSON que manejen las transformaciones de convenciones de nombres.&lt;/p&gt;

&lt;h2 id=&#34;12-pretty-print-por-default-y-asegura-que-gzip-sea-soportado&#34;&gt;12. Pretty print por default y asegura que gzip sea soportado&lt;/h2&gt;

&lt;p&gt;Una API que provee salida con compresión de espacios en blanco no es muy divertida de ver desde un navegador. Aunque algún tipo de parámetro de consulta (como &lt;em&gt;?pretty=true&lt;/em&gt;) puede ser provisto para activar pretty printing, una API que utiliza pretty print por default es mucho más accesible. El costo de transferencia de datos extra es insignificante, especialmente cuando lo comparas con el costo de no implementar gzip.&lt;/p&gt;

&lt;p&gt;Considera algunos casos de uso: ¿Qué pasa si un consumidor de la API está debuggeando y en su código imprime los datos recibidos de la API? – Serán legibles por default. O si el consumidor graba en la URL el código que fue generando y lo interpreta directamente desde el navegador – Será legible por default. Éstos son pequeños detalles. Pequeños detalles que hacen a una API agradable de usar!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pero, ¿qué pasa con toda la transferencia extra de datos?&lt;/strong&gt;
Veamos esto con un ejemplo del mundo real. He bajado un poco de datos de la &lt;a href=&#34;https://api.github.com/users/veesahni&#34;&gt;API de GitHub&lt;/a&gt;, la cual usa pretty print por default. También estuve haciendo algunas comparaciones con gzip:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ curl https://api.github.com/users/veesahni &amp;gt; with-whitespace.txt
$ ruby -r json -e &lt;span class=&#34;s1&#34;&gt;&amp;#39;puts JSON JSON.parse(STDIN.read)&amp;#39;&lt;/span&gt; &amp;lt; with-whitespace.txt &amp;gt; without-whitespace.txt
$ gzip -c with-whitespace.txt &amp;gt; with-whitespace.txt.gz
$ gzip -c without-whitespace.txt &amp;gt; without-whitespace.txt.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Los archivos de salida tienen los siguientes tamaños:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;without-whitespace.txt&lt;/em&gt; – 1252 bytes&lt;/li&gt;
&lt;li&gt;&lt;em&gt;with-whitespace.txt&lt;/em&gt; – 1369 bytes&lt;/li&gt;
&lt;li&gt;&lt;em&gt;without-whitespace.txt.gz&lt;/em&gt; – 496 bytes&lt;/li&gt;
&lt;li&gt;&lt;em&gt;with-whitespace.txt.gz&lt;/em&gt; – 509 bytes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En este ejemplo, el caracter en blanco incrementó el tamaño de la salida en un 8.5% cuando gzip no entró en juego y un 2.6% cuando utilizamos gzip. Por otro lado, el acto de comprimir con &lt;strong&gt;gzip en sí mismo provee un 60% de ahorro de ancho de banda&lt;/strong&gt;. Debido a que el costo del pretty print es relativamente pequeño, es mejor utilizar pretty print por default y asegurar que la compresión con gzip esté soportada.&lt;/p&gt;

&lt;p&gt;Para enfatizar este punto, Twitter descubrió que hay un &lt;a href=&#34;https://dev.twitter.com/blog/announcing-gzip-compression-streaming-apis&#34;&gt;80% de ahorro (en algunos casos)&lt;/a&gt; cuando habilita la compresión gzip en su API Streaming. Stack Exchange fue más lejos, nunca devuelve una respuesta que no esté comprimida!&lt;/p&gt;

&lt;h2 id=&#34;13-no-uses-un-envoltorio-por-default-pero-posibilitalo-cuando-sea-necesario&#34;&gt;13. No uses un envoltorio por default, pero posibilitalo cuando sea necesario&lt;/h2&gt;

&lt;p&gt;Muchas APIs empaquetan sus respuestas en envoltorios como este:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;John&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hay un par de justificaciones para hacer esto – facilita incluir metadata adicional o información de paginación, algunos clientes REST no permiten fácil acceso a los encabezados HTTP y las peticiones &lt;a href=&#34;http://en.wikipedia.org/wiki/JSONP&#34;&gt;JSONP&lt;/a&gt; no tienen acceso a sus encabezados. Sin embargo con standards que están siendo rápidamente adoptados como &lt;a href=&#34;http://www.w3.org/TR/cors/&#34;&gt;CORS&lt;/a&gt; y &lt;a href=&#34;http://tools.ietf.org/html/rfc5988#page-6&#34;&gt;Link header from RFC5988&lt;/a&gt;, empaquetar se está volviendo innecesario.
Podemos profundizar a futuro la API manteniéndola sin empaquetamiento por default y empaquetando sólo en casos excepcionales.
&lt;strong&gt;¿Cómo debería usarse un envoltorio en casos excepcionales?&lt;/strong&gt;
Hay 2 situaciones donde un envoltorio es realmente necesario – si la API necesita soportar peticiones cross domain sobre JSONP o si el cliente es incapaz de trabajar con encabezados HTTP.
Las peticiones JSONP vienen con un parámetro adicional de consulta (usualmente llamado &lt;em&gt;callback&lt;/em&gt; o &lt;em&gt;jsonp&lt;/em&gt;) representando el nombre de la función callback. Si este parámetro está presente, la API debería cambiarse a un modo completo de empaquetamiento donde siempre responda con un código de status HTTP 200 y pase el código de status real dentro de la respuesta JSON. Cualquier encabezado HTTP adicional que debería pasar a través de la respuesta debería ser mapeado a los campos JSON, como se ve a continuación:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;callback_function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;status_code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;next_page&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;https://..&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;actual&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;De forma similar, para soportar clientes con HTTP limitado, habilita un parámetro especial de consulta ?envelope=true, el cual debería disparar un empaquetamiento full (sin la función callback JSONP).&lt;/p&gt;

&lt;h2 id=&#34;14-cuerpos-html-post-put-patch-codificados-en-json&#34;&gt;14. Cuerpos HTML POST, PUT &amp;amp; PATCH codificados en JSON&lt;/h2&gt;

&lt;p&gt;Si estás siguiendo el objetivo de este artículo, entonces has adoptado JSON para todas las salidas de la API. Ahora consideremos JSON para la entrada de la API.
Muchas APIs usan URL cifradas en sus cuerpos de las peticiones de la API. El cifrado de URL es exactamente lo que suena – los cuerpos de la petición donde los pares clave-valor están cifrados usando las mismas convenciones que uno usaría para cifrar datos en los parámetros de consulta de URL. Esto es simple, ampliamente soportado y deja el trabajo hecho.&lt;/p&gt;

&lt;p&gt;Sin embargo, el cifrado de URL tiene algunos inconvenientes que lo hacen problemático. No tiene el concepto de tipos de dato. Esto obliga a la API a interpretar cadenas de caracteres y transformarlas en tipos numéricos (por ej integer) o booleanos. Además, no tiene un concepto real de estructura jerárquica.
Aunque hay algunas convenciones que pueden construir estructuras que no siguen el par clave-valor (como agregar [] a una clave para representar un arreglo), esto no tiene comparación con la estructura nativa jerárquica de JSON.
Si la API es simple, cifrar la URL puede ser suficiente. Sin embargo, APIs complejas deberían apegarse a JSON para sus entradas a la API. De cualquier manera, elige una y se consistente en toda la API.
Una API que acepta peticiones POST, PUT y PATCH con cifrado JSON debería también requerir en el encabezado &lt;em&gt;Content-Type&lt;/em&gt; seteado con &lt;em&gt;application/json&lt;/em&gt; o lanzar un código de status HTTP: 415 Unsopported Media Type.&lt;/p&gt;

&lt;h2 id=&#34;15-paginación&#34;&gt;15. Paginación&lt;/h2&gt;

&lt;p&gt;Las APIs con preferencia “envelope” (envoltorio) típicamente incluyen los datos de paginación dentro del mismo envoltorio. Y no los culpo – hasta hace poco, no había mejores opciones. La forma correcta de incluir los detalles de paginación hoy en día es utilizando el &lt;a href=&#34;http://tools.ietf.org/html/rfc5988#page-6&#34;&gt;encabezado Link introducido por RFC 5988&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Una API que usa el encabezado Link puede devolver un set de hipervínculos listos para que el consumidor de la API no tenga que construir los hipervínculos por su propia cuenta. Esto es especialmente importante cuando la paginación está &lt;a href=&#34;https://developers.facebook.com/docs/reference/api/pagination/&#34;&gt;basada en el cursor&lt;/a&gt;. Aquí hay un ejemplo de un encabezado Link utilizado correctamente, obtenido de la documentación de &lt;a href=&#34;http://developer.github.com/v3/#pagination&#34;&gt;GitHub&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Link: &amp;lt;https://api.github.com/user/repos?page&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;3&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;per_page&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;100&amp;gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;next&amp;quot;&lt;/span&gt;, &amp;lt;https://api.github.com/user/repos?page&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;50&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;per_page&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;100&amp;gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;last&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pero esto no es una solución completa para muchas APIs que quieren devolver información adicional de paginación, por ejemplo el conteo del total de resultados disponibles. Una API que requiere enviar un contador puede usar un encabezado HTTP personalizado como &lt;em&gt;X-Total-Count&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;16-representaciones-de-recursos-relacionados-a-los-datos-solicitados-mediante-carga-automática&#34;&gt;&lt;strong&gt;16. Representaciones de recursos relacionados a los datos solicitados mediante carga automática&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Hay muchos casos donde un consumidor de la API necesita cargar datos relacionados (o referenciados) con el recurso que se está solicitando. En vez de pedir que el consumidor haga una solicitud a la API reiteradas veces por esta información, sería mucho más eficiente permitir que los datos relacionados sean devueltos y cargados a través del recurso original en demanda.&lt;/p&gt;

&lt;p&gt;De todos modos, como &lt;a href=&#34;http://idbentley.com/blog/2013/03/14/should-restful-apis-include-relationships/&#34;&gt;esto va contra algunos principios RESTful&lt;/a&gt;, podemos minimizar nuestras desviaciones haciendo entonces el parámetro de consulta &lt;em&gt;embed&lt;/em&gt; (o &lt;em&gt;expand&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;En este caso, &lt;em&gt;embed&lt;/em&gt; podría ser una lista separada por comas de campos a ser embebidos. La notación con punto puede ser usada para referir sub-campos. Por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;GET /tickets/12?embed&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;customer.name,assigned_user
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto debería devolver un ticket con detalles adicionales embebidos, como:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;subject&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;I have a question!&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;summary&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Hi, ....&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;customer&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Bob&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;assigned_user&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;nt&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
   &lt;span class=&#34;nt&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Jim&amp;quot;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Por supuesto, la habilidad de implementar algo así realmente depende de la complejidad interna. Este tipo de embebido puede facilmente resultar en un problema de &lt;a href=&#34;http://stackoverflow.com/questions/97197/what-is-the-n1-selects-issue&#34;&gt;N+1 select&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;17-sobreescribiendo-el-método-http&#34;&gt;17. Sobreescribiendo el método HTTP&lt;/h2&gt;

&lt;p&gt;Algunos clientes HTTP pueden trabajar solo con peticiones simples GET y POST. Para mejorar la accesibilidad a estos clientes limitados, la API necesita proveer una forma de sobreescribir el método HTTP.&lt;/p&gt;

&lt;p&gt;Aunque no hay ningún estandard fuerte aquí, la convención popular es aceptar un encabezado de petición &lt;em&gt;X-HTTP-Method-Override&lt;/em&gt; con un valor de cadena que contenga PUT, PATCH o DELETE.&lt;/p&gt;

&lt;p&gt;Nota que sobreescribir el encabezado debería ser aceptado en peticiones POST. Las peticiones GET nunca deberían &lt;a href=&#34;http://programmers.stackexchange.com/questions/188860/why-shouldnt-a-get-request-change-data-on-the-server&#34;&gt;cambiar datos en el servidor&lt;/a&gt;!&lt;/p&gt;

&lt;h2 id=&#34;18-limitación-de-tráfico-por-ratio-rate-limiting&#34;&gt;18. Limitación de tráfico por ratio (Rate limiting)&lt;/h2&gt;

&lt;p&gt;Para prevenir abusos, una práctica estandard es agregar algún tipo de límite de tráfico a la API. &lt;a href=&#34;http://tools.ietf.org/html/rfc6585&#34;&gt;RFC 6585&lt;/a&gt; introduce el código de status HTTP &lt;a href=&#34;http://tools.ietf.org/html/rfc6585#section-4&#34;&gt;429 Too Many Requests&lt;/a&gt; para controlar esto.
Sin embargo, puede ser muy útil notificar al consumidor de sus límites antes de que se encuentre con ellos. Este es un área en la que actualmente faltan los standards pero existe una cantidad de &lt;a href=&#34;http://stackoverflow.com/questions/16022624/examples-of-http-api-rate-limiting-http-response-headers&#34;&gt;convenciones populares usando encabezados de respuesta HTTP.&lt;/a&gt;
Minimamente, incluye los siguientes encabezados (usando las &lt;a href=&#34;https://dev.twitter.com/docs/rate-limiting/1.1&#34;&gt;convenciones de nombres&lt;/a&gt; de Twitter ya que los encabezados tipicamente no tienen capitalizacion de las palabras del medio):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;X-Rate-Limit-Limit&lt;/em&gt; – El numero de peticiones permitidas en el período actual&lt;/li&gt;
&lt;li&gt;&lt;em&gt;X-Rate-Limit-Remaining&lt;/em&gt; – El número de peticiones que faltan en el período actual&lt;/li&gt;
&lt;li&gt;&lt;em&gt;X-Rate-Limit-Reset&lt;/em&gt; – El número de segundos restantes en el período actual&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;¿Por qué se usa el número de segundos restantes en vez de un time stamp para X-Rate-Limit-Reset?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Un timestamp contiene una cantidad de información útil pero innecesaria como la fecha y probablemente el time-zone. Un consumidor de la API realmente quiere saber cuándo puede enviar la petición nuevamente, y el número de segundos responde a esta pregunta con el mínimo procesamiento adicional al final. Además escapa a problemas relacionados con &lt;a href=&#34;http://en.wikipedia.org/wiki/Clock_skew&#34;&gt;desvíos de reloj&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Algunas APIs usan un timestamp de UNIX (segundos desde la fecha standard 1/1/1970) para X-Rate-Limit-Reset. ¡No hagas lo mismo!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¿Por qué es una mala práctica usar el timestamp UNIX para X-Rate-Limit-Reset?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;La &lt;a href=&#34;http://www.w3.org/Protocols/rfc2616/rfc2616.txt&#34;&gt;spec de HTTP&lt;/a&gt; ya &lt;a href=&#34;http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3&#34;&gt;especifica&lt;/a&gt; el uso del &lt;a href=&#34;http://www.ietf.org/rfc/rfc1123.txt&#34;&gt;formato de fecha RFC 1123&lt;/a&gt; (actualmente usado en los encabezados HTTP &lt;a href=&#34;http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.18&#34;&gt;Date&lt;/a&gt;, &lt;a href=&#34;http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.25&#34;&gt;If-Modified-Since&lt;/a&gt; y &lt;a href=&#34;http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.29&#34;&gt;Last-Modified&lt;/a&gt;). Si fuéramos a especificar un nuevo encabezado HTTP que tome un timestamp de algún tipo, debería seguir las convenciones RFC 1123 en vez de usar timestamps UNIX.&lt;/p&gt;

&lt;h2 id=&#34;19-autenticación&#34;&gt;19. Autenticación&lt;/h2&gt;

&lt;p&gt;Una API RESTful debería ser stateless (sin estado). Esto significa que la petición de autenticación no debería depender de cookies o sesiones. En lugar de ello, cada petición debería venir con algún tipo de credencial de autorización.&lt;/p&gt;

&lt;p&gt;Siempre que se use SSL, las credenciales de autenticación pueden ser simplificadas a un token de acceso generado de forma aleatoria, que es entregado en el campo de nombre de usuario de HTTP Basic Auth.
Lo grandioso de esto es que es completamente navegable con un explorador – éste simplemente abriría un popup pidiéndote que ingreses las credenciales si recibe un código de status &lt;em&gt;401 Unauthorized&lt;/em&gt; desde el servidor.&lt;/p&gt;

&lt;p&gt;De todos modos, este método de autenticación token-over-basic-auth (token sobre autenticación basica) es sólo aceptable en los casos en que sea práctico tener la posibilidad de que el usuario copie un token de una interface de administración del entorno del consumidor de la API.&lt;/p&gt;

&lt;p&gt;En los casos donde no sea posible, &lt;a href=&#34;http://oauth.net/2/&#34;&gt;OAuth 2&lt;/a&gt; debería ser usado para facilitar la transferencia del token seguro a terceros. OAuth 2 usa &lt;a href=&#34;http://tools.ietf.org/html/rfc6750&#34;&gt;tokens Bearer&lt;/a&gt; y además depende de SSL para su encriptación de transporte subyacente.&lt;/p&gt;

&lt;p&gt;Una API que necesita soporte JSONP necesitará un tercer método de autenticación, ya que las peticiones JSONP no pueden enviar credenciales HTTP Basic Auth ni Bearer tokens. En este caso, puede utilizarse un parámetro especial de consulta “access_token”. Nota: hay un problema de seguridad inherente si se usa un parametro de consulta para el token ya que la mayoría de los servidores web almacenan los parámetros de consulta en sus logs.
Para lo que nos interesa, los tres métodos de arriba son sólo formas de transportar el token a través de la frontera de la API. El verdadero token subyacente mismo podría ser idéntico.&lt;/p&gt;

&lt;h2 id=&#34;20-cacheo&#34;&gt;20. Cacheo&lt;/h2&gt;

&lt;p&gt;HTTP provee un framework de cacheo incluido! Todo lo que tienes que hacer es incluir algunos encabezados adicionales en la respuesta de salida y hacer una pequeña validación cuando recibes algún encabezado de petición de entrada.&lt;/p&gt;

&lt;p&gt;Hay 2 alcances: &lt;a href=&#34;http://en.wikipedia.org/wiki/HTTP_ETag&#34;&gt;ETag&lt;/a&gt; y &lt;a href=&#34;http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.29&#34;&gt;Last-Modified&lt;/a&gt;
&lt;strong&gt;ETag&lt;/strong&gt;: Cuando generas una petición, incluye un encabezado HTTP ETag conteniendo un hash o checksum de la representación. Este valor debería cambiar cada vez que la salida cambia. Ahora, si una petición de entrada HTTP contiene un encabezado &lt;em&gt;If-None-Match&lt;/em&gt; con un valor ETag, la API debería devolver un código de status &lt;em&gt;304 Not Modified&lt;/em&gt; en lugar de la salida del recurso.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Last-Modified&lt;/strong&gt; (Último modificado): Básicamente funciona como ETag, excepto en que usa timestamps. El encabezado de respuesta &lt;em&gt;Last-Modified&lt;/em&gt; contiene un timestamp en formato &lt;a href=&#34;http://www.ietf.org/rfc/rfc1123.txt&#34;&gt;RFC 1123&lt;/a&gt; el cual es validado contra &lt;em&gt;If-Modified-Since.&lt;/em&gt; Nótese que la especificación de HTTP ha tenido &lt;a href=&#34;http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3&#34;&gt;3 formatos de fecha diferentes aceptables&lt;/a&gt; y el servidor debería estar preparado para aceptar cualquiera de ellos.&lt;/p&gt;

&lt;h2 id=&#34;21-errores&#34;&gt;21. Errores&lt;/h2&gt;

&lt;p&gt;Sencillamente como una página HTML de error muestra un mensaje de error útil a un visitante, una API debería proveer un mensaje de error útil en un formato conocido. La representación de un error debería no ser diferente a la representación de cualquier recurso, con su propio set de campos.&lt;/p&gt;

&lt;p&gt;La API debería devolver siempre códigos de status HTTP prácticos. Los errores de la API generalmente caen dentro de 2 tipos: la serie 400 de códigos de status para problemas en el cliente y la serie 500 de códigos de status para problemas en el servidor. Como mínimo, la API debería estandarizar que todos los errores de la serie 400 vengan en formato de error JSON. Si es posible (por ejemplo si los balanceadores de carga y proxies reversos pueden crear cuerpos de error personalizables), este debería extender la serie de códigos de error 500.&lt;/p&gt;

&lt;p&gt;El cuerpo de un error JSON debería proveer algunas cosas para el desarrollador – un mensaje de error útil, un código de error único (que pueda ser buscado para más detalles en la documentación) y una descripción detallada. Una representación de salida JSON de esta forma podría ser:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;code&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1234&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;message&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Something bad happened :(&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;description&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;More details about the error here&amp;quot;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Los errores de validación para peticiones PUT, PATCH y POST necesitarán un breakdown en el campo. Esto se modela mejor utilizando un código de error de alto nivel arreglado para fallas de validación que proveen detalles del error en el campo adicional &lt;em&gt;error&lt;/em&gt;, como por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;code&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;message&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Validation Failed&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;quot;errors&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;quot;code&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5432&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;quot;field&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;quot;message&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;First name cannot have fancy characters&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
       &lt;span class=&#34;nt&#34;&gt;&amp;quot;code&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5622&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
       &lt;span class=&#34;nt&#34;&gt;&amp;quot;field&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
       &lt;span class=&#34;nt&#34;&gt;&amp;quot;message&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Password cannot be blank&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;22-códigos-de-estado-http&#34;&gt;22. Códigos de estado HTTP&lt;/h2&gt;

&lt;p&gt;HTTP define un &lt;a href=&#34;http://en.wikipedia.org/wiki/List_of_HTTP_status_codes&#34;&gt;set de significativos códigos de status&lt;/a&gt; que pueden ser devueltos por la API. Éstos pueden ser nivelados para ayudar a los consumidores de la API dirigir sus respuestas apropiadamente. A continuación les dejo una lista de los que definitivamente deberías utilizar:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;200 OK -&lt;/em&gt; Respuesta a un exitoso GET, PUT, PATCH o DELETE. Puede ser usado también para un POST que no resulta en una creación.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;201 Created&lt;/em&gt; – [Creada] Respuesta a un POST que resulta en una creación. Debería ser combinado con un &lt;a href=&#34;http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30&#34;&gt;encabezado Location&lt;/a&gt;, apuntando a la ubicación del nuevo recurso.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;204 No Content&lt;/em&gt; – [Sin Contenido] Respuesta a una petición exitosa que no devuelve un body (como una petición DELETE)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;304 Not Modified&lt;/em&gt; – [No Modificada] Usado cuando el cacheo de encabezados HTTP está activo&lt;/li&gt;
&lt;li&gt;&lt;em&gt;400 Bad Request&lt;/em&gt; – [Petición Errónea] La petición está malformada, como por ejemplo, si el contenido no fue bien parseado.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;401 Unauthorized&lt;/em&gt; – [Desautorizada] Cuando los detalles de autenticación son inválidos o no son otorgados. También útil para disparar un popup de autorización si la API es usada desde un navegador.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;403 Forbidden&lt;/em&gt; – [Prohibida] Cuando la autenticación es exitosa pero el usuario no tiene permiso al recurso en cuestión.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;404 Not Found&lt;/em&gt; – [No encontrada] Cuando un recurso no existente es solicitado.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;405 Method Not Allowed&lt;/em&gt; – [Método no permitido] Cuando un método HTTP que está siendo pedido no está permitido para el usuario autenticado.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;410 Gone&lt;/em&gt; – [Retirado] Indica que el recurso en ese endpoint ya no está disponible. Útil como una respuesta en blanco para viejas versiones de la API&lt;/li&gt;
&lt;li&gt;&lt;em&gt;415 Unsupported Media Type&lt;/em&gt; – [Tipo de contenido no soportado] Si el tipo de contenido que solicita la petición es incorrecto&lt;/li&gt;
&lt;li&gt;&lt;em&gt;422 Unprocessable Entity&lt;/em&gt; – [Entidad improcesable] Utilizada para errores de validación&lt;/li&gt;
&lt;li&gt;&lt;em&gt;429 Too Many Requests&lt;/em&gt; – [Demasiadas peticiones] Cuando una petición es rechazada debido a la tasa límite .&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;en-conclusión&#34;&gt;En conclusión&lt;/h2&gt;

&lt;p&gt;Una API es una interfaz de usuario para desarrolladores. Enfoca tu esfuerzo en asegurar que no sea sólo usable a nivel funcional sino también amigable.&lt;/p&gt;

&lt;h4 id=&#34;referencias&#34;&gt;Referencias&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Vinay Sahni&lt;/em&gt; | &lt;a href=&#34;http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api&#34;&gt;Best Practices for Designing a Pragmatic RESTful API&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Chat y Foros de Próxima Generación, de pioneros del Código Abierto</title>
      <link>https://elbauldelprogramador.com/chat-y-foros-de-proxima-generacion-de-pioneros-del-codigo-abierto/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/chat-y-foros-de-proxima-generacion-de-pioneros-del-codigo-abierto/</guid>
      <description>

&lt;p&gt;Insatisfecho con la experiencia en los actuales paquetes de software para foros, el co-fundador de Stack Exchange, Jeff Atwood, fundó el &lt;em&gt;Civilized Discourse Construction &lt;a href=&#34;http://www.codinghorror.com/blog/2013/02/civilized-discourse-construction-kit.html&#34; target=&#34;_blank&#34;&gt;Kit&lt;/a&gt; Inc&lt;/em&gt; para proponer un nuevo paquete que los reemplace. Este software, &lt;a href=&#34;http://www.discourse.org/&#34; target=&#34;_blank&#34;&gt;Discourse&lt;/a&gt;, de código abierto está construido con JavaScript, Ruby on Rails y PostgreSQL y, &lt;a href=&#34;http://www.discourse.org/faq/&#34; target=&#34;_blank&#34;&gt;acorde&lt;/a&gt; a los desarrolladores, puede ser usada en cualquier ocasión que se necesite una lista de mails o foro. Según dice el equipo: &amp;#8220;Discourse es un reinicio desde cero, un intento de reimaginar cómo debería ser una plataforma de discusión moderna, sustentable y completamente open-source.&amp;#8221;
Discourse usa el framework Ember.js y su licencia es GPLv2. Detecta automáticamente dispositivos móviles y es utilizable con pantallas táctiles, pero está sólo optimizado para pantallas mayores de 7&amp;#8221; por el momento. Mientras el software es usable y una &lt;a href=&#34;http://try.discourse.org/&#34; target=&#34;_blank&#34;&gt;demo online &lt;/a&gt;está disponible, los desarrolladores advierten que el software no debería ser usado en producción todavía. Ellos incluso dicen que Discourse actualmente debería ser usado sólo para comenzar nuevas comunidades de discusión, y no para migrar las existentes. Los usuarios que quieran testear la aplicación pueden obtener el código fuente &lt;a href=&#34;https://github.com/discourse/discourse&#34; target=&#34;_blank&#34;&gt;desde GitHub.&lt;/a&gt;
&lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; class=&#34;size-full wp-image-1352 alignleft&#34; alt=&#34;Kandan&#34; src=&#34;https://elbauldelprogramador.com/img/2013/02/kandan-a548da5452a69c44.png&#34; width=&#34;120px&#34; height=&#34;120px&#34; /&gt;
&lt;a href=&#34;http://kandanapp.com/&#34; target=&#34;_blank&#34;&gt;Kandan&lt;/a&gt; es otro proyecto de código abierto - uno que debería cubrir las necesidades cuando las comunicaciones en tiempo real son más necesarias. Kandan 1.0 fue &lt;a href=&#34;http://kandanapp.com/blog/2013/02/06/kandan-1-dot-0-release-announcement/&#34; target=&#34;_blank&#34;&gt;anunciado&lt;/a&gt; recientemente y está diseñado para ser fácilmente desplegado en plataformas de cloud computing como CloudFoundry, Heroku y otras. La herramienta ofrece ilimitados canales de chat y permite embeber imágenes, videos Youtube y archivos de sonido, y la habilidad de integrarse con el Hubot de GitHub.&lt;/p&gt;

&lt;p&gt;Kandan tiene licencia AGPLv3 y puede utilizar MongoDB, MySQL o PostgreSQL como componente de base de datos para su backend. El código fuente de Kandan 1.0 está disponible &lt;a href=&#34;https://github.com/kandanapp/kandan&#34; target=&#34;_blank&#34;&gt;en GitHub &lt;/a&gt;y además puedes acceder a una &lt;a href=&#34;http://kandan-demo.kandanapp.com/&#34; target=&#34;_blank&#34;&gt;demo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h3 id=&#34;fuente&#34;&gt;Fuente&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;The H Open&lt;/em&gt; »» &lt;a href=&#34;http://www.h-online.com/open/news/item/Open-source-pioneers-next-generation-chat-and-forums-1801023.html&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Chuleta de comandos para GPG</title>
      <link>https://elbauldelprogramador.com/chuleta-de-comandos-para-gpg/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/chuleta-de-comandos-para-gpg/</guid>
      <description>&lt;figure&gt;
    &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2014/04/Chuleta-de-comandos-GPG.png&#34; title=&#34;{{ page.title }}&#34; alt=&#34;{{ page.title }}&#34; width=&#34;400px&#34; height=&#34;175px&#34;&gt;&lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;Si encontraste esta página, por suerte es lo que estabas buscando, una pequeña chuleta de comandos para &lt;a href=&#34;https://elbauldelprogramador.com/como-cifrar-correos-con-gpg-con-mailvelope/&#34; title=&#34;Cómo cifrar correos con GPG usando Mailvelope&#34;&gt;GPG&lt;/a&gt;. Si encuentras algún error, no dudes en comentarlo.&lt;/p&gt;

&lt;p&gt;He usado el “&lt;strong&gt;Nombre de Usuario&lt;/strong&gt;” como el nombre asociado a la clave. Perdón si no es muy imaginativo. Creo que GPG es bastante amplio en sus asignaciones de usuario, por ejemplo el nombre para mi clave privada es &lt;em&gt;Charles Lockhart&lt;/em&gt;, pero puedo referenciarlo simplemente poniendo Lockhart.&lt;/p&gt;

&lt;p&gt;Empecemos:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;crear-una-clave&#34;&gt;Crear una clave&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --gen-key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Generalmente puedes seleccionar las que vienen por defecto.&lt;/p&gt;

&lt;h1 id=&#34;exportar-una-clave-pública-dentro-del-archivo-public-key&#34;&gt;Exportar una clave pública dentro del archivo &lt;em&gt;public.key&lt;/em&gt;&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --export -a &lt;span class=&#34;s2&#34;&gt;&amp;quot;Nombre de Usuario&amp;quot;&lt;/span&gt; &amp;gt; public.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto creará un archivo llamado &lt;em&gt;public.key&lt;/em&gt; con la representación ascii de la clave pública para Nombre de Usuario. Esto es una variación de:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --export
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;el cual por sí mismo básicamente va a imprimir un montón de porquerías en tu pantalla. Recomiendo no hacerlo.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --export -a “Nombre de Usuario&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;imprime la clave pública para el ‘Nombre de Usuario’ en la línea de comandos, lo cual es medio útil para exportar una clave privada:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --export-secret-key -a &lt;span class=&#34;s2&#34;&gt;&amp;quot;Nombre de Usuario&amp;quot;&lt;/span&gt; &amp;gt; private.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto creará un archivo llamado &lt;em&gt;private.key&lt;/em&gt; con la representación ascii de la clave privada para ‘Nombre de Usuario’.&lt;/p&gt;

&lt;p&gt;Es muy parecido a exportar una clave pública, pero tienes que pisar algunas protecciones que vienen por default. Hay una nota (*) al pie explicando porqué desearías hacer esto.&lt;/p&gt;

&lt;h1 id=&#34;importar-una-clave-pública&#34;&gt;Importar una clave pública&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --import public.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Si encontraste esta página, por suerte es lo que estabas buscando
Esto agrega la clave pública en el archivo “*public.key*” a tu anillo de claves públicas.&lt;/p&gt;

&lt;h1 id=&#34;importar-una-clave-privada&#34;&gt;Importar una clave privada&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --allow-secret-key-import --import private.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto agrega una clave privada en el archivo “*private.key&lt;em&gt;” a tu anillo de claves privadas. Hay una nota (&lt;/em&gt;) al pie explicando porqué desearías hacer esto.&lt;/p&gt;

&lt;h1 id=&#34;eliminar-una-clave-pública-de-tu-anillo-de-claves-públicas&#34;&gt;Eliminar una clave pública (de tu anillo de claves públicas):&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --delete-key &lt;span class=&#34;s2&#34;&gt;&amp;quot;Nombre de Usuario&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto elimina la clave pública de tu anillo de claves públicas.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;¡ATENCIÓN! Si hay una clave privada en tu anillo de claves privadas asociada con esta clave pública, ¡tendrás un error! Debes primero eliminar tu clave privada para este par de claves de tu anillo de claves privadas.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;eliminar-una-clave-secreta-una-clave-de-tu-anillo-de-claves-secreta&#34;&gt;Eliminar una clave secreta (una clave de tu anillo de claves secreta)&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --delete-secret-key &lt;span class=&#34;s2&#34;&gt;&amp;quot;Nombre de Usuario&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto elimina la clave secreta de tu anillo de claves secretas.&lt;/p&gt;

&lt;h1 id=&#34;listar-las-claves-de-tu-anillo-de-claves-públicas&#34;&gt;Listar las claves de tu anillo de claves públicas&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --list-keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;listar-las-claves-de-tu-anillo-de-claves-secretas&#34;&gt;Listar las claves de tu anillo de claves secretas&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --list-secret-keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;generar-una-lista-corta-de-números-que-puedes-usar-a-través-de-un-método-alternativo-para-verificar-la-clave-pública&#34;&gt;Generar una lista corta de números que puedes usar a través de un método alternativo para verificar la clave pública&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --fingerprint &amp;gt; fingerprint
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto crea el archivo fingerprint con la información de la firma digital.&lt;/p&gt;

&lt;h1 id=&#34;encriptar-datos&#34;&gt;Encriptar datos&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg -e -u &lt;span class=&#34;s2&#34;&gt;&amp;quot;Nombre de Usuario del Emisor&amp;quot;&lt;/span&gt; -r &lt;span class=&#34;s2&#34;&gt;&amp;quot;Nombre de Usuario del Destinatario&amp;quot;&lt;/span&gt; somefile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Aquí hay algunas opciones útiles, como por ejemplo -u para especificar la clave secreta que será utilizada, y -r para especificar la clave pública del destinatario.
Como por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg -e -u &lt;span class=&#34;s2&#34;&gt;&amp;quot;Manuel Ginobili&amp;quot;&lt;/span&gt; -r “Un amigo&lt;span class=&#34;s2&#34;&gt;&amp;quot; mydata.tar&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esto debería crear un archivo llamado “*mydata.tar.gpg*” que contiene la información encriptada. Pienso que se debe especificar el nombre de usuario del emisor para que el destinatario pueda verificar que el contenido proviene de esa persona (¿Utilizando su firma digital?)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTA: &lt;em&gt;mydata.tar&lt;/em&gt; no se elimina, terminas teniendo dos archivos, por lo tanto si quieres tener sólo el archivo encriptado, deberás eliminar &lt;em&gt;mydata.tar&lt;/em&gt; tú mismo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Un interesante comentario al margen, encripté el patch preventivo del kernel, un archivo de 55,247 bytes, y terminé con un archivo encriptado de 15,276 bytes.&lt;/p&gt;

&lt;h1 id=&#34;desencriptar-datos&#34;&gt;Desencriptar datos&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg -d mydata.tar.gpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Si tienes múltiples claves secretas, el comando elegirá la correcta, o mostrará un error si la correcta no existe. Se te pedirá que ingreses tu passphrase. Luego de ello existirá el archivo “*mydata.tar*”, y el “original” encriptado, &lt;em&gt;mydata.tar.gpg&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTA: cuando originalmente escribí este borrador, era como funcionaba en mi sistema, sin embargo parece que ahora “&lt;code&gt;gpg -d mydata.tar.gpg&lt;/code&gt;” vuelca el contenido del archivo a la salida standard. La forma alternativa (que funciona en mi sistema, de todos modos) sería utilizar&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --o archivodesalida -d archivoencriptado.gpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;, o utilizar &lt;em&gt;mydata.tar.gpg&lt;/em&gt; como por ejemplo,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg -o mydata.tar -d mydata.tar.gpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Otra alternativa es ejecutar algo como&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg -d mydata.tar.gpg &amp;gt; mydata.tar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;y simplemente enviar la salida dentro de un archivo. Pareciera funcionar de la misma manera.&lt;/p&gt;

&lt;p&gt;Ok, entonces si eres un paranoico y quieres encriptar alguno de tus propios archivos, para que nadie pueda entrar en tu computadora y obtenerlos, simplemente encríptalos usandote a tí mismo como el contenedor.&lt;/p&gt;

&lt;p&gt;No he utilizado estos comandos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --edit-key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;gpg --gen-revoke
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--gen-revoke&lt;/code&gt; crea un certificado de revocación, el cual es distribuido a los usuarios y los servidores de claves te dicen que tu clave ya no es más válida. Mira: &lt;a href=&#34;http://www.gnupg.org/gph/en/manual/r721.html&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.gnupg.org/gph/en/manual/r721.html&#34;&gt;http://www.gnupg.org/gph/en/manual/r721.html&lt;/a&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--edit-key&lt;/code&gt; te permite hacer una colección de operaciones con las claves. Mira: &lt;a href=&#34;http://www.gnupg.org/gph/en/manual/r899.html&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.gnupg.org/gph/en/manual/r899.html&#34;&gt;http://www.gnupg.org/gph/en/manual/r899.html&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;compartir-claves-secretas&#34;&gt;Compartir Claves Secretas&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTA: los siguientes casos de uso indican porqué los comandos &lt;code&gt;secret-key import/export&lt;/code&gt; existen, o al menos un par de ideas de qué puedes hacer con ellos. SIN EMBARGO, hay un poco de logística necesaria para compartir la clave secreta. ¿Cómo la pasamos de una computadora a otra? Creo que encriptarla y enviarla por e-mail probablemente estaría bien, pero yo no la enviaría desencriptada con e-mail, esto sería PELIGROSO.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;Caso de Uso 1: Arriba están mencionados los comandos para exportar e importar las claves secretas, y quiero explicar una razón por la cual probablemente quieras hacer esto. Básicamente si quieres un par de claves para todas tus computadoras (asumiento que tienes múltiples computadoras), entonces esto te permitirá exportar ese par de claves de la computadora original e importarla en las otras computadoras.&lt;/li&gt;
&lt;li&gt;Caso de Uso 2: Arriba están mencionados los comandos para exportar e importar las claves secretas, y quiero explicar una razón por la cual probablemente quieras hacer esto. Básicamente, si perteneces a un grupo, y quisieras crear un par de clave simple para ese grupo, una persona debería crear el par de claves, luego exportar las claves pública y privada, darselas a los otros miembros del grupo y ellos deberían importar ese par. Luego un miembro del grupo o alguien afuera podría utilizar la clave pública del grupo, encriptando el mensaje y/o los datos, y enviándolo a los miembros del grupo, y todos ellos deberían poder tener acceso al mensaje y/o los datos. Basicamente, podrías crear un sistema simplificado donde sólo una clave pública es requerida para enviar cosas encriptadas a múltiples destinatarios.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Quick&amp;rsquo;n easy gpg cheatsheet&lt;/em&gt; »» &lt;a href=&#34;http://irtfweb.ifa.hawaii.edu/~lockhart/gpg/gpg-cs.html&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/tags/gpg&#34;&gt;Más artículos sobre GPG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Crónica del 5° hackathon de la OSL en Granada</title>
      <link>https://elbauldelprogramador.com/cronica-5-hackathon-de-la-osl-en-granada/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/cronica-5-hackathon-de-la-osl-en-granada/</guid>
      <description>&lt;p&gt;El año pasado hablé del &lt;a href=&#34;https://elbauldelprogramador.com/mi-experiencia-en-el-3-hackathon-de-la/&#34;&gt;3°&lt;/a&gt; y &lt;a href=&#34;https://elbauldelprogramador.com/cuarto-hackathon-de-proyectos-de/&#34;&gt;4°&lt;/a&gt; Hackathón que organizó la Oficina de Software Libre de la facultad de Informática en Granada. Este año he participado en el 5°, y por supuesto la experiencia ha sido buena, al igual que en los anteriores. Los proyectos participantes este año eran los siquientes:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://trucocusl.wordpress.com/&#34;&gt;Truco&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://osgiliath.org/&#34; title=&#34;Osgiliath de Pablo García&#34;&gt;OSGiLiath&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://dafcollage.wordpress.com/&#34;&gt;Daf-Collage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://web.deantares.es/zomblind/&#34;&gt;Zomblind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://codereimagined.wordpress.com/&#34;&gt;Code-Reimagined&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://particlequest.com/&#34;&gt;Particle Quest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;truco&#34;&gt;Truco&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Trazador de RUtas de la COmpra&lt;/strong&gt;.
Truco es un proyecto de Software Libre inscrito en el Concurso Universitario de Software Libre del año 2011-2012, y retomado para el concurso 2012-2013. Está siendo desarrollado por Antonio Castillo Lora (@kamuisaeba) y Alejandro Martín Medina(@alexvisio).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/alexvisio/Truco&#34; target=&#34;_blank&#34;&gt;Código fuente&lt;/a&gt; | &lt;a href=&#34;http://trucocusl.wordpress.com/&#34; target=&#34;_blank&#34;&gt;Web&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;osgiliath&#34;&gt;OSGiLiath&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;OSGiLiath (OSGi Laboratory for Implementation and Testing of metaHeuristics) is an open source framework for Service Oriented Evolutionary Algorithms.&lt;/p&gt;

&lt;p&gt;Its main features are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Well defined interfaces.&lt;/li&gt;
&lt;li&gt;Asynchronous data sending/receiving.&lt;/li&gt;
&lt;li&gt;Service oriented programming.&lt;/li&gt;
&lt;li&gt;Server/client or distributed model.&lt;/li&gt;
&lt;li&gt;Paradigm independent.&lt;/li&gt;
&lt;li&gt;Remote event handling.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://osgiliath.org/2013/03/05/getting-started-osgiliath-eclipse/&#34; target=&#34;_blank&#34;&gt;Instrucciones de instalación&lt;/a&gt; | &lt;a href=&#34;https://sourceforge.net/projects/osgiliath/&#34; target=&#34;_blank&#34;&gt;Código fuente&lt;/a&gt;&lt;/p&gt;

&lt;div &gt;
  &lt;strong&gt; &lt;a href=&#34;http://www.slideshare.net/fergunet/hackathon1&#34; title=&#34;OSGiLiath + Processing&#34; target=&#34;_blank&#34;&gt;OSGiLiath + Processing&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;http://www.slideshare.net/fergunet&#34; target=&#34;_blank&#34;&gt;Pablo García&lt;/a&gt;&lt;/strong&gt;
&lt;/div&gt;

&lt;h4 id=&#34;daf-collage&#34;&gt;Daf-Collage&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Daf-collage consiste en unos módulos para Moodle que ayudan en el aprendizaje del idioma alemán. Facilitando la organización de contenidos, como el vocabulario o los principales aspectos gramaticales, y la creación de ejercicios para afianzar los conocimientos.&lt;/p&gt;

&lt;p&gt;Está mantenido por Francisco Javier Rodríguez López (@seiya64) y Simeón Ruiz Romero (@simeonruiz)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/seiya64/dafcollage&#34; target=&#34;_blank&#34;&gt;Código fuente&lt;/a&gt; | &lt;a href=&#34;http://dafcollage.wordpress.com/&#34; target=&#34;_blank&#34;&gt;Web&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;zomblind&#34;&gt;ZomBlind&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Zomblind es un juego zombie-apocalíptico para Android. Seguro que ya has “vivido” esta situación, pero ahora no puedes ver a tus enemigos, solo oírlos… Pesnado para jugadores con discapacidad visual.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/deantares/zomblind&#34; target=&#34;_blank&#34;&gt;Código fuente&lt;/a&gt; | &lt;a href=&#34;http://web.deantares.es/zomblind/dejanos-tu-comentario/&#34; target=&#34;_blank&#34;&gt;Web&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;code-reimagined&#34;&gt;Code-Reimagined&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;The idea is simple: turn your java code into a super Mario game stage. Then you can follow Mario while debugging your code and quickly access any place on it. Many features are expected to be developed in the future, so stay connected if you like this. The code of the project is in a very early stage so don’t expect too much, the important thing is the idea behind&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/javiplay/code-reimagined/tree/origin/testing&#34; target=&#34;_blank&#34;&gt;Código Fuente&lt;/a&gt; | &lt;a href=&#34;http://codereimagined.wordpress.com/&#34; target=&#34;_blank&#34;&gt;Web&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yo participé en este último, code-reimagined. La idea de este proyecto es facilitar el proceso de aprendizaje en el mundo de la programación, principalmente a los más jóvenes, creando una pantalla del Mario Brox a partir del código de un proyecto Java. Está en fase de desarrollo aunque de momento tiene mucha funcionalidad implementada. Expresiones y declaraciones se representan con cajitas. Los for con los tubos, los if se remifican en dos caminos etc, puedes descargar el código de github Un ejemplo:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/img/2013/03/Screenshot-from-2013-03-11-175049.png&#34;&gt;&lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/03/Screenshot-from-2013-03-11-175049-1024x817.png&#34; alt=&#34;Maryo Brox&#34; width=&#34;1024px&#34; height=&#34;817px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;p class=&#34;wp-caption-text&#34;&gt;
    Maryo Brox
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Puedes visitar la galería de fotos en &lt;em&gt;‘&lt;a href=&#34;http://osl.ugr.es/galeria/index.php/Quinto-Hackathon-CUSL&#34; target=&#34;_blank&#34;&gt;Quinto-Hackathon-CUSL&lt;/a&gt;’&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;referencias&#34;&gt;Referencias&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Más información&lt;/em&gt; »» &lt;a href=&#34;http://osl.ugr.es/2013/02/14/v-hackathon-de-proyectos-del-concurso-universitario-de-software-libre/&#34; target=&#34;_blank&#34;&gt;osl.ugr.es&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Código Open Source: Para la gente, por la gente</title>
      <link>https://elbauldelprogramador.com/codigo-open-source-para-la-gente-por-la-gente/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/codigo-open-source-para-la-gente-por-la-gente/</guid>
      <description>&lt;p&gt;Muchas organizaciones eligen Open Source por razones como flexibilidad y agilidad. Todos necesitamos hacer más con menos. Pero en el gobierno, Open Source maneja simultáneamente el compromiso cívico junto con la participación del gobierno, como nunca antes. Gracias a la digitalización, el mundo se siente mucho más pequeño y más conectado. Y Open Source le da a la gente la oportunidad de unirse a la causa, sin importar dónde viven.&lt;/p&gt;

&lt;p&gt;Piensa sobre cuánto le insistimos al gobierno antes de tener el sitio &lt;a href=&#34;https://petitions.whitehouse.gov/%20&#34;&gt;We The People&lt;/a&gt;. Apuesto a que tienes que pensar mucho sobre cómo fue hecho (¡yo sí!). Ahora, el sitio ha traído a la vida a la Primera Enmienda a la Constitución de los Estados Unidos. Millones de voces de la gente son escuchadas. La gente empujó conjuntamente basados en sus intereses comunes. La Casa Blanca construyó We The People utilizando Drupal y &lt;a href=&#34;https://github.com/WhiteHouse/petitions&#34;&gt;compartió el código en GitHub&lt;/a&gt;, generando la oportunidad a otros gobiernos para que fácilmente puedan crear su propio sistema de pedidos online.&lt;/p&gt;

&lt;p&gt;Ahora, todo tipo de información abierta del gobierno disponible a través del proyecto &lt;a href=&#34;http://www.data.gov/&#34;&gt;Data.gov&lt;/a&gt; hace posible a cualquier programador, en cualquier parte, poder crear una aplicación cívica. Estas aplicaciones nos han hecho ver nuestras ciudades y pueblos con una luz diferente.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://opencityapps.org/&#34;&gt;Open City&lt;/a&gt; es un ejemplo de un grupo de voluntarios locales que crean aplicaciones open source usando información del gobierno. Aunque el grupo está ubicado en Chicago, la idea es que cualquier ciudad pueda guardar el código de Open City y crear la propia.&lt;/p&gt;

&lt;p&gt;Aquí hay algunos ejemplos interesantes: &lt;a href=&#34;http://clearstreets.org/&#34;&gt;ClearStreets&lt;/a&gt; monitorea la nieve de la ciudad en tiempo real. Viviendo fuera de Boston, se que podríamos usar una aplicación como ésta.&lt;a href=&#34;http://www.crimeinchicago.org/&#34;&gt;Crime in Chicago&lt;/a&gt; permite a los ciudadanos comparar las estadísticas sobre crímenes en determinadas áreas del pueblo, lo cual puede ser útil para la gente que tiene que tomar decisiones sobre dónde mudarse con la familia.&lt;/p&gt;

&lt;p&gt;Lo más gratificante tal vez sea que, como programadores open-source, podemos colaborar en proyectos y ayudar a la gente en cualquier parte del mundo. Es parte de lo que nos saca fuera de la cama en la mañana. A principios de este año, los participantes de DrupalCon Portland &lt;a href=&#34;http://www.help4ok.org/&#34;&gt;lanzaron un sitio web&lt;/a&gt; en 24hs para ayudar a la gente de Moore, Okla., a encontrar transporte y hogar luego del tornado. Dos semanas más tarde, el sitio fue descubierto en Twitter en Alemania y fue reutilizado para ayudar a la gente afectada por las inundaciones en el norte de Europa. Estos tipos de proyectos nos inspiran a ver cómo la tecnología puede hacer inmediatamente la diferencia.&lt;/p&gt;

&lt;p&gt;Otros eventos, como el Día Nacional del Hacking Cívico (&lt;a href=&#34;http://hackforchange.org/&#34;&gt;National Day for Civic Hacking&lt;/a&gt;), alientan a los programadores a usar información abierta del gobierno para “colaborativamente crear, construir e inventar”. La idea de que los hackatons pueden ayudar a construir y crear un ecosistema tecnológico saludable impulsado por los ciudadanos es relativamente nueva, y muy prometedora. Tim O’Reilly cree que el gobierno puede escapar de la mentalidad “máquina expendedora” (los ciudadanos ponen dólares y obtienen servicios) y pensar en un “&lt;a href=&#34;http://www.youtube.com/watch?v=dYB8xokkWjg#at=36&#34;&gt;Gobierno como Plataforma&lt;/a&gt;” de participación. No podría estar más de acuerdo.&lt;/p&gt;

&lt;p&gt;Los ideales del Open Source ya se han difundido en los gobiernos por todo el mundo, con una buena razón. Una red global de programadores está motivada a ayudar. Es uno de los mejores ejemplos de compromiso cívico. Como ciudadanos digitales, ahora todos tenemos el poder de contribuir. El tiempo y talento de una persona pueden hacer una gran diferencia. Es un movimiento del cual estoy orgulloso de ser parte.&lt;/p&gt;

&lt;h3 id=&#34;referencias&#34;&gt;Referencias&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Open-source code: by the people, for the people&lt;/em&gt; »» &lt;a href=&#34;http://venturebeat.com/2013/08/29/open-source-code-by-the-people-for-the-people/&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cómo configurar un servidor DNS - Parte 1 (Introducción)</title>
      <link>https://elbauldelprogramador.com/como-configurar-un-servidor-dns/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/como-configurar-un-servidor-dns/</guid>
      <description>&lt;figure&gt;
    &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/04/dns.jpg&#34; title=&#34;{{ page.title }}&#34; alt=&#34;{{ page.title }}&#34; width=&#34;450px&#34; height=&#34;361px&#34; /&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;Cómo configurar un servidor DNS - Parte 1 (Introducción)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/como-configurar-un-servidor-dns2/&#34; title=&#34;Cómo configurar un servidor DNS – Parte 2 (La Zona Primaria)&#34;&gt;Cómo configurar un servidor DNS - Parte 2 (La Zona Primaria)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/como-configurar-un-servidor-dns3/&#34; title=&#34;Cómo configurar un servidor DNS – Parte 3 (Zona Inversa y DNS secundario)&#34;&gt;Cómo configurar un servidor DNS - Parte 3 (Zona Inversa y DNS secundario)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;En esta serie de artículos, intentaré explicar lo mejor posible el funcionamiento de los servidores DNS, y cómo configurar el tuyo propio. Habrá una parte más teórica sobre el funcionamiento del sistema, que es una traducción de un artículo en howtoforge.&lt;/p&gt;

&lt;p&gt;Ya que los artículos están basados en distintas fuentes de información que he ido recopilando, no sé de cuantas partes estará formada esta serie, así que la lista de arriba irá cambiando hasta que estén completos todos los artículos.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Debo reconocer que el tema de los DNS me ha dado muchos problemas, es algo que para mí ha sido dificil de entender. A base de leer y releer muchos artículos por internet, aprendí a configurar un servidor DNS manualmente. Hoy voy a explicar cómo.&lt;/p&gt;

&lt;p&gt;En Linux, &lt;strong&gt;BIND&lt;/strong&gt; es el encargado de gestionar los DNS, como su página de ayuda indica (&lt;em&gt;bind - bind a name to a socket&lt;/em&gt;), asocia un nombre a un socket. Es importante que antes de continuar compruebes que la versión de &lt;strong&gt;BIND&lt;/strong&gt; es superior a la 4. Lo ideal sería tener la 8 o 9. Puedes comprobarlo con el siguiente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ nslookup -type&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;txt -class&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;chaos version.bind servidor
Server:     servidor
Address:    IP#53

version.bind   &lt;span class=&#34;nv&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;VERSION&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;BIND&lt;/strong&gt; tiene tres componentes, el primero es llamado &lt;em&gt;named&lt;/em&gt; o &lt;em&gt;name-dee&lt;/em&gt;, es un demonio que ejecuta el lado servidor del DNS.&lt;/p&gt;

&lt;p&gt;El segundo componente es llamado &lt;em&gt;resolver library&lt;/em&gt; o biblioteca de resolución, encargada de realizar peticiones a servidores DNS para intentar traducir un nombre a una dirección IP. El archivo de configuración para este componente es &lt;strong&gt;resolv.conf&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;El tercer y último componente de &lt;strong&gt;BIND&lt;/strong&gt; proporciona herramientas para probar el servidor DNS. Entre estas herramientas se encuentran comandos como &lt;strong&gt;dig&lt;/strong&gt;, que se verá más adelante.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h3 id=&#34;cual-es-tu-responsabilidad-como-parte-del-sistema-dns&#34;&gt;¿Cual es tu responsabilidad como parte del sistema DNS?&lt;/h3&gt;

&lt;p&gt;DNS es una &lt;a href=&#34;https://elbauldelprogramador.com/bases-de-datos/&#34;&gt;base de datos&lt;/a&gt; distribuida. Cuando pagas por un dominio, debes configurar dos servidores de nombres, y éstos deben ser registrados en el sistema DNS.&lt;/p&gt;

&lt;p&gt;La base de datos del sistema DNS tiene tres niveles. Al primer grupo de servidores se les llama “&lt;strong&gt;servidores root&lt;/strong&gt;”. Al segundo, “&lt;strong&gt;Top Level Domains (TLDs)&lt;/strong&gt;” o dominios de primer nivel. Cuando se necesita conocer la dirección de una web, el segundo componente de &lt;strong&gt;BIND&lt;/strong&gt; (resolver library) realiza una petición, (De aquí en adelante lo llamaremos &lt;em&gt;resolver&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Por ejemplo, supongamos que quieres encontrar a &lt;strong&gt;google.com&lt;/strong&gt;. Tu resolver pide a los servidores root que identifique la IP de google.com. El servidor root responde, “*No lo sé, pero sí sé donde puedes encontrar la respuesta, comienza con los servidores TLD para COM*”.&lt;/p&gt;

&lt;p&gt;Así, el servidor root envia la petición a un servidor COM. Éste último servidor dice: “&lt;em&gt;No tengo esa información, pero sé de un servidor de nombres que sí, tiene dirección 173.194.34.6 y nombre ns1.google.com. Dirígete a esa dirección y te dirá la dirección del sitio web google.com.”&lt;/em&gt;&lt;/p&gt;

&lt;figure&gt;
&lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;Esquema servidores DNS&#34; src=&#34;https://elbauldelprogramador.com/img/2013/02/dns.png&#34; width=&#34;513px&#34; height=&#34;399px&#34; /&gt;
&lt;/figure&gt;

&lt;p&gt;En la figura de arriba, la parte superior izquierda representa los servidores root. En la jerga DNS, éstos servidores reprensentan el comienzo del camino en el sistema DNS. Suelen representarse con un punto (“.”). En los archivos de configuración, el mapeo entre IP y nombre acabará en un punto. A lo largo de esta series de artículos quedará más claro este concepto.&lt;/p&gt;

&lt;p&gt;Los servidores root son los principales de la base de datos distribuida. Poseen información sobre los &lt;strong&gt;Top Level Domains (TLDs)&lt;/strong&gt; o dominios de primer nivel. En los TLDs se incluyen &lt;em&gt;com, net, org, mil, gov, edu etc&lt;/em&gt;. Al contratar un nombre de dominio, es necesario elegir qué TLD se desea, este blog se encuentra en el espacio de nombres COM y se llama &lt;em&gt;elbauldelprogramador.com&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&#34;cómo-responde-el-servidor-dns-a-las-peticiones&#34;&gt;¿Cómo responde el servidor DNS a las peticiones?&lt;/h3&gt;

&lt;p&gt;En este punto es donde &lt;strong&gt;BIND&lt;/strong&gt; entra en acción. El primer componente que mencionamos, &lt;strong&gt;named&lt;/strong&gt;; está presente en todos los servidores de nombres y es el encargado de responder a las peticiones de los resolvers. Lee sus datos del archivo de configuración &lt;em&gt;named.conf&lt;/em&gt;. Éste fichero obtiene su información de unos ficheros a los que se les suele llamar &lt;em&gt;zone files&lt;/em&gt; ó &lt;em&gt;ficheros de zona&lt;/em&gt;. Existen multidud de ellos, pero un archivo de zona en particular mantiene una base de datos de registros que proporciona named con la mayoría de sus respuestas.&lt;/p&gt;

&lt;p&gt;En la figura 2, &lt;em&gt;named&lt;/em&gt; ha recibido una petición. Busca en su fichero de configuración &lt;em&gt;named.conf&lt;/em&gt;, que busca en el archivo de zona primaria y pasa la información solicitada al resolver desde el exterior.&lt;/p&gt;

&lt;figure&gt;
&lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; alt=&#34;Figura 2 - Respondiendo a una petición&#34; src=&#34;https://elbauldelprogramador.com/img/2013/02/config.png&#34; width=&#34;411px&#34; height=&#34;185px&#34; /&gt;
&lt;figcaption&gt;Figura 2 - Respondiendo a una petición&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&#34;usando-named-conf&#34;&gt;Usando Named.conf&lt;/h3&gt;

&lt;p&gt;El proceso &lt;em&gt;named&lt;/em&gt; escucha en el puerto 53 en los sitemas Linux. Al recibir una petición para una dirección, busca en el primer archivo de configuración que conoce, &lt;em&gt;named.conf&lt;/em&gt;. Tal y como se aprecia en la figura 2.&lt;/p&gt;

&lt;p&gt;El fichero tiene la siguiente estructura:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// This is the primary configuration file for the BIND DNS server named.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;//&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// Please read /usr/share/doc/bind9/README.Debian.gz for information on the&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// structure of BIND configuration files in Debian, *BEFORE* you customize&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// this configuration file.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;//&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// If you are just adding zones, please do that in /etc/bind/named.conf.local&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;/etc/bind/named.conf.options&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;/etc/bind/named.conf.local&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;/etc/bind/named.conf.default-zones&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Veamos el contenido de los tres archivos que incluye:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;named.conf.options&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;options &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    directory &lt;span class=&#34;s2&#34;&gt;&amp;quot;/var/cache/bind&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Aquí se definen el directorio por defecto para named.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;named.conf.default-zones&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;zone &lt;span class=&#34;s2&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt; hint&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  file &lt;span class=&#34;s2&#34;&gt;&amp;quot;/etc/bind/db.root&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

zone &lt;span class=&#34;s2&#34;&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt; master&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    file &lt;span class=&#34;s2&#34;&gt;&amp;quot;/etc/bind/db.local&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

zone &lt;span class=&#34;s2&#34;&gt;&amp;quot;127.in-addr.arpa&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt; master&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    file &lt;span class=&#34;s2&#34;&gt;&amp;quot;/etc/bind/db.127&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

zone &lt;span class=&#34;s2&#34;&gt;&amp;quot;0.in-addr.arpa&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt; master&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    file &lt;span class=&#34;s2&#34;&gt;&amp;quot;/etc/bind/db.0&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

zone &lt;span class=&#34;s2&#34;&gt;&amp;quot;255.in-addr.arpa&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt; master&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    file &lt;span class=&#34;s2&#34;&gt;&amp;quot;/etc/bind/db.255&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;zone &amp;#8220;.&amp;#8221;&lt;/strong&gt; contiene los nombres y direcciones de los servidores root. Como se mencionó arriba, éstos servidores saben en qué servidores autorizados existe tu dominio &amp;#8212; Siendo el primero los TLD (com, org, net etc) y el segundo el servidor autorizado para tu dominio.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;zone &amp;#8220;localhost&amp;#8221;&lt;/strong&gt;. Cada servidor de nombres administra su propio dominio loopback (127.0.0.1). El motivo de crear una zona para localhost es reducir tráfico y permitir que el mismo software funcione en el sistema como lo hace en internet.&lt;/p&gt;

&lt;p&gt;El resto de las zonas son archivos de zonas inversas. Es una copia invertida de la base de datos definida en los otros archivos. Es decir, asocia una IP a un nombre, al contrario. Se pueden indentificar por la extensión &lt;strong&gt;in-addr.arpa&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;En el siguiente artículo ser verá en detalle la estructura del archivo &lt;strong&gt;named.conf.local&lt;/strong&gt;, en el que se definen nuevas zonas que corresponden a dominios que resolverá el servidor DNS. Así como a los archivos &lt;em&gt;pri.nombredominio.com&lt;/em&gt; asociados a cada zona.&lt;/p&gt;

&lt;h4 id=&#34;referencias&#34;&gt;Referencias&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Traditional DNS Howto&lt;/em&gt; »» &lt;a href=&#34;http://www.howtoforge.com/traditional_dns_howto&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cómo configurar un servidor DNS - Parte 2 (La Zona Primaria)</title>
      <link>https://elbauldelprogramador.com/como-configurar-un-servidor-dns2/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/como-configurar-un-servidor-dns2/</guid>
      <description>&lt;figure&gt;
  &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/2013/04/dns.jpg&#34; title=&#34;{{ page.title }}&#34; alt=&#34;{{ page.title }}&#34; width=&#34;450px&#34; height=&#34;361px&#34; /&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/como-configurar-un-servidor-dns/&#34; title=&#34;Cómo configurar un servidor DNS – Parte 1 (Introducción)&#34;&gt;Cómo configurar un servidor DNS - Parte 1 (Introducción)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cómo configurar un servidor DNS - Parte 2 (La Zona Primaria)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/como-configurar-un-servidor-dns3/&#34; title=&#34;Cómo configurar un servidor DNS – Parte 3 (Zona Inversa y DNS secundario)&#34;&gt;Cómo configurar un servidor DNS - Parte 3 (Zona Inversa y DNS secundario)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Siguiendo con los artículos de cómo configurar un servidor DNS. En el anterior artículo dejamos pendiente echar un vistazo al archivo &lt;strong&gt;named.conf.local&lt;/strong&gt;, que contiene información sobre los dominios que serán resueltos por el servidor DNS. Veamos el contenido:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;zone &lt;span class=&#34;s2&#34;&gt;&amp;quot;elbauldelprogramador.com&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt; master&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        allow-transfer &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;DNS_SECUNDARIO&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        file &lt;span class=&#34;s2&#34;&gt;&amp;quot;/etc/bind/pri.elbauldelprogramador.com&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El contenido de &lt;strong&gt;/etc/bind/pri.elbauldelprogramador.com&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$TTL        3600
@       IN      SOA     ks3277174.kimsufi.com. correo.electronico.com. &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;
                        &lt;span class=&#34;m&#34;&gt;2013011703&lt;/span&gt;       &lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; serial, todays date + todays serial &lt;span class=&#34;c1&#34;&gt;#&lt;/span&gt;
                        &lt;span class=&#34;m&#34;&gt;7200&lt;/span&gt;              &lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; refresh, seconds
                        &lt;span class=&#34;m&#34;&gt;540&lt;/span&gt;              &lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; retry, seconds
                        &lt;span class=&#34;m&#34;&gt;604800&lt;/span&gt;              &lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; expire, seconds
                        &lt;span class=&#34;m&#34;&gt;86400&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;            &lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; minimum, seconds
&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

elbauldelprogramador.com. &lt;span class=&#34;m&#34;&gt;3600&lt;/span&gt; A        5.39.89.44
elbauldelprogramador.com. &lt;span class=&#34;m&#34;&gt;3600&lt;/span&gt;      MX    &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;   mail.elbauldelprogramador.com.
elbauldelprogramador.com. &lt;span class=&#34;m&#34;&gt;3600&lt;/span&gt;      NS        ks3277174.kimsufi.com.
elbauldelprogramador.com. &lt;span class=&#34;m&#34;&gt;3600&lt;/span&gt;      NS        ns.kimsufi.com.
mail &lt;span class=&#34;m&#34;&gt;3600&lt;/span&gt; A        5.39.89.44
www &lt;span class=&#34;m&#34;&gt;3600&lt;/span&gt; A        5.39.89.44
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;SOA&lt;/strong&gt; es el acrónimo para &lt;em&gt;“Start Authority”&lt;/em&gt;. Si recuerdas la figura 1 del artículo anterior, recordarás que DNS es una base de datos distrubuida. Comenzando en los root servers, las peticiones se van desplazando hasta llegar a su destino, en este caso, hasta llegar al servidor DNS que estamos configurando. Por esa razón, en el fichero de zona es necesario indicar dónde comienza su autoridad(&lt;em&gt;authority&lt;/em&gt;). Ésta autoridad comienza precisamente en el fichero de zona. Los servidores &lt;strong&gt;TLD&lt;/strong&gt; (&lt;em&gt;Top Level Domain ó Dominios de primer nivel&lt;/em&gt;) esperan del servidor DNS que realice su parte del trabajo.&lt;/p&gt;

&lt;p&gt;El registro &lt;strong&gt;SOA&lt;/strong&gt; consta de varios campos. Es necesario proporcionar datos a esos campos para que otros servidores en internet puedan llevar a cabo sus peticiones. Los campos son:&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h4 id=&#34;nombre&#34;&gt;Nombre&lt;/h4&gt;

&lt;p&gt;Define el nombre principal de la zona. El &lt;em&gt;@&lt;/em&gt; es una abreviatura a la zona actual, es decir, para &lt;em&gt;/pri.elbauldelprogramador.com&lt;/em&gt; en este ejemplo. El nombre del servidor maestro para esta zona es ks3277174.kimsufi.com. Esto significa que en el archivo &lt;em&gt;named.conf&lt;/em&gt; existe una entrada que apunta y este archivo vuelve apunta a su vez a la entrada en el archivo de configuración.&lt;/p&gt;

&lt;h4 id=&#34;clase&#34;&gt;Clase&lt;/h4&gt;

&lt;p&gt;Existen varios tipos de clases DNS. En nuestro caso solo se usará la clase &lt;em&gt;IN&lt;/em&gt; o &lt;em&gt;Internet&lt;/em&gt;, usadas para definir el mapeo entre la dirección IP y &lt;em&gt;BIND&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&#34;tipo&#34;&gt;Tipo&lt;/h4&gt;

&lt;p&gt;El tipo de registro para el recurso DNS, en el ejemplo de arriba, el tipo es &lt;em&gt;SOA&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&#34;nombre-del-servidor&#34;&gt;Nombre del servidor&lt;/h4&gt;

&lt;p&gt;Nombre completo del servidor de nombres primario. Debe acabar en un punto.&lt;/p&gt;

&lt;h4 id=&#34;dirección-de-correo&#34;&gt;Dirección de correo&lt;/h4&gt;

&lt;p&gt;Dirección de correo de la persona responsable del dominio. Nota cómo se sustituye el símbolo @ por un punto.&lt;/p&gt;

&lt;h4 id=&#34;número-de-serie&#34;&gt;Número de serie&lt;/h4&gt;

&lt;p&gt;Normalmente tiene el formato &lt;em&gt;YYYYMMDD&lt;/em&gt; con dos dígitios más al final que indican el número de serie del día. El número de serie es útil para indicarle a servidor DNS secundario cuando debe actualizarse. Si el servidor esclavo al comprobar el número de serie ha cambiado, realizará una trasnferencia de zona (&lt;strong&gt;zone transfer&lt;/strong&gt;).&lt;/p&gt;

&lt;h4 id=&#34;refresh-o-actualización&#34;&gt;Refresh o actualización&lt;/h4&gt;

&lt;p&gt;En este campo indica al servidor DNS esclavo o secundario con qué frecuencia debería comprobar el estado del maestro. El valor está representado en segundos. En cada ciclo de refresco, el esclavo realiza la comprobación para saber cuando es necesaria una transferencia de zona (&lt;strong&gt;zone transfer&lt;/strong&gt;). En el ejemplo el valor es 7200&lt;/p&gt;

&lt;h4 id=&#34;retry-o-reintento&#34;&gt;Retry o reintento&lt;/h4&gt;

&lt;p&gt;Frecuencia con la que el esclavo debería conectarse al maestro en caso de una conexión fallida.&lt;/p&gt;

&lt;h4 id=&#34;expiry-o-expiración&#34;&gt;Expiry o expiración&lt;/h4&gt;

&lt;p&gt;Cantidad total de tiempo en la que el esclavo debería reintentar ponerse en contacto con el maestro antes de que expiren los datos que contiene. Referencias futuras serán dirigidas a los servidores root.&lt;/p&gt;

&lt;h4 id=&#34;ttl-mínimo&#34;&gt;TTL mínimo&lt;/h4&gt;

&lt;p&gt;Este campo define el tiempo de vida (&lt;em&gt;Time To Live&lt;/em&gt;) para el dominio en segundos. Sirve para responder a peticiones de subdominios que no existen en los registros. Cuando esté configurado, el servidor DNS responderá con una respuesta del tipo &lt;strong&gt;no domain&lt;/strong&gt; o &lt;strong&gt;NXDOMAIN&lt;/strong&gt;. Dicha respuesta será cacheada. El TTL establece la duración del cacheo para la respuesta.&lt;/p&gt;

&lt;p&gt;Después de estos campos, se especifican los servidores de nombres para el dominio. &lt;strong&gt;NS&lt;/strong&gt; es el acrónimo de &lt;strong&gt;Name Server&lt;/strong&gt;. Como se ha visto un poco más arriba, el servidor de nombres principal del ejemplo es &lt;em&gt;ks3277174.kimsufi.com&lt;/em&gt;. También se define el sevidor DNS secundario o esclavo, en este caso &lt;em&gt;ns.kimsufi.com&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Además de los registros &lt;em&gt;NS&lt;/em&gt;, se definen los registros &lt;strong&gt;MX&lt;/strong&gt;, que identifican el servidor de correo para el dominio, el número 10 define la prioridad del servidor de correo. Así como el registro de tipo &lt;strong&gt;A&lt;/strong&gt;, que asocia un nombre a una dirección ip.&lt;/p&gt;

&lt;p&gt;En el ejemplo existe un único registro &lt;strong&gt;MX&lt;/strong&gt;, pero puede haber más. Por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;MX &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; mail.elbauldelprogramador.com.
MX &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt; mail.otrodominio.com.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Si se envia un email al dominio, el servidor de correo que envía el email intenta conectarse a &lt;em&gt;mail.elbauldelprogramador.com&lt;/em&gt; ya que tiene prioridad 10, si no puede establecer conexión, lo intentará con &lt;em&gt;mail.otrodominio.com&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;El último tipo de registro que vamos a ver es el de tipo &lt;strong&gt;CNAME&lt;/strong&gt; (&lt;em&gt;Canonical Name&lt;/em&gt;). Se suele referir a ellos como registros alias del tipo &lt;strong&gt;A&lt;/strong&gt;. Por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;ftp        CNAME www
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;significa que &lt;em&gt;ftp.elbauldelprogramador.com&lt;/em&gt; es un alias de &lt;em&gt;www.elbauldelprogramador.com&lt;/em&gt;. Es decir, &lt;em&gt;ftp.elbauldelprogramador.com&lt;/em&gt; apunta al mismo servidor que &lt;em&gt;www.elbauldelprogramador.com&lt;/em&gt;. Un registro &lt;strong&gt;CNAME&lt;/strong&gt; debe apuntar a un registro de tipo &lt;strong&gt;A&lt;/strong&gt; y solo de tipo &lt;strong&gt;A&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;En el siguiente artículo se verá el archivo de zona inversa y la configuración del servidor DNS secundario, así como el uso del comando &lt;em&gt;dig&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&#34;referencias&#34;&gt;Referencias&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Traditional DNS Howto&lt;/em&gt; »» &lt;a href=&#34;http://www.howtoforge.com/traditional_dns_howto&#34; target=&#34;_blank&#34;&gt;Visitar sitio&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>