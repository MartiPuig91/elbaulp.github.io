<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>El Baúl del programador</title>
    <link>https://elbauldelprogramador.com/index.xml</link>
    <description>Recent content on El Baúl del programador</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-ES</language>
    <lastBuildDate>Wed, 01 Mar 2017 09:34:28 +0100</lastBuildDate>
    <atom:link href="https://elbauldelprogramador.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>52 Blogs / Canales / Podcast sobre informática, Data Science y Seguridad</title>
      <link>https://elbauldelprogramador.com/blogs-canales-podcast-aprender-informatica/</link>
      <pubDate>Wed, 01 Mar 2017 09:34:28 +0100</pubDate>
      
      <guid>https://elbauldelprogramador.com/blogs-canales-podcast-aprender-informatica/</guid>
      <description>&lt;h1 id=&#34;qué-es-esta-lista&#34;&gt;¿Qué es esta lista?&lt;/h1&gt;

&lt;p&gt;A continuación se listan una serie de Podcast, Canales de Youtube y Blogs que sigo que hablan sobre informática, &lt;a href=&#34;https://elbauldelprogramador.com/9-libros-que-debes-leer-para-ser-un-data-scientist-o-data-engineer/&#34; title=&#34;18 Libros Que Debes Leer Para Ser Un Data Scientist O Data Engineer&#34; target=&#34;_blank&#34;&gt;Data Science&lt;/a&gt; y &lt;a href=&#34;https://elbauldelprogramador.com/categories/security-now/&#34; target=&#34;_blank&#34;&gt;seguridad&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Si conoces de algún recurso digital que hable y enseñe informática, data science o seguridad no listado abajo, contribuye dejándonos un comentario y lo añadiremos a la lista, o mejor aún, añádelo tú mismo haciendo un &lt;a href=&#34;https://github.com/algui91/algui91-hugo/edit/master/content/post/resources-channels-blogs-podcast-about-computer-science-security-data-science.md&#34; target=&#34;_blank&#34; title=&#34;Pull Request!&#34;&gt;Pull Request!&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Gracias a &lt;a href=&#34;https://twitter.com/sinclair_88&#34; target=&#34;_blank&#34; title=&#34;@sinclair_88&#34;&gt;@sinclair_88&lt;/a&gt; por proponer la idea de crear la lista.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;otras-listas&#34;&gt;Otras listas&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/recursos-canales-podcast-sobre-matematicas/&#34; title=&#34;11 recursos/canales/podcasts sobre matemáticas&#34; target=&#34;_blank&#34;&gt;11 recursos/canales/podcasts sobre matemáticas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;computer-science-programming-data-science-security&#34;&gt;Computer Science (Programming, Data Science &amp;amp; Security)&lt;/h1&gt;

&lt;h2 id=&#34;youtube&#34;&gt;Youtube&lt;/h2&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;ComputerPhile&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/computerPhile.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Videos all about computers and computer stuff. Sister channel of Numberphile.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UC9-y-6csu5WGm29I7JiwpnA&#34; target=&#34;_blank&#34; title=&#34;ComputerPhile&#34;&gt;ComputerPhile&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Security Now!&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/securitynow.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Steve Gibson, the man who coined the term spyware and created the first anti-spyware program, creator of Spinrite and ShieldsUP, discusses the hot topics in security today with Leo Laporte.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCNbqa_9xihC8yaV2o6dlsUg&#34; target=&#34;_blank&#34; title=&#34;Security Now!&#34;&gt;Security Now!&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

&lt;/div&gt;

&lt;h2 id=&#34;podcasts&#34;&gt;Podcasts&lt;/h2&gt;

&lt;h3 id=&#34;data-science&#34;&gt;Data Science&lt;/h3&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Becoming a Data Scientist&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/becomingads.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Documenting my path from &#34;SQL Data Analyst pursuing an Engineering Master&#39;s Degree&#34; to &#34;Data Scientist&#34; &lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://www.becomingadatascientist.com/feed/podcast&#34; target=&#34;_blank&#34; title=&#34;Becoming A Data Scientist Podcast&#34;&gt;Becoming A Data Scientist Podcast&lt;/a&gt; | &lt;a href=&#34;http://www.becomingadatascientist.com/&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Data Skeptic&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/dataskeptic.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Data Skeptic is your source for a perseptive of scientific skepticism on topics in statistics, machine learning, big data, artificial intelligence, and data science. Our weekly podcast and blog bring you stories and tutorials to help understand our data-driven world.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://dataskeptic.libsyn.com/rss&#34; target=&#34;_blank&#34; title=&#34;Data Skeptic&#34;&gt;Data Skeptic&lt;/a&gt; | &lt;a href=&#34;http://dataskeptic.com&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Data Stories&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/datastories.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;A podcast on data visualization with Enrico Bertini and Moritz Stefaner&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://datastori.es/feed/podcast/&#34; target=&#34;_blank&#34; title=&#34;Data Stories&#34;&gt;Data Stories&lt;/a&gt; | &lt;a href=&#34;http://datastori.es&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Partially Derivative&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/partiallyd.png&#34; width=&#34;100&#34; height=&#34;72&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Partially Derivative is a podcast about data science in the world around us. Episodes are a mix of explorations into the techniques used in data science and discussions with the field&#39;s leading experts. The podcast is a personal project hosted by Jonathon, Vidya, and Chris -- three experts in data science.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://feeds.feedburner.com/PartiallyDerivative&#34; target=&#34;_blank&#34; title=&#34;Partially Derivative&#34;&gt;Partially Derivative&lt;/a&gt; | &lt;a href=&#34;http://partiallyderivative.com&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Talking Machines&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/talkingmachines.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Talking Machines is your window into the world of machine learning. Your hosts, Katherine Gorman and Ryan Adams, bring you clear conversations with experts in the field, insightful discussions of industry news, and useful answers to your questions.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://www.thetalkingmachines.com/blog/?format=RSS&#34; target=&#34;_blank&#34; title=&#34;Talking Machines&#34;&gt;Talking Machines&lt;/a&gt; | &lt;a href=&#34;http://www.thetalkingmachines.com/blog/&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;
&lt;/div&gt;

&lt;h3 id=&#34;computer-science&#34;&gt;Computer Science&lt;/h3&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;
  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Chips with everything&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/chips-with-everything.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Why are teens shoplifting makeup and posting their hauls to Tumblr? How can a blind man run a marathon through the desert with just an iPhone? And what happens to your social media profiles after you die? Week on week, Leigh Alexander answers questions just like these on our digital culture podcast, Chips with Everything.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.theguardian.com/technology/series/chips-with-everything/podcast.xml&#34; target=&#34;_blank&#34; title=&#34;Chips with everything&#34;&gt;Chips with everything&lt;/a&gt; | &lt;a href=&#34;https://www.theguardian.com/technology/series/chips-with-everything&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

&lt;/div&gt;

&lt;h3 id=&#34;security&#34;&gt;Security&lt;/h3&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Security Now!&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/securitynow.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Steve Gibson, the man who coined the term spyware and created the first anti-spyware program, creator of Spinrite and ShieldsUP, discusses the hot topics in security today with Leo Laporte.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;http://leo.am/podcasts/sn&#34; target=&#34;_blank&#34; title=&#34;Security Now&#34;&gt;Security Now&lt;/a&gt; | &lt;a href=&#34;https://twit.tv/shows/security-now&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;
&lt;/div&gt;

&lt;h3 id=&#34;programming&#34;&gt;Programming&lt;/h3&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;
  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Talk Python To Me&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/talkpython.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Talk Python to Me is a weekly podcast hosted by Michael Kennedy. The show covers a wide array of Python topics as well as many related topics (e.g. MongoDB, AngularJS, DevOps).&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://talkpython.fm/episodes/rss&#34; target=&#34;_blank&#34; title=&#34;Talk Python To Me&#34;&gt;Talk Python To Me&lt;/a&gt; | &lt;a href=&#34;https://talkpython.fm/&#34; target=&#34;_blank&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

&lt;/div&gt;

&lt;h2 id=&#34;blogs&#34;&gt;Blogs&lt;/h2&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h3 id=&#34;data-science-1&#34;&gt;Data Science&lt;/h3&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Stories by IBM Cognitive Business on Medium&lt;/h3&gt;

    &lt;figure id=&#34;medium&#34;&gt;
      &lt;svg id=&#34;icon-medium&#34; version=&#34;1.1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; x=&#34;0px&#34; y=&#34;0px&#34; viewBox=&#34;0 0 48 48&#34; xml:space=&#34;preserve&#34; width=&#34;128&#34; height=&#34;128&#34;&gt;
        &lt;path class=&#34;icon-medium1&#34; d=&#34;M32.163,6.369C31.523,6.049,31,6.372,31,7.088v28.45l11.674,5.837&amp;#10;&amp;#9;C43.959,42.017,45,41.567,45,40.37V12.974c0-0.115-0.065-0.22-0.167-0.271L32.163,6.369z&#34;/&gt;
        &lt;path class=&#34;icon-medium2&#34; d=&#34;M17,28.537L30.319,6.895c0.375-0.609,1.205-0.846,1.844-0.526l12.684,6.342&amp;#10;&amp;#9;c0.082,0.041,0.111,0.144,0.063,0.222L31,35.537L17,28.537z&#34;/&gt;
        &lt;path class=&#34;icon-medium3&#34; d=&#34;M4.938,6.756C3.872,6.223,3.511,6.618,4.136,7.633L17,28.537l14,7L17.03,12.836&amp;#10;&amp;#9;c-0.02-0.032-0.048-0.058-0.082-0.075L4.938,6.756z&#34;/&gt;
        &lt;path class=&#34;icon-medium4&#34; d=&#34;M17,40.37c0,1.192-0.872,1.731-1.938,1.198L4.163,36.119&amp;#10;&amp;#9;C3.523,35.799,3,34.952,3,34.237V7.521c0-0.954,0.698-1.385,1.551-0.958l12.374,6.187C16.971,12.773,17,12.82,17,12.871V40.37z&#34;/&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;This is the age of breakthrough. An age in which digital business meets digital intelligence — human expertise enhanced, scaled and accelerated.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Stories by IBM Cognitive Business on Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/@ibmcognitivebusiness&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Stories by Oliver Cameron on Medium&lt;/h3&gt;

    &lt;figure id=&#34;medium&#34;&gt;
      &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;I lead the self-driving car team at @udacity. Previously founder of a @ycombinator startup.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Stories by Oliver Cameron on Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/@olivercameron&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Udacity Inc — Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
       &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Learning for the Jobs of Today, Tomorrow, and Beyond&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Udacity Inc — Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/udacity&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Cloudera - Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
       &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Cloudera - Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/cloudera-inc&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Nathan Benaich on Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
       &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Investor and technologist. All things #AI and emerging tech. Former research scientist, photographer, perpetual foodie.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Nathan Benaich on Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/@NathanBenaich&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Adam Geitgey on Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
       &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Interested in computers and machine learning. Likes to write about it.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Adam Geitgey on Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/@ageitgey&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Airbnb Engineering &amp;amp; Data Science — Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
       &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Creative engineers and data scientists building a world where you can belong anywhere.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Airbnb Engineering &amp;amp; Data Science — Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/airbnb-engineering&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Stories by Camron Godbout on Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
       &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Deep Learning and NLP enthusiast&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Stories by Camron Godbout on Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/@camrongodbout&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Stories by Monica Rogati on Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
       &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Data Science advisor. Turning data into products and stories.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Stories by Monica Rogati on Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/@mrogati&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Actionable Data - Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
       &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Big Data, data science and analytics advice from the folks at Pivotal Data.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Actionable Data - Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/actionable-data&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Stories by Carlos E. Perez on Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
       &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Deep Learning Patterns, Methodology and Strategy @IntuitionMachine.com&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Stories by Carlos E. Perez on Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/@IntuitMachine&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Stories by Sam DeBrule on Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
       &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Weekly AI/ML Newsletter: machinelearnings.co. Formerly @mattermark @chartbeat. I’d love to meet you for coffee and chat about AI!&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Stories by Sam DeBrule on Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/@samdebrule&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Stories by NYU Center for Data Science on Medium&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
       &lt;svg&gt;
        &lt;use xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; xlink:href=&#34;#icon-medium&#34;&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Official account of the Center for Data Science at NYU, home of the Masters in Data Science.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Stories by NYU Center for Data Science on Medium&#34; target=&#34;_blank&#34; href=&#34;https://medium.com/@NYUDataScience&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;sebastianraschka.com&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/sebastian.jpg&#34; width=&#34;100&#34; height=&#34;106&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Sebastian Raschka is the author of the bestselling book “Python Machine Learning.” As a Ph.D. candidate at Michigan State University, he is developing new computational methods in the field of computational biology.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;sebastianraschka.com&#34; target=&#34;_blank&#34; href=&#34;http://sebastianraschka.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Data Elixir&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/dataelixir.png&#34; width=&#34;285&#34; height=&#34;53&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Data Elixir is a weekly newsletter of curated data science news and resources from around the web.&lt;/p&gt;
    &lt;p&gt;Free for data lovers.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Data Elixir&#34; target=&#34;_blank&#34; href=&#34;http://dataelixir.com/issues&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Becoming A Data Scientist&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/becomingads.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Documenting my path from &#34;SQL Data Analyst pursuing an Engineering Master&#39;s Degree&#34; to &#34;Data Scientist&#34; &lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Becoming A Data Scientist&#34; target=&#34;_blank&#34; href=&#34;http://www.becomingadatascientist.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;FlowingData&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/flowingdata.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;FlowingData explores how statisticians, designers, data scientists, and others use analysis, visualization, and exploration to understand data and ourselves.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;FlowingData&#34; target=&#34;_blank&#34; href=&#34;http://flowingdata.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;FastML&lt;/h3&gt;

    &lt;p&gt;This site is brought to you by the letters “M” and “L”. It is meant to tackle interesting topics in machine learning while being entertaining and easy to read and understand.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;FastML&#34; target=&#34;_blank&#34; href=&#34;http://fastml.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Natural Language Processing Blog&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/nlpblog.jpg&#34; width=&#34;100&#34; height=&#34;116&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;My biased thoughts on the fields of natural language processing (NLP), computational linguistics (CL) and related topics (machine learning, math, funding, etc.)&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;natural language processing blog&#34; target=&#34;_blank&#34; href=&#34;http://nlpers.blogspot.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Andrej Karpathy blog&lt;/h3&gt;
    &lt;p&gt;I am Andrej Karpathy, a PhD student at Stanford working on Deep Learning. My academic website has much more information.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Andrej Karpathy blog&#34; target=&#34;_blank&#34; href=&#34;http://karpathy.github.io/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Machine Learning at Berkeley Blog - Articles&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/mlberkeley.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Machine Learning at Berkeley (ML@B) is student-run organization based at the University of California, Berkeley, and is dedicated to building and fostering a vibrant machine learning community on the University of California, Berkeley campus as well as contributing to the greater machine learning community beyond the campus.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Machine Learning at Berkeley Blog - Articles&#34; target=&#34;_blank&#34; href=&#34;http://ml.berkeley.edu/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;DataScience Blog&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;

      &lt;svg id=&#34;Layer_1&#34; data-name=&#34;Layer 1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 40 40&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;
        &lt;path  d=&#34;M11.53,7.42L9.17,6.06,1.47,10.5l2.36,1.36Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M19.2,0.26L10.93,5,13.29,6.4l8.28-4.78Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M23.19,9.39L20.88,8.05,9.06,14.88l2.31,1.34Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M26.79,4.64L22.65,7,25,8.36,29.1,6Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M19.93,15.7l-2.32-1.34-4.73,2.73,2.32,1.34Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M30.62,6.85L19.39,13.34l2.32,1.34L32.94,8.19Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M11.16,12L8.85,10.69l-3.52,2,2.32,1.34Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M23.06,2.49L10.63,9.67,12.95,11,25.38,3.82Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M29.31,12.22l2.32,1.34,5.3-3.06L34.62,9.16Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M19.2,20.73l10.64-6.15-2.32-1.34L16.89,19.4Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M28.07,31.89L19.2,37l-8.87-5.12v2.73l8.87,5.12,8.87-5.12V31.89Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M36.94,26.77l-7.09,4.1V33.6l7.09-4.1V26.77Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M1.47,26.77v2.75L8.56,33.6V30.87Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M24.53,29.19L19.2,32.25l-5.32-3.05v2.73L19.21,35l5.32-3.07V29.19Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M36.94,22L26.3,28.17V30.9l10.64-6.14V22h0Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M1.47,22v2.75L12.11,30.9V28.17Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M28.07,22.38L19.2,27.5l-8.87-5.12v2.73l8.87,5.12,8.87-5.12V22.38Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M36.94,17.26l-7.09,4.1v2.73L36.94,20V17.26Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M1.47,17.26V20l7.09,4.09V21.36Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M29.85,16.61L19.21,22.76,8,16.26V19l11.25,6.5,10.64-6.15V16.61Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M36.94,12.52l-5.32,3.07v2.73l5.32-3.07V12.52Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;
        &lt;path  d=&#34;M6.2,15.25L1.47,12.52v2.73L6.2,18V15.25Z&#34; transform=&#34;translate(-1.47 -0.26)&#34;&gt;&lt;/path&gt;

      &lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;DataScience pairs data expertise with powerful tools to help businesses unlock the value in their data.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;DataScience Blog&#34; target=&#34;_blank&#34; href=&#34;https://www.datascience.com/blog&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;
&lt;/div&gt;

&lt;h3 id=&#34;programming-1&#34;&gt;Programming&lt;/h3&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;
  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;You&#39;ve Been Haacked&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/youhavebeenhacked.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;I work at GitHub doing whatever I can to make it even more awesome.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;You&#39;ve Been Haacked&#34; target=&#34;_blank&#34; href=&#34;http://haacked.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Genbeta Dev&lt;/h3&gt;
    &lt;figure&gt;
&lt;svg width=&#34;300&#34; height=&#34;100&#34; viewBox=&#34;0 0 2012 187&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; preserveAspectRatio=&#34;none meet&#34;&gt;
        &lt;path d=&#34;M174 181.838c23.6-53.014 35.403-79.643 35.403-79.892 0-1.112-.866-1.668-2.595-1.668h-66.545c-2.224 0-3.707.805-4.45 2.41l-26.506 59.687h-20.76c-8.526 0-12.79-3.583-12.79-10.75 0-4.94 2.41-12.727 7.23-23.356l8.896-20.206c4.324-9.76 8.402-16.558 12.234-20.39 5.56-5.808 12.727-8.712 21.502-8.712h77.666c2.224 0 3.707-.742 4.45-2.224l7.6-17.24c.12-.246.185-.49.185-.74 0-1.113-.865-1.67-2.594-1.67H94.293c-18.415 0-35.775 6.428-52.087 19.28-14.83 11.74-26.322 26.505-34.477 44.3C2.91 131.174.5 141.06.5 150.33c0 11 3.458 19.526 10.38 25.58 6.55 5.56 15.446 8.34 26.692 8.34H169.55c2.225 0 3.708-.802 4.45-2.41zM398.658 123.634c5.312-11.738 7.97-17.67 7.97-17.794 0-1.234-.804-1.854-2.41-1.854H296.69c-10.046 0-20.46 22.058-6.89 22.058h104.597c2.224 0 3.644-.802 4.263-2.41z&#34; id=&#34;Shape&#34; /&gt;
        &lt;path d=&#34;M372.893 181.838l7.6-17.053c0-.247.06-.493.185-.742 0-1.112-.866-1.668-2.595-1.668h-84.34c-8.526 0-12.79-3.583-12.79-10.75 0-4.94 2.41-12.727 7.23-23.356l8.896-20.206c4.323-9.76 8.4-16.558 12.233-20.39 5.56-5.808 12.726-8.712 21.502-8.712h84.34c2.346 0 3.83-.742 4.45-2.224l7.6-17.24c.12-.246.184-.49.184-.74 0-1.113-.806-1.67-2.41-1.67H299.49c-18.416 0-35.776 6.428-52.088 19.28-14.954 11.74-26.446 26.505-34.478 44.3-4.82 10.505-7.23 20.39-7.23 29.66 0 11 3.46 19.526 10.38 25.58 6.55 5.56 15.447 8.34 26.693 8.34h125.49c2.348 0 3.894-.802 4.636-2.41zM613.307 181.838l54.497-122.34c.122-.246.186-.49.186-.74 0-1.113-.805-1.67-2.41-1.67H640c-2.35 0-3.832.807-4.45 2.41l-23.355 52.273L482.812 59.5c-3.957-1.605-7.108-2.41-9.454-2.41h-28.545c-2.225 0-3.708.805-4.45 2.41l-54.496 122.338c-.124.25-.185.495-.185.74 0 1.113.863 1.67 2.595 1.67h25.58c2.224 0 3.707-.803 4.448-2.41l22.8-51.347 126.973 50.976c4.57 1.854 8.278 2.78 11.122 2.78h29.658c2.346.002 3.83-.8 4.45-2.408zM821.8 173.126c11.243-7.415 19.278-16.497 24.097-27.248 2.224-4.82 3.336-9.39 3.336-13.717 0-6.672-2.41-12.108-7.23-16.31 8.28-3.83 15.262-8.713 20.947-14.645 6.795-7.29 10.195-14.83 10.195-22.614 0-7.414-3.15-13.035-9.454-16.867-5.313-3.087-11.925-4.634-19.832-4.634H684.632c-2.35 0-3.832.805-4.448 2.41-36.456 81.808-54.682 122.833-54.682 123.08 0 1.112.802 1.668 2.41 1.668h159.41c11.74 0 23.232-3.707 34.478-11.122zm-36.146-72.29c-4.45 2.102-9.083 3.15-13.902 3.15h-38.04l-9.715 22.058h37.93c7.416 0 11.123 3.337 11.123 10.01 0 6.55-2.905 12.576-8.712 18.073-5.81 5.5-11.988 8.25-18.537 8.25h-37.998l37.073-83.414h38c9.268 0 13.9 2.78 13.9 8.34 0 1.237-.31 2.595-.926 4.078-1.855 3.958-5.255 7.108-10.196 9.455zM1051.132 123.634c5.312-11.738 7.97-17.67 7.97-17.794 0-1.234-.804-1.854-2.41-1.854H946.23c-10.045 0-25.154 22.058-11.584 22.058h112.225c2.223 0 3.642-.802 4.262-2.41z&#34; id=&#34;Shape&#34; /&gt;
        &lt;path d=&#34;M1027.367 181.838l7.6-17.053c0-.247.06-.493.186-.742 0-1.112-.866-1.668-2.595-1.668h-84.34c-8.527 0-12.79-3.583-12.79-10.75 0-4.94 2.41-12.727 7.228-23.356l8.897-20.206c4.324-9.76 8.402-16.558 12.234-20.39 5.56-5.808 12.726-8.712 21.502-8.712h84.34c2.345 0 3.828-.742 4.447-2.224l7.6-17.24c.122-.246.186-.49.186-.74 0-1.113-.805-1.67-2.41-1.67h-125.49c-18.415 0-35.775 6.428-52.087 19.28-14.953 11.74-26.446 26.505-34.478 44.3-4.82 10.505-7.23 20.39-7.23 29.66 0 11 3.46 19.526 10.382 25.58 6.548 5.56 15.446 8.34 26.692 8.34h125.49c2.347 0 3.893-.802 4.635-2.41zM1265.556 78.962c2.225 0 3.707-.742 4.45-2.224 5.19-11.74 7.784-17.73 7.784-17.98 0-1.112-.805-1.668-2.41-1.668h-178.875c-2.224 0-3.707.806-4.448 2.41-5.19 11.742-7.786 17.673-7.786 17.795 0 1.112.864 1.668 2.596 1.668h51.716c-30.648 68.833-45.97 103.372-45.97 103.618 0 1.113.742 1.67 2.225 1.67h67.1c2.1 0 3.523-.803 4.264-2.41l45.786-102.877h53.57zM1391.417 58.016c-.495-.617-1.297-.927-2.41-.927h-19.648c-1.238 0-2.29.31-3.152.926l-187.216 122.34c-1.36.865-2.04 1.667-2.04 2.41 0 .99.99 1.482 2.967 1.482h198.15l-14.014-21.874h-130.382l91.57-60.613 52.827 82.488c.372.62 85.268 0 85.268 0 2.965 0 4.448-.927 4.448-2.78 0-.37-25.458-41.52-76.37-123.452zM1546.2 181.423c3.59-3.59 5.385-7.888 5.385-12.9 0-5.008-1.795-9.31-5.384-12.898-3.588-3.59-7.89-5.384-12.898-5.384-5.01 0-9.31 1.796-12.9 5.385-3.588 3.59-5.383 7.89-5.383 12.9 0 5.01 1.794 9.31 5.383 12.898 3.59 3.59 7.89 5.384 12.9 5.384 5.008 0 9.31-1.794 12.898-5.384zM1548.2 83.95c3.59-3.588 5.385-7.887 5.385-12.898 0-5.01-1.795-9.31-5.384-12.9-3.588-3.588-7.89-5.383-12.898-5.383-5.01 0-9.31 1.794-12.9 5.383-3.588 3.59-5.383 7.89-5.383 12.9 0 5.01 1.794 9.31 5.383 12.898 3.59 3.59 7.89 5.385 12.9 5.385 5.008 0 9.31-1.794 12.898-5.384zM1691.2 181.536h20.976V.5H1691.2v55.746c-2.617-.298-4.412-.485-5.383-.56-7.778-.823-13.76-1.235-17.946-1.235-13.684 0-25.163 3.293-34.435 9.872-20.34 14.582-30.51 36.566-30.51 65.954 0 14.357 3.103 26.583 9.31 36.678 7.404 12.04 17.872 18.06 31.407 18.06 9.198 0 18.357-3.293 27.48-9.872 8.077-5.833 14.768-13.085 20.08-21.76v28.154zm-17.497-29.612c-8.9 8.75-17.273 13.124-25.125 13.124-8.076 0-14.17-4.523-18.283-13.572-3.14-6.954-4.71-14.955-4.71-24.003 0-15.104 3.625-27.817 10.88-38.136 8.224-11.59 19.59-17.386 34.097-17.386 6.355 0 13.236.974 20.64 2.917v53.728c-5.012 8.972-10.845 16.75-17.5 23.33zM1855.21 154.167c-16.303 8.974-31.183 13.46-44.643 13.46-7.554 0-14.284-1.794-20.19-5.384-6.432-3.887-11.404-9.683-14.918-17.386-3.217-6.955-4.824-14.47-4.824-22.545h86.368v-4.487c0-18.693-3.477-33.61-10.432-44.754-8.45-13.533-21.424-20.3-38.92-20.3-11.217 0-21.407 2.954-30.566 8.86-9.16 5.908-16.32 14.245-21.48 25.013-4.935 10.246-7.403 21.087-7.403 32.528 0 11.89 2.692 23.034 8.076 33.426 11.065 21.687 28.265 32.528 51.595 32.528 14.88 0 30.658-3.962 47.334-11.89v-19.067zm-48.456-83.9c9.047 0 16.04 3.43 20.975 10.288 4.41 6.04 6.617 13.754 6.617 23.146v3.02h-62.477c5.01-24.3 16.638-36.453 34.884-36.453z&#34; id=&#34;Shape&#34; /&gt;
        &lt;path d=&#34;M1956.628 181.536l54.85-125.29h-20.937l-43.8 99.21-42.956-99.21h-22.864l54.4 125.29h21.308z&#34; /&gt;
&lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Blog sobre programación.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Genbeta Dev&#34; target=&#34;_blank&#34; href=&#34;http://www.genbetadev.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;The Geek Stuff&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/thegeekstuff.gif&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;I will be posting instruction guides, How-Tos, troubleshooting tips and tricks Linux and open source technologies. My focus is to write articles that will either teach you or help you resolve a problem.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;The Geek Stuff&#34; target=&#34;_blank&#34; href=&#34;http://www.thegeekstuff.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Texblog - &lt;em&gt;because LaTeX matters&lt;/em&gt;&lt;/h3&gt;

    &lt;p&gt;My intention is to provide valuable tips and tricks for your daily LaTeX editing. In addition, I’ll try to give answers to questions which are not easily found on the web.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;texblog&#34; target=&#34;_blank&#34; href=&#34;http://texblog.org/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Asyncified!&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/asyncified.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Hi, my name is Yuval Itzchakov, I&#39;m 27 years old from Israel. I&#39;ve been programming for about the last 4 years, started out in the .NET stack and slowly broadening horizions to Python and some C++. I love learning internals of systems and exploring what happens under the covers.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Asyncified!&#34; target=&#34;_blank&#34; href=&#34;http://yuvalitzchakov.github.io/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Yegor Bugayenko&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/yegor.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;I&#39;m Yegor Bugayenko (Russian: Его́р Бугае́нко), a programmer, a founder, an investor, and a philanthropist.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Yegor Bugayenko&#34; target=&#34;_blank&#34; href=&#34;http://www.yegor256.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;
&lt;/div&gt;

&lt;h3 id=&#34;security-1&#34;&gt;Security&lt;/h3&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;
  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;JerryGamblin.com&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/jerrygamblin.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Security Advocate. Problem Solver. Hacker. Ebullient Communicator.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;JerryGamblin.com&#34; target=&#34;_blank&#34; href=&#34;http://jerrygamblin.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Open Whisper Systems Blog&lt;/h3&gt;

    &lt;p&gt;Open Whisper Systems is both a large community of volunteer Open Source contributors, as well as a small team of dedicated grant-funded developers. Together, we&#39;re working to advance the state of the art for secure communication, while simultaneously making it easy for everyone to use.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Open Whisper Systems Blog&#34; target=&#34;_blank&#34; href=&#34;http://www.whispersystems.org/blog/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Schneier on Security&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/bruce.jpg&#34; width=&#34;100&#34; height=&#34;129&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Bruce Schneier is an internationally renowned security technologist, called a &#34;security guru&#34; by The Economist. He is the author of 13 books--including Data and Goliath: The Hidden Battles to Collect Your Data and Control Your World-- as well as hundreds of articles, essays, and academic papers.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Schneier on Security&#34; target=&#34;_blank&#34; href=&#34;https://www.schneier.com/blog/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Krebs on Security&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/krebs.png&#34; width=&#34;100&#34; height=&#34;120&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Brian Krebs worked as a reporter for The Washington Post from 1995 to 2009, authoring more than 1,300 blog posts for the Security Fix blog, as well as hundreds of stories for washingtonpost.com and The Washington Post newspaper, including eight front-page stories in the dead-tree edition and a Post Magazine cover piece on botnet operators. In 2014, he was profiled in The New York Times, Business Week and by Poynter.org. More recently, he was invited to an “Ask Me Anything” discussion on Reddit about investigative reporting.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Krebs on Security&#34; target=&#34;_blank&#34; href=&#34;http://krebsonsecurity.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;ImperialViolet&lt;/h3&gt;

    &lt;p&gt;Adam Langley&#39;s Weblog&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;ImperialViolet&#34; target=&#34;_blank&#34; href=&#34;http://www.imperialviolet.org/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Trend Micro Simply Security&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/trendmicro.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;For nearly 30 years, Trend Micro’s unwavering vision has been to make the world safe for exchanging digital information. Security is our entire focus, and it shows. This single-minded passion has inspired our innovations that keep up with the bad guys despite a changing IT landscape, riskier user behavior, and constantly evolving threats.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Trend Micro Simply Security&#34; target=&#34;_blank&#34; href=&#34;http://blog.trendmicro.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Pentester.es&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/pentester.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Jose is one of the individuals who have earned the GIAC Security Expert (GSE) designation. He is a SANS Institute community instructor for penetration testing courses and a regular speaker at security conferences.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Pentester.es&#34; target=&#34;_blank&#34; href=&#34;http://www.pentester.es/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Un informático en el lado del mal&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/chema.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Seguridad informática, hacking, pentesting, ldap injection, blind ldap injection, sql injection, blind sql injection, heavy queries, connection string parameter pollution, foca, evil foca, latch, dust rss, metashield protector, faast, metadatos, libros de seguridad informática, informática 64, recover messages, 0xword, cálico electrónico, eleven paths, telefónica y chema alonso. las opiniones son de los autores de los artículos y las mías son mías personales.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Un informático en el lado del mal&#34; target=&#34;_blank&#34; href=&#34;http://www.elladodelmal.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;MuySeguridad&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/muyseguridad.jpg&#34; width=&#34;100&#34; height=&#34;17&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Noticias sobre seguridad, virus, antivirus, hacking, phising, spam, ataques, timos, estafas, malware y otras amenazas de seguridad informática.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;MuySeguridad&#34; target=&#34;_blank&#34; href=&#34;http://muyseguridad.net/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Security By Default&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/securitybydefault.png&#34; width=&#34;100&#34; height=&#34;37&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Después de mucho tiempo hablando sobre la posibilidad de crear un blog íntegramente sobre seguridad informática, nos hemos decidido a ponernos en marcha y crear un espacio donde poder compartir experiencias y hablar de los aspectos técnicos relacionados con la seguridad informática. &lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Security By Default&#34; target=&#34;_blank&#34; href=&#34;http://www.securitybydefault.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Lifehacker&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/lifehacker.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Tips, tricks, and downloads for getting things done.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Lifehacker&#34; target=&#34;_blank&#34; href=&#34;http://lifehacker.com/tag/security&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Hispasec @unaaldia&lt;/h3&gt;

    &lt;p&gt;Servicio gratuito de noticias y análisis sobre seguridad en español.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Hispasec @unaaldia&#34; target=&#34;_blank&#34; href=&#34;http://unaaldia.hispasec.com/&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Ars Technica » Risk Assessment&lt;/h3&gt;
    &lt;figure id=&#34;medium&#34;&gt;
    &lt;svg data-name=&#34;Layer 2&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;6.1in&#34; height=&#34;2in&#34; viewBox=&#34;0 0 436.8 144.3&#34;&gt;
    &lt;circle cx=&#34;72.2&#34; cy=&#34;72.2&#34; r=&#34;72.2&#34; fill=&#34;#ff4e00&#34; /&gt;
    &lt;g fill=&#34;#fff&#34;&gt;
        &lt;path d=&#34;M46.6 94.2l-.9-5.9a20.8 20.8 0 0 1-15.6 6.8c-8 0-13-4.8-13-12.3 0-11 9.4-15.4 27.9-17.3v-1.9c0-5.6-3.3-7.5-8.4-7.5s-10.5 1.7-15.3 3.8l-1.1-7.1c5.3-2.1 10.3-3.7 17.1-3.7 10.7 0 15.9 4.3 15.9 14.2v30.9h-6.7zM45 71.8c-16.3 1.6-19.7 6-19.7 10.6s2.4 5.9 6.6 5.9 9.4-2.4 13.1-6.2V71.8zM72.4 68.1v26.1h-8.2V50.1h6.6l1.4 9c3.1-5 8.2-9.5 15.5-9.9l1.3 7.9c-7.4.3-13.6 5.2-16.6 11zM109.7 95.1a36.2 36.2 0 0 1-16.1-4.2l1.2-7.8a27.6 27.6 0 0 0 15.6 5.1c5.6 0 9-2.1 9-5.8s-2.5-5.6-10.5-7.5c-10.4-2.6-14.5-5.7-14.5-13.6s5.9-12.2 15.6-12.2a35.7 35.7 0 0 1 14.5 3l-1.3 7.8a28.2 28.2 0 0 0-13.4-3.8c-5 0-7.6 1.9-7.6 5.1s2.2 4.6 9.2 6.4c10.9 2.8 15.8 5.9 15.8 14.3s-6.1 13.2-17.5 13.2z&#34; /&gt;
    &lt;/g&gt;
    &lt;g fill=&#34;#fff&#34;&gt;
        &lt;path d=&#34;M219.3 83.9c-4.4 3.7-8.4 5-12.8 5-7.7 0-12.7-5.3-13.5-14h24.9l.9-5.5H193c.8-8.7 5.7-14.1 12.9-14.1 4.9 0 8.8 1.7 12.9 5.1l1-5.9a23 23 0 0 0-13.7-4.3c-10.7 0-19.2 7.8-19.2 21.9S195.2 94 205.8 94a22.1 22.1 0 0 0 14.3-4.8zM170.5 56.3v37h-5.8v-37h-13.4V51h32.2l.9 5.3h-13.9zM245.2 94c-11.9 0-19.5-8.8-19.5-21.8s7.8-22 19.6-22a20.3 20.3 0 0 1 12 3.5l-.9 5.9a18.1 18.1 0 0 0-11.2-4.1c-8.6 0-13.6 6.5-13.6 16.6s5.1 16.6 13.6 16.6a20.1 20.1 0 0 0 11.9-4.2l.9 5.4a22.3 22.3 0 0 1-12.8 4.1zM292.7 93.2V73.7h-21.4v19.5h-5.8V51h5.8v17.5h21.4V51h5.8v42.2h-5.8zM335.7 93.2l-23.2-32.9v32.9h-5.3V51h5.1l22.4 31.6V51h5.3v42.2h-4.3zM349.1 93.2V51h5.8v42.2h-5.8zM381.8 94c-11.9 0-19.5-8.8-19.5-21.8s7.8-22 19.6-22a20.3 20.3 0 0 1 12 3.5l-.9 5.9a18.1 18.1 0 0 0-11.2-4.1c-8.6 0-13.6 6.5-13.6 16.6s5.1 16.6 13.6 16.6a20.1 20.1 0 0 0 11.9-4.2l.9 5.4a22.3 22.3 0 0 1-12.8 4.1zM414.8 50.8h5.8l16.3 41.6-5.6 1.2-5-13.1h-17.4l-4.8 12.7h-5.8zm-4 24.7h13.5l-6.8-17.9z&#34; /&gt;
    &lt;/g&gt;
&lt;/svg&gt;
    &lt;/figure&gt;

    &lt;p&gt;Serving the Technologist for more than a decade. IT news, reviews, and analysis.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a title=&#34;Ars Technica » Risk Assessment&#34; target=&#34;_blank&#34; href=&#34;http://arstechnica.com/security&#34;&gt;Website&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>11 recursos / canales / podcasts sobre matemáticas</title>
      <link>https://elbauldelprogramador.com/recursos-canales-podcast-sobre-matematicas/</link>
      <pubDate>Fri, 24 Feb 2017 21:42:53 +0100</pubDate>
      
      <guid>https://elbauldelprogramador.com/recursos-canales-podcast-sobre-matematicas/</guid>
      <description>&lt;h1 id=&#34;qué-es-esta-lista&#34;&gt;¿Qué es esta lista?&lt;/h1&gt;

&lt;p&gt;A continuación se listan una serie de Podcast, Canales de Youtube y Blogs que sigo que hablan sobre matemáticas.&lt;/p&gt;

&lt;p&gt;Si conoces de algún recurso digital que hable y enseñe matemáticas no listado abajo, contribuye dejándonos un comentario y lo añadiremos a la lista, o mejor aún, añádelo tú mismo haciendo un &lt;a href=&#34;https://github.com/algui91/algui91-hugo/edit/master/content/post/resources-channels-podcast-to-learn-math.md&#34; target=&#34;_blank&#34; title=&#34;Pull Request!&#34;&gt;Pull Request!&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Gracias a &lt;a href=&#34;https://twitter.com/sinclair_88&#34; target=&#34;_blank&#34; title=&#34;@sinclair_88&#34;&gt;@sinclair_88&lt;/a&gt; por proponer la idea de crear la lista.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;otras-listas&#34;&gt;Otras listas&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/blogs-canales-podcast-aprender-informatica/&#34; title=&#34;52 Blogs / Canales / Podcast sobre informática, Data Science y Seguridad&#34; target=&#34;_blank&#34;&gt;52 Blogs / Canales / Podcast sobre informática, Data Science y Seguridad&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;youtube&#34;&gt;Youtube&lt;/h1&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;3Blue1Brow-postn&lt;/h3&gt;

    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/3b1b.jpg&#34; width=&#34;100&#34; height=&#34;100&#34; alt=&#34;&#34; title=&#34;&#34; &gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;3Blue1Brow-postn is some combination of math and entertainment, depending on your disposition. The goal is for explanations to be driven by animations and for difficult problems to be made simple with changes in perspective.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCYO_jab_esuFRV4b17AJtAw&#34; target=&#34;_blank&#34; title=&#34;3Blue1Brow-postn&#34;&gt;3Blue1Brow-postn&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;MathoLoger&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/mathologer.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Enter the world of the Mathologer in which beautiful math(s) rules.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UC1_uAIS3r8Vu6JjXWvastJg&#34; target=&#34;_blank&#34; title=&#34;MathLoger&#34;&gt;MathLoger&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;MinutePhysics&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/minutephysics.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Simply put: cool physics and other sweet science.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCUHW94eEFW7hkUMVaZz4eDg&#34; target=&#34;_blank&#34; title=&#34;MinutePhysics&#34;&gt;MinutePhysics&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;MinutoDeFísica&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/MinutoDeFisica.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;En pocas palabras: física genial y ciencia interesante&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCMnPZh6PyA5PSYoNt0cjuxg&#34; target=&#34;_blank&#34; title=&#34;MinutoDeFísica&#34;&gt;MinutoDeFísica&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;NumberPhile&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/numberphile.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Videos about numbers - it&#39;s that simple.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCoxcjq-8xIDTYp3uz647V5A&#34; target=&#34;_blank&#34; title=&#34;NumberPhile&#34;&gt;NumberPhile&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;NumberPhile2&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/numberphile2.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;This is Numberphile&#39;s &#34;second channel&#34; for extra footage or stuff that didn&#39;t quite fit on the main channel&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCyp1gCHZJU_fGWFf2rtMkCg&#34; target=&#34;_blank&#34; title=&#34;NumberPhile2&#34;&gt;NumberPhile2&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;PBS Infinite Series&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/pbsinfiniteseries.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Mathematician Kelsey Houston-Edwards offers ambitious content for viewers that are eager to attain a greater understanding of the world around them. Math is pervasive - a robust yet precise language - and with each episode you’ll begin to see the math that underpins everything in this puzzling, yet fascinating, universe.&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCs4aHmggTfFrpkPcWSaBN9g&#34; target=&#34;_blank&#34; title=&#34;PBS Infinite Series&#34;&gt;PBS Infinite Series&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;StandUpMaths&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/standupmaths.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;I do mathematics and stand-up. Sometimes simultaneously. Occasionally while being filmed. (It&#39;s quite the Venn diagram.)&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.youtube.com/channel/UCSju5G2aFaWMqn-_0YBtq5A&#34; target=&#34;_blank&#34; title=&#34;StandUpMaths&#34;&gt;StandUpMaths&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

&lt;/div&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;blogs&#34;&gt;Blogs&lt;/h1&gt;

&lt;div class=&#34;row-post flex-grid&#34;&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Physics.org Mathematics section&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/physics_math.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Mathematics section on Physics.org&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://phys.org/science-news/mathematics/&#34; target=&#34;_blank&#34; title=&#34;Physics.org Mathematics&#34;&gt;Physics.org Mathematics&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;Physics.org Quantum Physics section&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/physics_math.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Physics.org Quantum Physics section&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://phys.org/physics-news/quantum-physics/&#34; target=&#34;_blank&#34; title=&#34;Quantum Physics section on physics.org&#34;&gt;Quantum Physics section on physics.org&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;

  &lt;article class=&#34;box-item animate&#34;&gt;
    &lt;h3&gt;&lt;/h3&gt;
    &lt;figure&gt;
      &lt;amp-img sizes=&#34;(min-width: 100px) 100px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/Quanta.jpg&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/amp-img&gt;
    &lt;/figure&gt;

    &lt;p&gt;Quanta Magazine is an editorially independent online publication launched by the Simons Foundation to enhance public understanding of science. Why Quanta? Albert Einstein called photons “quanta of light.” Our goal is to “illuminate science.”&lt;/p&gt;

    &lt;div class=&#34;tags&#34;&gt;
      &lt;a href=&#34;https://www.quantamagazine.org/&#34; target=&#34;_blank&#34; title=&#34;Quanta Magazine&#34;&gt;Quanta Magazine&lt;/a&gt;
    &lt;/div&gt;
  &lt;/article&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Dibujar árboles de dependencias y Máquinas de soporte Vectoriales usando LaTeX y Tikz</title>
      <link>https://elbauldelprogramador.com/creating-trees-dependency-graphs-svms-in-tikz/</link>
      <pubDate>Thu, 16 Feb 2017 16:50:27 +0100</pubDate>
      
      <guid>https://elbauldelprogramador.com/creating-trees-dependency-graphs-svms-in-tikz/</guid>
      <description>&lt;p&gt;Como he comentado, para dibujar los árboles y la SVM usé el paquete &lt;code&gt;tikz&lt;/code&gt; de &lt;a href=&#34;https://elbauldelprogramador.com/tags/latex&#34; title=&#34;LaTeX&#34; target=&#34;_blank&#34;&gt;LaTeX&lt;/a&gt;, a continuación muestro el código que usé:&lt;/p&gt;

&lt;h1 id=&#34;dibujando-un-árbol-de-dependencias-con-tikz&#34;&gt;Dibujando un árbol de dependencias con Tikz&lt;/h1&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h2 id=&#34;ejemplo-1&#34;&gt;Ejemplo 1&lt;/h2&gt;

&lt;p&gt;El código es el siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\documentclass&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;standalone&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikz&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikz-dependency&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;dependency&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;[edge slant=15pt,label theme = simple, edge theme = iron]
  &lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;deptext&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;[column sep=1em]
    This &lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt; time &lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt; around &lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt; , &lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt; they &lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt; &amp;#39;re &lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt; moving &lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt; even &lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt; faster &lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt;
    . &lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;deptext&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\deproot&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;7&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;ROOT&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\depedge&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;2&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;1&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;DET&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\depedge&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[edge height=1.9cm]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;7&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;2&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;TMOD&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\depedge&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;2&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;3&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;ADVMOD&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\depedge&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;7&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;6&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;AUX&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\depedge&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;7&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;5&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;NSUBJ&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\depedge&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;7&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;4&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;PUNCT&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\depedge&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;7&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;10&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;PUNCT&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\depedge&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;7&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;9&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;ADVMOD&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\depedge&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[edge start x offset=-4pt]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;9&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;8&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;ADVMOD&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;dependency&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El resultado:&lt;/p&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/dependency-tree.png&#34;&gt;&lt;amp-img  sizes=&#34;(min-width: 799px) 799px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/dependency-tree.png&#34; alt=&#34;Dependenty tree in tikz&#34; title=&#34;Dependenty tree in tikz&#34; width=&#34;799&#34; height=&#34;194&#34;&gt;&lt;/amp-img&gt;&lt;/a&gt;
&lt;figcaption&gt;Dependenty tree in tikz&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;ejemplo-2&#34;&gt;Ejemplo 2&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\documentclass&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;standalone&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikz&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikz-qtree,tikz-qtree-compat&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\tiny&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikzpicture&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;[every node/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;align=center&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,scale=.9]
  &lt;span class=&#34;k&#34;&gt;\tikzset&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;
    edge from parent/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;
      draw,edge from parent
      path=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;(&lt;span class=&#34;k&#34;&gt;\tikzparentnode&lt;/span&gt;.south)-- +(0,-8pt)-| (&lt;span class=&#34;k&#34;&gt;\tikzchildnode&lt;/span&gt;)&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
    frontier/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;distance from root=208pt&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;c&#34;&gt;% Align leaf nodes&lt;/span&gt;
    level 1+/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;level distance=18pt&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;% Distance between levels&lt;/span&gt;
  &lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

   &lt;span class=&#34;k&#34;&gt;\Tree&lt;/span&gt; [.S
             [.NP Rolls-Royce&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNP Motor&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNP Cars&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNPS Inc&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNP ]
             [.VP said&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;VBD
                [.SBAR [.none ]
                   [.S
                      [.NP it&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;PRP ]
                      [. VP expects&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;VBZ
                         [.S
                            [.NP its&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;PRP&lt;span class=&#34;k&#34;&gt;\$&lt;/span&gt; U.S&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNP sales&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNS ]
                            [.VP to&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;TO
                               [.VP remain&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;VB
                                  [.ADJP steady&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;JJ ]
                                  [.PP at&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;IN
                                     [.NP
                                        [.QP about&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;IN 1200&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;CD ]
                                        cars&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNS
                                     ]
                                  ]
                               ]
                            ]
                         ]
                      ]
                   ]
                ]
             ]
         ]
&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikzpicture&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Resultado:&lt;/p&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/dependency-tree-2.png&#34;&gt;&lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/dependency-tree-2.png&#34; alt=&#34;Other Dependency Tree in tikz&#34; title=&#34;Other Dependency Tree in tikz&#34; width=&#34;926&#34; height=&#34;485&#34;&gt;&lt;/amp-img&gt;&lt;/a&gt;
&lt;figcaption&gt;Other Dependency Tree in tikz&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;ejemplo-3&#34;&gt;Ejemplo 3&lt;/h2&gt;

&lt;p&gt;El último ejemplo de árbol:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\documentclass&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;standalone&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikz&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikz-qtree,tikz-qtree-compat&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikzpicture&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;[every node/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;align=center&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,level distance=30pt]
    &lt;span class=&#34;k&#34;&gt;\tikzset&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;edge from parent/.append style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&amp;lt;-, &amp;gt;=latex,thick&lt;span class=&#34;nb&#34;&gt;}}&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;\Tree&lt;/span&gt; [.said&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;VBD
             [.Inc.&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNP Rolls-Royce&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNP Motor&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNP Cars&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNPS ]
             [.expects&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;VBZ it&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;PRP
                [.remain&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;VB
                   [.sales&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNS its&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;PRP&lt;span class=&#34;k&#34;&gt;\$&lt;/span&gt; U.S&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNP ]
                   to&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;TO
                   steady&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;JJ
                   [.at&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;IN [.cars&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;NNS [.about&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;IN 1200&lt;span class=&#34;k&#34;&gt;\\&lt;/span&gt;CD ] ] ]
                ]
             ]
           ]
   &lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikzpicture&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/dependency-tree-3.png&#34;&gt;&lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/dependency-tree-3.png&#34; alt=&#34;Yet another example of a Dependency tree in tikz&#34; title=&#34;Yet another example of a Dependency tree in tikz&#34; width=&#34;795&#34; height=&#34;513&#34;&gt;&lt;/amp-img&gt;&lt;/a&gt;
&lt;figcaption&gt;Yet another example of a Dependency tree in tikz&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;dibujando-una-máquina-de-soporte-vectorial-svm-en-tikz&#34;&gt;Dibujando una máquina de soporte vectorial (SVM) en Tikz&lt;/h1&gt;

&lt;p&gt;Para la explicación gráfica de lo que es una SVM:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\documentclass&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;standalone&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikz&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikz-qtree,tikz-qtree-compat&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usetikzlibrary&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;calc&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;


  &lt;span class=&#34;k&#34;&gt;\tikzset&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;
    leftNode/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;circle,minimum width=.5ex, fill=none,draw&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
    rightNode/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;circle,minimum width=.5ex, fill=black,thick,draw&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
    rightNodeInLine/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;solid,circle,minimum width=.7ex, fill=black,thick,draw=white&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
    leftNodeInLine/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;solid,circle,minimum width=.7ex, fill=none,thick,draw&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
  &lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikzpicture&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;[
        scale=2,
        important line/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;thick&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;, dashed line/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;dashed, thin&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
        every node/.style=&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;color=black&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
    ]
    &lt;span class=&#34;k&#34;&gt;\draw&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[dashed line, yshift=.7cm]&lt;/span&gt;
       (.2,.2) coordinate (sls) -- (2.5,2.5) coordinate (sle)
       node[solid,circle,minimum width=2.8ex,fill=none,thick,draw] (name) at (2,2)&lt;span class=&#34;nb&#34;&gt;{}&lt;/span&gt;
       node[leftNodeInLine] (name) at (2,2)&lt;span class=&#34;nb&#34;&gt;{}&lt;/span&gt;
       node[solid,circle,minimum width=2.8ex,fill=none,thick,draw] (name) at (1.5,1.5)&lt;span class=&#34;nb&#34;&gt;{}&lt;/span&gt;
       node[leftNodeInLine] (name) at (1.5,1.5)&lt;span class=&#34;nb&#34;&gt;{}&lt;/span&gt;
       node [above right] &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;\cdot&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt; x &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt; b &amp;gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;;

    &lt;span class=&#34;k&#34;&gt;\draw&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[important line]&lt;/span&gt;
       (.7,.7) coordinate (lines) -- (3,3) coordinate (linee)
       node [above right] &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;\cdot&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt; x &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt; b &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;;

    &lt;span class=&#34;k&#34;&gt;\draw&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[dashed line, xshift=.7cm]&lt;/span&gt;
       (.2,.2) coordinate (ils) -- (2.5,2.5) coordinate (ile)
       node[solid,circle,minimum width=2.8ex,fill=none,thick,draw] (name) at (1.8,1.8)&lt;span class=&#34;nb&#34;&gt;{}&lt;/span&gt;
       node[rightNodeInLine] (name) at (1.8,1.8)&lt;span class=&#34;nb&#34;&gt;{}&lt;/span&gt;
       node [above right] &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;\cdot&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt; x &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt; b &amp;lt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;;

    &lt;span class=&#34;k&#34;&gt;\draw&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[very thick,&amp;lt;-&amp;gt;]&lt;/span&gt; (&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sls&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)+(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;,.&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;) -- (&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ils&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)+(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;,.&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;)
       node[sloped,above, near end] &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Margen&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;;

    &lt;span class=&#34;k&#34;&gt;\foreach&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\Point&lt;/span&gt; in &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;(.9,2.4), (1.3,2.5), (1.3,2.1), (2,3), (1,2.9)&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;\draw&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\Point&lt;/span&gt; node[leftNode]&lt;span class=&#34;nb&#34;&gt;{}&lt;/span&gt;;
    &lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;\foreach&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\Point&lt;/span&gt; in &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;(2.9,1.4), (2.3,.5), (3.3,.1), (2,0.9), (2.5,1)&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;\draw&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;\Point&lt;/span&gt; node[rightNode]&lt;span class=&#34;nb&#34;&gt;{}&lt;/span&gt;;
    &lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;tikzpicture&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;figure&gt;
&lt;a href=&#34;https://elbauldelprogramador.com/img/support-vector-machine-tikz-latex.png&#34;&gt;&lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/support-vector-machine-tikz-latex.png&#34; alt=&#34;Support Vector Machine in Latex with Tikz&#34; title=&#34;Support Vector Machine in Latex with Tikz&#34; width=&#34;811&#34; height=&#34;652&#34;&gt;&lt;/amp-img&gt;&lt;/a&gt;
&lt;figcaption&gt;Support Vector Machine in Latex with Tikz&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;p&gt;Cuando empecé a dibujar estas figuras en &lt;code&gt;tikz&lt;/code&gt; se me presentaron algunas dudas que pregunté en tex.stackexchange.com. Estas fueron dichas preguntas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Align all leaf nodes in tikz-qtree | &lt;a href=&#34;http://tex.stackexchange.com/questions/340929/align-all-leaf-nodes-in-tikz-qtree&#34; target=&#34;_blank&#34; title=&#34;Align all leaf nodes in tikz-qtree&#34;&gt;tex.stackexchange.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Align independent tikzpictures | &lt;a href=&#34;http://tex.stackexchange.com/questions/342978/align-independent-tikzpictures&#34; target=&#34;_blank&#34; title=&#34;Align independent tikzpictures&#34;&gt;tex.stackexchange.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Cómo convertir una columna a VectorUDT/DenseVector en Spark</title>
      <link>https://elbauldelprogramador.com/how-to-convert-column-to-vectorudt-densevector-spark/</link>
      <pubDate>Mon, 06 Feb 2017 17:04:46 +0100</pubDate>
      
      <guid>https://elbauldelprogramador.com/how-to-convert-column-to-vectorudt-densevector-spark/</guid>
      <description>&lt;p&gt;Estoy iniciándome en el mundo de &lt;code&gt;spark&lt;/code&gt;, ojeando su librería &lt;code&gt;MLlib&lt;/code&gt; decidí implementar una simple &lt;a href=&#34;https://spark.apache.org/docs/latest/ml-classification-regression.html#linear-regression&#34; target=&#34;_blank&#34; title=&#34;Regresión lineal&#34;&gt;Regresión lineal&lt;/a&gt;. Aunque el ejemplo de su documentación parece sencillo, cuando intentaba leer mi propio csv con datos obtenía el siguiente error:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Column features must be of type org.apache.spark.ml.linalg.VectorUDT&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tras varias horas buscando sin encontrar ninguna solución, al fin conseguí convertir la columna &lt;code&gt;features&lt;/code&gt; a &lt;code&gt;VectorUDT&lt;/code&gt;, así es como lo hice:&lt;/p&gt;

&lt;h1 id=&#34;convertir-una-columna-a-vectorudt-en-spark&#34;&gt;Convertir una columna a VectorUDT en Spark&lt;/h1&gt;

&lt;p&gt;Primero preparamos el entorno:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;spark&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SparkSession&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;master&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;local&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;appName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;spark session example&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getOrCreate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;spark&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;header&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;load&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getClass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;/generated_data.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getPath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printSchema&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;El código de arriba simplemente configura una sesión &lt;code&gt;Spark&lt;/code&gt; y lee el fichero &lt;code&gt;generated_data.csv&lt;/code&gt;. Por último muestra el &lt;code&gt;schema&lt;/code&gt; de los datos, el cual es:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_a&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_b&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_c&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_d&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_e&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_f&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_g&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_h&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dependent_var&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Como puede verse, &lt;code&gt;dependent_var&lt;/code&gt; es de tipo &lt;code&gt;String&lt;/code&gt;, pero debería ser de tipo &lt;code&gt;VectorUDT&lt;/code&gt;, para convertirla se debe usar &lt;code&gt;VectorAssembler&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;StructType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;features&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;VectorUDT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;toDouble&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;udf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;Double&lt;/span&gt;, &lt;span class=&#34;kt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;](&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toDouble&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;withColumn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dependent_var&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;toDouble&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dependent_var&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)))&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;assembler&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;VectorAssembler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;setInputCols&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dependent_var&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)).&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;setOutputCol&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;features&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;out&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;assembler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printSchema&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printSchema&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El código de arriba declara un &lt;code&gt;schema&lt;/code&gt; para la columna que vamos a convertir, luego creamos una &lt;code&gt;udf&lt;/code&gt; (&lt;em&gt;User Defined Function&lt;/em&gt;) para convertir los valores de la columna de &lt;code&gt;String&lt;/code&gt; a &lt;code&gt;Double&lt;/code&gt;. Por último, se crea un &lt;code&gt;VectorAssembler&lt;/code&gt; y se transforma el &lt;em&gt;dataset&lt;/em&gt; al nuevo esquema. Para comprobar que de hecho hemos convertido el tipo, se imprime el esquema del &lt;em&gt;dataset&lt;/em&gt; &lt;code&gt;out&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_a&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_b&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_c&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_d&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_e&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_f&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_g&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_var_h&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dependent_var&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;features&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;vector&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;nullable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;código-completo&#34;&gt;Código completo&lt;/h1&gt;

&lt;p&gt;El código completo es el siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;elbauldelprogramador&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.spark.ml.feature.VectorAssembler&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.spark.ml.regression.LinearRegression&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.spark.mllib.linalg.VectorUDT&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.spark.sql.SparkSession&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.spark.sql.functions.udf&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.spark.sql.types.StructType&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SimpleApp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;Unit&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;spark&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SparkSession&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;master&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;local&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;appName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;spark session example&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getOrCreate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;spark&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;header&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;load&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getClass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;/generated_data.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getPath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printSchema&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;StructType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
     &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;features&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;VectorUDT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;toDouble&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;udf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;Double&lt;/span&gt;, &lt;span class=&#34;kt&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;](&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toDouble&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;withColumn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dependent_var&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;toDouble&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dependent_var&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)))&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;assembler&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;VectorAssembler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;setInputCols&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dependent_var&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)).&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;setOutputCol&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;features&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;out&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;assembler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printSchema&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;printSchema&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lr&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;LinearRegression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setMaxIter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setRegParam&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setElasticNetParam&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.8&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// Fit the model&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lrModel&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;spark&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;otro-método&#34;&gt;Otro método&lt;/h1&gt;

&lt;p&gt;Acabo de descubrir otra forma de conseguir el mismo objetivo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;spark&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;header&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;inferSchema&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;load&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getClass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;/generated_data.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getPath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dependent_var&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;ind_var_d&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;formula&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;RFormula&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;setFormula&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dependent_var ~ ind_var_d&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;setFeaturesCol&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;features&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;setLabelCol&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;label&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;train&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;formula&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ahora &lt;code&gt;train&lt;/code&gt; tendrá dos columnas adicionales, &lt;code&gt;features&lt;/code&gt; y &lt;code&gt;label&lt;/code&gt;, siendo &lt;code&gt;features&lt;/code&gt; de tipo &lt;code&gt;Vector&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h1&gt;

&lt;p&gt;Estoy seguro de que existen formas mejores de lograr esta conversión, pero soy nuevo en &lt;code&gt;spark&lt;/code&gt; y esta fue la única que conseguí hacer funcionar. Si sabes de alguna mejor, escríbela en los comentarios!&lt;/p&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;VectorAssembler | &lt;a href=&#34;http://spark.apache.org/docs/latest/ml-features.html#vectorassembler&#34; target=&#34;_blank&#34; title=&#34;VectorAssembler Documentation&#34;&gt;spark.apache.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;El dataset es el sacado del libro &lt;a href=&#34;http://amzn.to/2kFpfde&#34; target=&#34;_blank&#34; title=&#34;Test Driven Machine Learning&#34;&gt;Test Driven Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Cómo eliminar un paquete slotted en Gentoo</title>
      <link>https://elbauldelprogramador.com/how-to-remove-slotted-packages-in-gentoo/</link>
      <pubDate>Sat, 04 Feb 2017 12:53:37 +0100</pubDate>
      
      <guid>https://elbauldelprogramador.com/how-to-remove-slotted-packages-in-gentoo/</guid>
      <description>

&lt;p&gt;Hace poco tuve un problema intentando eliminar un paquete de los llamados &lt;em&gt;slotted&lt;/em&gt; en Gentoo, a continuación muestro cómo lo resolví.&lt;/p&gt;

&lt;p&gt;Primero debemos usar &lt;code&gt;equery list &amp;lt;pkg&amp;gt;&lt;/code&gt; para listar los paquetes que coinciden con el nombre del paquete a eliminar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ equery list emacs
 * Searching &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; emacs ...
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;IP-&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; app-editors/emacs-24.5-r3:24
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;IP-&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; app-editors/emacs-25.1:25
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hay dos paquetes de &lt;a href=&#34;https://elbauldelprogramador.com/tags/emacs&#34; title=&#34;emacs&#34; target=&#34;_blank&#34;&gt;emacs&lt;/a&gt; instalados, cada uno en un &lt;em&gt;slot&lt;/em&gt; distinto, &lt;code&gt;:24&lt;/code&gt; y &lt;code&gt;:25&lt;/code&gt;. Para borrar el más antiguo, ejecutamos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ sudo emerge -C emacs-24.5-r3:24
Password:
 * This action can remove important packages! In order to be safer, use
 * &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;emerge -pv --depclean &amp;lt;atom&amp;gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt; to check &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; reverse dependencies before
 * removing packages.

 app-editors/emacs
    selected: 24.5-r3
   protected: none
     omitted: 25.1

All selected packages: &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;app-editors/emacs-24.5-r3

&amp;gt;&amp;gt;&amp;gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Selected&amp;#39;&lt;/span&gt; packages are slated &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; removal.
&amp;gt;&amp;gt;&amp;gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Protected&amp;#39;&lt;/span&gt; and &lt;span class=&#34;s1&#34;&gt;&amp;#39;omitted&amp;#39;&lt;/span&gt; packages will not be removed.

&amp;gt;&amp;gt;&amp;gt; Waiting &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; seconds before starting...
&amp;gt;&amp;gt;&amp;gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Control-C to abort&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;...
&amp;gt;&amp;gt;&amp;gt; Unmerging in: &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; 1
&amp;gt;&amp;gt;&amp;gt; Unmerging &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; of 1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; app-editors/emacs-24.5-r3...
 * Regenerating site-gentoo.el &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; GNU Emacs &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;postrm&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ...
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ok &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
 * ... &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; site initialisation files included.

 * Regenerating GNU info directory index...
 * Processed &lt;span class=&#34;m&#34;&gt;140&lt;/span&gt; info files.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tras eliminar el paquete, comprobamos qué otros paquetes dependían de él&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt; $ equery depends emacs-24.5-r3:24
 * These packages depend on emacs-24.5-r3:24:
app-emacs/emacs-common-gentoo-1.5 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;virtual/emacs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
app-emacs/markdown-mode-2.1 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&amp;gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;virtual/emacs-23&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
app-emacs/quilt-el-0.48.0 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&amp;gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;virtual/emacs-23&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
app-emacs/scala-mode-2.10.3 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&amp;gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;virtual/emacs-23&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
dev-python/cython-0.24.1 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;emacs ? virtual/emacs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
dev-scheme/guile-1.8.8-r3 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;emacs ? virtual/emacs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
dev-util/cmake-3.6.3 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;emacs ? virtual/emacs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
dev-util/desktop-file-utils-0.23 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;emacs ? virtual/emacs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
dev-util/ninja-1.6.0 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;emacs ? virtual/emacs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
dev-vcs/git-2.10.2 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;emacs ? virtual/emacs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
net-dns/libidn-1.33 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;emacs ? virtual/emacs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
virtual/editor-0 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;app-editors/emacs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
virtual/emacs-24 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;app-editors/emacs:24&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Por último:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo emerge --update --deep --with-bdeps&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;y --newuse -atv @world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Gentoo Forums | &lt;a href=&#34;https://forums.gentoo.org/viewtopic-t-845023-view-previous.html?sid=ef04c0fc53b4e635179ee854aaed2fbd&#34; target=&#34;_blank&#34; title=&#34;Remove Slotted Packages&#34;&gt;Remove Slotted Packages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Cómo mantener varios parches - Un tutorial sobre Quilt</title>
      <link>https://elbauldelprogramador.com/how-to-mantain-patchs-quilt-tutorial/</link>
      <pubDate>Mon, 30 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/how-to-mantain-patchs-quilt-tutorial/</guid>
      <description>&lt;p&gt;Llevo unos cuantos años usando &lt;a href=&#34;https://elbauldelprogramador.com/tags/dwm/&#34; title=&#34;DWM&#34; target=&#34;_blank&#34;&gt;DWM&lt;/a&gt;, incluso creé un parche que permitía &lt;a href=&#34;https://elbauldelprogramador.com/statuscolor-dwm-6-1/&#34; title=&#34;Colorear la barra de estado con Simple StatusColor en DWM 6.1&#34; target=&#34;_blank&#34;&gt;colorear su barra de estado&lt;/a&gt;. Hacía bastante tiempo que DWM se había actualizado, pero no me veía capaz de parchear mi versión modificada de DWM con la original, hasta que encontré el repositorio &lt;a href=&#34;https://github.com/jceb/dwm-patches&#34; target=&#34;_blank&#34; title=&#34;DWM-Patches&#34;&gt;DWM-Patches&lt;/a&gt; y aprendí a usar la herramienta &lt;em&gt;quilt&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&#34;qué-es-quilt&#34;&gt;¿Qué es Quilt?&lt;/h1&gt;

&lt;p&gt;Según su &lt;code&gt;man&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Quilt is a tool to manage large sets of patches by keeping track of the changes each patch makes. Patches can be applied, un-applied, refreshed, etc. The key philosophical concept is that your primary output is patches.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Es decir, una herramienta que permite administrar grandes cantidades de parches a la vez que guardar un historial de los cambios que cada uno hace. Con &lt;em&gt;quilt&lt;/em&gt; es posible aplicar, borrar o modificar cualquier parche.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;uso-básico&#34;&gt;Uso básico&lt;/h1&gt;

&lt;p&gt;Veamos un ejemplo sencillo, supongamos el siguiente fichero:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;# fichero.txt
linea 1
linea 2
linea 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;fichero.txt&lt;/code&gt; será nuestra base.&lt;/p&gt;

&lt;h1 id=&#34;crear-un-parche&#34;&gt;Crear un parche&lt;/h1&gt;

&lt;p&gt;Para crear un parche basta con ejecutar &lt;code&gt;quilt new parche1.diff&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt new parche1.diff
Patch patches/parche1.diff is now on top
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;editar-el-fichero&#34;&gt;Editar el fichero&lt;/h1&gt;

&lt;p&gt;Y luego especificamos el fichero sobre el que queremos hacer el parche:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt edit fichero.txt
File fichero.txt added to patch patches/parche1.diff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ahora podemos empezar a editar &lt;code&gt;fichero.txt&lt;/code&gt;, por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;linea 1
modificación 1 (Por parche1.diff)
linea 2
linea 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;ver-los-cambios&#34;&gt;Ver los cambios&lt;/h1&gt;

&lt;p&gt;Tras terminar de editar, podemos ver el diff:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt diff
&lt;span class=&#34;gh&#34;&gt;Index: _drafts/fichero.txt&lt;/span&gt;
&lt;span class=&#34;gh&#34;&gt;===================================================================&lt;/span&gt;
&lt;span class=&#34;gd&#34;&gt;--- _drafts.orig/fichero.txt&lt;/span&gt;
&lt;span class=&#34;gi&#34;&gt;+++ _drafts/fichero.txt&lt;/span&gt;
&lt;span class=&#34;gu&#34;&gt;@@ -1,3 +1,4 @@&lt;/span&gt;
 linea 1
&lt;span class=&#34;gi&#34;&gt;+modificaci&amp;lt;C3&amp;gt;&amp;lt;B3&amp;gt;n 1 (Por parche1.diff)&lt;/span&gt;
 linea 2
 linea 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;generar-el-parche&#34;&gt;Generar el parche&lt;/h1&gt;

&lt;p&gt;Aún no hemos generado el parche, para crearlo ejecutamos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt refresh
Refreshed patch patches/parche1.diff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;administrar-parches&#34;&gt;Administrar parches&lt;/h1&gt;

&lt;p&gt;Listo, ahora en el directorio &lt;code&gt;patches/&lt;/code&gt; deberemos tener un fichero llamado &lt;code&gt;parche1.diff&lt;/code&gt; con nuestros cambios. Actualmente solo tenemos uno, si queremos deshacer los cambios y volver al estado original de &lt;code&gt;fichero.txt&lt;/code&gt; basta con hacer:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt pop
Removing patch patches/parche1.diff
Restoring fichero.txt

No patches applied
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Como vemos, &lt;code&gt;fichero.txt&lt;/code&gt; vuelve a su estado original:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;$ cat fichero.txt
linea 1
linea 2
linea 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Si tuvieramos más de un parche, &lt;code&gt;quilt pop&lt;/code&gt; aceptaría el nombre del parche, o la opción &lt;code&gt;-a&lt;/code&gt; para eliminar todos los parches. Creemos un segundo parche:&lt;/p&gt;

&lt;h1 id=&#34;segundo-parche&#34;&gt;Segundo parche&lt;/h1&gt;

&lt;p&gt;Antes de crear un segundo parche, debemos aplicar el primero, o si tuvieramos varios, todos, para ello:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt push -a
Applying patch patches/parche1.diff
patching file fichero.txt

Now at patch patches/parche1.diff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ahora estamos en condiciones de crear el nuevo parche:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt new parche2.diff
Patch patches/parche2.diff is now on top
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;listar-la-pila-de-parches&#34;&gt;Listar la pila de parches&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos varios parches, podemos ver el orden en el que se aplican con &lt;code&gt;quilt series&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt series
patches/parche1.diff
patches/parche2.diff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El último en la pila es &lt;code&gt;parche2&lt;/code&gt;, ahora mismo está vacío, ya que lo acabamos de crear. Para ester parche vamos a modificar &lt;code&gt;fichero.txt&lt;/code&gt; y crear uno nuevo, &lt;code&gt;fichero2.txt&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt add fichero2.txt
File fichero2.txt added to patch patches/parche2.diff
$ quilt add fichero.txt
File fichero.txt added to patch patches/parche2.diff
$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Linea creada por parche2.diff&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; fichero.txt
$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Nuevo Fichero creado por parche2.diff&amp;quot;&lt;/span&gt; &amp;gt; fichero2.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt diff
&lt;span class=&#34;gh&#34;&gt;Index: _drafts/fichero.txt&lt;/span&gt;
&lt;span class=&#34;gh&#34;&gt;===================================================================&lt;/span&gt;
&lt;span class=&#34;gd&#34;&gt;--- _drafts.orig/fichero.txt&lt;/span&gt;
&lt;span class=&#34;gi&#34;&gt;+++ _drafts/fichero.txt&lt;/span&gt;
&lt;span class=&#34;gu&#34;&gt;@@ -2,3 +2,4 @@ linea 1&lt;/span&gt;
 modificaci&amp;lt;C3&amp;gt;&amp;lt;B3&amp;gt;n 1 (Por parche1.diff)
 linea 2
 linea 3
&lt;span class=&#34;gi&#34;&gt;+Linea creada por parche2.diff&lt;/span&gt;
&lt;span class=&#34;gh&#34;&gt;Index: _drafts/fichero2.txt&lt;/span&gt;
&lt;span class=&#34;gh&#34;&gt;===================================================================&lt;/span&gt;
&lt;span class=&#34;gd&#34;&gt;--- /dev/null&lt;/span&gt;
&lt;span class=&#34;gi&#34;&gt;+++ _drafts/fichero2.txt&lt;/span&gt;
&lt;span class=&#34;gu&#34;&gt;@@ -0,0 +1 @@&lt;/span&gt;
&lt;span class=&#34;gi&#34;&gt;+Nuevo Fichero creado por parche2.diff&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ya solo resta aplicar los cambios al parche, con &lt;code&gt;quilt refresh&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt refresh
Refreshed patch patches/parche2.diff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cuando terminemos de editar los parches, es recomendable volver al estado inicial, deshaciendo las modificaciones de todos los parches:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt pop -a
Removing patch patches/parche2.diff
Restoring fichero.txt
Removing fichero2.txt

Removing patch patches/parche1.diff
Restoring fichero.txt

No patches applied

$ ll

-rw-r--r-- &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; hkr hkr   &lt;span class=&#34;m&#34;&gt;24&lt;/span&gt; Jan &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; 18:31 fichero.txt
drwxr-xr-x &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; hkr hkr 4.0K Jan &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; 18:29 patches/
drwxr-xr-x &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; hkr hkr 4.0K Jan &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; 18:31 .pc/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para volver a aplicarlos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ quilt push -a
Applying patch patches/parche1.diff
patching file fichero.txt

Applying patch patches/parche2.diff
patching file fichero.txt
patching file fichero2.txt

Now at patch patches/parche2.diff

$ ll

-rw-r--r-- &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; hkr hkr   &lt;span class=&#34;m&#34;&gt;38&lt;/span&gt; Jan &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; 18:32 fichero2.txt
-rw-r--r-- &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; hkr hkr   &lt;span class=&#34;m&#34;&gt;89&lt;/span&gt; Jan &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; 18:32 fichero.txt
drwxr-xr-x &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; hkr hkr 4.0K Jan &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; 18:29 patches/
drwxr-xr-x &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; hkr hkr 4.0K Jan &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; 18:32 .pc/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para ver un ejemplo real, y más complejo, puedes visitar mi repositorio &lt;a href=&#34;https://github.com/algui91/myDWM&#34; target=&#34;_blank&#34; title=&#34;DWM&#34;&gt;DWM&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;bibliografía&#34;&gt;Bibliografía&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;UsingQuilt | &lt;a href=&#34;https://wiki.debian.org/UsingQuilt&#34; target=&#34;_blank&#34; title=&#34;Using Quilt | Debian Wiki&#34;&gt;wiki.debian.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;How To Survive With Many Patches | &lt;a href=&#34;https://stuff.mit.edu/afs/athena/system/i386_deb50/os/usr/share/doc/quilt/quilt.html&#34; target=&#34;_blank&#34; title=&#34;How to survive with many patches&#34;&gt;stuff.mit.edu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>TAILS LINUX y la importancia de la privacidad</title>
      <link>https://elbauldelprogramador.com/tails-linux-importancia-privacidad/</link>
      <pubDate>Fri, 27 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/tails-linux-importancia-privacidad/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Este artículo es una colaboración de &lt;em&gt;Paula de la Hoz (&lt;a href=&#34;https://twitter.com/Terceranexus6&#34; target=&#34;_blank&#34;&gt;@Terceranexus6&lt;/a&gt;&lt;/em&gt;. Su blog: &lt;a href=&#34;https://ohmybits.tumblr.com&#34; target=&#34;_blank&#34;&gt;Oh My Bits&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://medium.com/@HamletAgain&#34; target=&#34;_blank&#34;&gt;Hamlet Again&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;contexto-actual&#34;&gt;Contexto actual&lt;/h1&gt;

&lt;p&gt;Con el incipiente avance tecnológico, en nuestra sociedad cada vez se valora más la privacidad del usuario. Todo lo que hacemos, quiénes somos, qué nos gusta, es información que nos puede parecer irrelevante según para qué contextos. Sin embargo para las empresas, gobiernos y asociaciones, esa información es muy valiosa y puede incluso llegar a &lt;em&gt;limitarnos&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;Decir que no te importa el derecho a la privacidad porque no tienes nada que esconder no se diferencia de decir que no te importa la libertad de expresión porque no tienes nada que decir.&lt;/em&gt;&amp;ldquo;
&amp;mdash; &lt;strong&gt;Edward Snowden&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;El ex-empleado de la NSA &lt;strong&gt;&lt;em&gt;Edward Snowden&lt;/em&gt;&lt;/strong&gt;, conocido por su implicación en wikileaks con filtraciones de información clasificada, ha abogado por la defensa de la privacidad y los derechos en internet a través de las redes, incluso desde su asilo político en Rusia. Esta controvertida figura, para mantener &amp;ldquo;&lt;em&gt;a salvo&lt;/em&gt;&amp;rdquo; su privacidad utiliza, principalmente, un sistema operativo llamado &lt;strong&gt;TAILS LINUX&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&#34;qué-es-tails&#34;&gt;¿Qué es Tails?&lt;/h1&gt;

&lt;figure&gt;
    &lt;amp-img  sizes=&#34;(min-width: 500px) 500px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/tchou-improved.png&#34; alt=&#34;{{ .Title }}&#34; title=&#34;{{ .Title}}&#34; width=&#34;500&#34; height=&#34;257&#34;&gt;&lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://tails.boum.org/index.en.html&#34; target=&#34;_blank&#34;&gt;TAILS&lt;/a&gt; es un sistema operativo &lt;em&gt;live&lt;/em&gt;, ¿ésto qué quiere decir? que podemos utilizarlo desde cualquier ordenador utilizando simplemente un pen drive. Es completamente gratuito, libre y está basado en Debian &lt;a href=&#34;https://elbauldelprogramador.com/categories/linux&#34; title=&#34;Artículos sobre Linux&#34; target=&#34;_blank&#34;&gt;GNU/Linux&lt;/a&gt;. Una de las características principales de TAILS, es que basa todas sus conexiones en &lt;strong&gt;TOR&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://elbauldelprogramador.com/tags/tor&#34;&gt;TOR&lt;/a&gt; es un navegador que protege al usuario frente al análisis del tráfico de paquetes y la vigilancia masiva usando un sistema alternativo de nodos voluntarios y túneles virtuales, en lugar de hacer una conexión directa.&lt;/p&gt;

&lt;p&gt;Además de &lt;a href=&#34;https://elbauldelprogramador.com/tags/tor&#34;&gt;TOR&lt;/a&gt;, TAILS permite utilizar I2P, y en la web oficial viene &lt;a href=&#34;https://tails.boum.org/doc/anonymous_internet/i2p/index.en.html&#34; target=&#34;_blank&#34;&gt;documentado&lt;/a&gt; cómo utilizarlo. El sistema operativo, que ocupa en su totalidad &lt;em&gt;4 gigas&lt;/em&gt;, viene con una serie de programas predeterminados relacionados con la privacidad, la ofimática y la mensajería. En un principio, el pen drive no guarda la información de una sesión a otra, pero &lt;a href=&#34;https://tails.boum.org/install/clone/index.en.html&#34; target=&#34;_blank&#34;&gt;podemos configurarlo&lt;/a&gt; para utilizar la memoria sobrante del pen drive.&lt;/p&gt;

&lt;h1 id=&#34;instalación-y-uso&#34;&gt;Instalación y uso&lt;/h1&gt;

&lt;p&gt;Configurar un pen drive para instalar TAILS es bastante sencillo, especialmente porque &lt;a href=&#34;https://tails.boum.org/install/os/index.en.html&#34; target=&#34;_blank&#34;&gt;viene indicado paso a paso&lt;/a&gt; en la página oficial. Además incluye especificaciones de instalación desde cualquier sistema operativo (Linux, Windows, MAC y otro TAILS). El proceso es básicamente bajarse la imagen desde TOR, preparar un pen drive de 4 o más gigas, e instalar la imagen en éste.&lt;/p&gt;

&lt;figure&gt;
    &lt;amp-img  sizes=&#34;(min-width: 800px) 800px, 100vw&#34; on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/pasted-from-clipboard.png&#34; alt=&#34;{{ .Title }}&#34; title=&#34;{{ .Title }}&#34; width=&#34;946&#34; height=&#34;316&#34;&gt;&lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;Para usar este sistema operativo, simplemente insertamos el pen drive en uno de los puertos de un ordenador apagado y lo encendemos. El ordenador tardará varios segundos en terminar de cargar la imagen, pero cuando lo haga tendremos acceso a nuestro escritorio desde el cual podremos navegar con tranquilidad. Una vez que apagamos el ordenador y retiramos el pen drive, &lt;strong&gt;no queda rastro&lt;/strong&gt; de lo que hayamos hecho en el ordenador, ya que se sobrescribe la memoria.&lt;/p&gt;

&lt;p&gt;Por muy seguro que pueda ser este sistema operativo y las herramientas que ofrece, en la propia página web indica que la mejor forma de protegerse es el &lt;em&gt;sentido común&lt;/em&gt; del usuario, tales como utilizar contraseñas fuertes y saber utilizar apropiadamente las herramientas que ofrece, comprendiendo las limitaciones.&lt;/p&gt;

&lt;h1 id=&#34;programas-y-recursos&#34;&gt;Programas y recursos&lt;/h1&gt;

&lt;p&gt;Algunas de las herramientas más interesantes con las que viene Tails son las siguientes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://guardianproject.info/code/luks/&#34; target=&#34;_blank&#34;&gt;LUKS&lt;/a&gt; (Linux Unified Key Setup), que te permite encriptar pen drives y discos externos.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.eff.org/https-everywhere&#34; target=&#34;_blank&#34;&gt;HTTPS Everywhere&lt;/a&gt; es una extensión desarrollada por la &lt;a href=&#34;eff.org&#34; target=&#34;_blank&#34;&gt;EFF&lt;/a&gt; para encriptar todas las conexiones usando https.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://openpgp.org/&#34; target=&#34;_blank&#34;&gt;OpenPGP&lt;/a&gt; &lt;a href=&#34;https://elbauldelprogramador.com/editar-y-crear-archivos-cifrados-con-gpg-en-vim/&#34; title=&#34;Editar y crear archivos cifrados con GPG en Vim&#34; target=&#34;_blank&#34;&gt;para encriptar y firmar documentos y correos&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://otr.cypherpunks.ca/&#34; target=&#34;_blank&#34;&gt;OTR&lt;/a&gt;, para proteger mensajería instantánea.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wipetools.tuxfamily.org/nautilus-wipe.html&#34; target=&#34;_blank&#34;&gt;Nautilus Wipe&lt;/a&gt; para borrar archivos con seguridad.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;confías-plenamente-en-tails-ellos-esperan-que-no&#34;&gt;¿Confías plenamente en TAILS? ellos esperan que no&lt;/h1&gt;

&lt;p&gt;Una de los problemas fundamentales de la sociedad actual en términos de informática es el desinterés del usuario medio por su privacidad y seguridad. Y esta concienciación empieza precisamente con la duda. Sean cuales sean nuestros motivos para confiar en un sistema operativo, programa o aplicación, deben haber pasado un filtro de duda y escepticismo, y eso mismo &lt;a href=&#34;https://tails.boum.org/doc/about/trust/index.en.html&#34; target=&#34;_blank&#34;&gt;nos sugieren&lt;/a&gt; en la página de TAILS.&lt;/p&gt;

&lt;p&gt;Las herramientas que ofrecen no sólo tienen un objetivo técnico si no que se esfuerzan en ofrecerte una nueva visión y un cambio en la forma en que sus usuarios usan la tecnología y su información. El uso de este sistema debe ir acompasando al interés por nuestra privacidad, y a la curiosidad por saber qué se hace con nuestra información.&lt;/p&gt;

&lt;p&gt;Para ello ofrecen una serie de razones por las cuales puede decirse que abogan por estas cualidades. Basa su justificación en el uso de software libre bien documentado, TOR, y el hecho de utilizar Debian GNU/Linux, que aunque ha tenido bugs importantes como &lt;a href=&#34;https://lists.debian.org/debian-security-announce/2008/msg00152.html&#34; target=&#34;_blank&#34;&gt;SSH PRNG&lt;/a&gt; no se han encontrado vulnerabilidades de seguridad hasta la fecha, lo que lo convierte en un buen candidato para este sistema.&lt;/p&gt;

&lt;h1 id=&#34;rompiendo-barreras&#34;&gt;Rompiendo barreras&lt;/h1&gt;

&lt;p&gt;Es de saber que las distintas distribuciones de linux tienen cierta fama entre los programadores e informáticos de todo el mundo. Debido a la amplia oferta de sistemas operativos disponibles, hay algunas más o menos amigables para un usuario medio. TAILS pretende ser accesible y manejable para cualquiera, tenga o no una base sólida en el uso de programación, linux y Bash. Para ello ofrece una interfaz gráfica intuitiva y una instalación simple.&lt;/p&gt;

&lt;p&gt;El uso de este sistema puede tener muchas aplicaciones en nuestro día a día, y es completamente legal. No necesitamos ser Edward Snowden para &lt;strong&gt;necesitar o querer&lt;/strong&gt; privacidad, por ejemplo, a la hora de consultar nuestro correo en un ordenador público. La idea de este sistema es liberarnos de la obligación de &amp;ldquo;&lt;em&gt;confiar&lt;/em&gt;&amp;rdquo; en un ordenador público, o de algún amigo.&lt;/p&gt;

&lt;p&gt;Esta idea puede que nos resulte difícil de agregar a nuestra rutina, pero sin duda se debería hacerse una pequeña reflexión sobre ello. El ritmo de nuestra sociedad ha cambiado con rapidez en pocos años, y dependemos en nuestra vida privada y trabajo (con frecuencia) de programas y aplicaciones que manejan gran cantidad de información privada. Esta rapidez ha hecho que el usuario medio se acostumbre a la comodidad de estas herramientas, pero se olvide con frecuencia de proteger sus datos a la hora de utilizarla, muchas veces por la gran cantidad de trabas y dificultades para ello.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cómo parsear el frontmatter con Python</title>
      <link>https://elbauldelprogramador.com/how-to-parse-frontmatter-with-python/</link>
      <pubDate>Thu, 26 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/how-to-parse-frontmatter-with-python/</guid>
      <description>&lt;p&gt;Hace poco he migrado el blog de &lt;em&gt;Jekyll&lt;/em&gt; a &lt;em&gt;Hugo&lt;/em&gt;. El proceso ha sido fácil, pero he tenido que cambiar varias cosas en el &lt;em&gt;frontmatter&lt;/em&gt; de los artículos.&lt;/p&gt;

&lt;p&gt;Tras buscar en Google encontré un &lt;a href=&#34;https://elbauldelprogramador.com/tags/parser/&#34; target=&#34;_blank&#34;&gt;parseador&lt;/a&gt; en &lt;a href=&#34;https://elbauldelprogramador.com/tags/python&#34; title=&#34;Artículos sobre python&#34; target=&#34;_blank&#34;&gt;python&lt;/a&gt; para &lt;em&gt;frontmatter&lt;/em&gt; escritos en &lt;em&gt;YAML&lt;/em&gt;. A continuación se explica cómo instalarlo y usarlo.&lt;/p&gt;

&lt;h1 id=&#34;instalar-python-frontmatter&#34;&gt;Instalar Python-Frontmatter&lt;/h1&gt;

&lt;p&gt;Basta con ejecutar&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo pip install python-frontmatter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;usar-python-frontmatter&#34;&gt;Usar Python-Frontmatter&lt;/h1&gt;

&lt;h2 id=&#34;ejemplo-1-añadir-un-nuevo-valor-al-frontmatter&#34;&gt;Ejemplo 1: Añadir un nuevo valor al FrontMatter&lt;/h2&gt;

&lt;p&gt;Una vez instalado, es bastante sencillo de usar. Supongamos que queremos añadir una variable que almacene el autor del artículo, para ello bastaría el siguiente código:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;frontmatter&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;io&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os.path&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;basename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;splitext&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;glob&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Ruta a los ficheros&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;en/*.markdown&amp;quot;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Iterar sobre ellos&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;glob&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;glob&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# Parsear los ficheros&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;frontmatter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;author&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;author&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;alex&amp;quot;&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# Guardar el fichero modificado&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;newfile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;encoding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;frontmatter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dump&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;newfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;newfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Eso es todo, así de simple. Veamos un ejemplo algo más complejo.&lt;/p&gt;

&lt;h2 id=&#34;ejemplo-2-modificar-variables-existentes-en-el-frontmatter&#34;&gt;Ejemplo 2: Modificar variables existentes en el FrontMatter&lt;/h2&gt;

&lt;p&gt;En este caso, supongamos dos variables, &lt;code&gt;mainclass&lt;/code&gt; y &lt;code&gt;categories&lt;/code&gt;. Queremos incluir el valor de &lt;code&gt;mainclass&lt;/code&gt; a los valores existentes en &lt;code&gt;categories&lt;/code&gt;, y a la vez mantener los valores actuales en &lt;code&gt;categories&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;glob&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;glob&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;frontmatter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# Si no exite la variable categories, crearla con el valor de mainclass&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mainclass&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Categories existe&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mainclass&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# Si categories contiene un solo valor ej: categories: &amp;#39;category1&amp;#39;&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lower&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                    &lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Si categories es una lista ej: categories: [cat1, cat2]&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lower&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                    &lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

            &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# Guardar los cambios&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;newfile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;encoding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;frontmatter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dump&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;newfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;newfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/eyeseast/python-frontmatter&#34; target=&#34;_blank&#34; title=&#34;Python fronmatter repo&#34;&gt;Repositorio Python-Frontmatter en github&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Compilar OpenCV 3.2 para Java y usarlo en IntelliJ IDEA</title>
      <link>https://elbauldelprogramador.com/compile-opencv-3.2-with-java-intellij-idea/</link>
      <pubDate>Wed, 25 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/compile-opencv-3.2-with-java-intellij-idea/</guid>
      <description>&lt;p&gt;Si quieres compilar OpenCV 3.2 por ti mismo con soporte para Java, esto te ayudará. También te ayudará si, compilado OpenCV, quisieras saber como usarlo en IntelliJ IDEA. ¡Empecemos!&lt;/p&gt;

&lt;p&gt;Para compilar OpenCV 3.2 con soporte para Java debes comprobar que tienes instalado en tu sistema lo siguiente:&lt;/p&gt;

&lt;h1 id=&#34;prerequisitos&#34;&gt;Prerequisitos&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Java JDK 7+: necesitamos un JDK para construir el Java &lt;em&gt;binding&lt;/em&gt;, así que si no lo tienes instalado puedes hacerlo desde &lt;a href=&#34;http://www.oracle.com/technetwork/java/javase/downloads/index.html&#34; title=&#34;www.oracle.com&#34; target=&#34;_blank&#34;&gt;oracle web page&lt;/a&gt;. Puedes comprobar tu versión de JDK ejecutando: &lt;code&gt;java -version&lt;/code&gt;  en un terminal.&lt;/li&gt;
&lt;li&gt;Apache Ant: teclea &lt;code&gt;ant -version&lt;/code&gt; para comprobar que tienes Apache Ant instalado. Si no lo tienes, instálalo tecleando &lt;code&gt;sudo apt-get install ant&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Python 2.6+: teclea &lt;code&gt;python --version&lt;/code&gt; en la terminal para comprobar si tienes python instalado y en que versión.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;h1 id=&#34;1-descarga-opencv-3-2&#34;&gt;1. Descarga OpenCV 3.2&lt;/h1&gt;

&lt;p&gt;Ve a &lt;a href=&#34;http://opencv.org/&#34; title=&#34;opencv.org&#34; target=&#34;_blank&#34;&gt;opencv documentation&lt;/a&gt; y descarga la última versión estable para Linux/Mac.&lt;/p&gt;

&lt;h1 id=&#34;2-descomprime-donde-quieras-instalar-y-crea-un-directorio-en-el-que-construir&#34;&gt;2. Descomprime donde quieras instalar y crea un directorio en el que construir&lt;/h1&gt;

&lt;p&gt;Extrae el contenido de la carpeta &lt;strong&gt;opencv-3.2.0&lt;/strong&gt; donde quieras posicionarlo. Después, navega dentro de ese directorio y crea una carpeta vacía &lt;strong&gt;build&lt;/strong&gt;, donde se guardarán los resultados de la compilación:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    cris@cris ~ $ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; opencv-3.2.0/
    cris@cris ~ $ mkdir build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;3-exporta-la-variable-java-home-y-genera-el-makefile&#34;&gt;3. Exporta la variable JAVA_HOME y genera el makefile&lt;/h1&gt;

&lt;p&gt;Debes comprobar que la variable $JAVA_HOME contiene el &lt;em&gt;path&lt;/em&gt; a tu JDK y que sea visible a otros procesos. Tecleando: &lt;code&gt;echo $JAVA_HOME&lt;/code&gt; debe mostrarse el &lt;em&gt;path&lt;/em&gt; de tu JDK. Si no, en una terminalmodifica el valor de la variable al &lt;em&gt;path&lt;/em&gt; del JDK y expórtala. Por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;cris@cris ~$ &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/home/jdk1.8.0_111/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;navega al directirio &lt;strong&gt;build&lt;/strong&gt; y genera el &lt;em&gt;makefile&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;cris@cris ~/opencv-3.2.0/build $ cmake -DBUILD_SHARED_LIBS&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;OFF ..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Comprueba que cuando estás generando el &lt;em&gt;makefile&lt;/em&gt; la salida en el campo de Java es la siguiente:
&lt;figure&gt;
&lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/output-build-makefiles-opencv-java.png&#34; title=&#34;&#34; alt=&#34;&#34; width=&#34;201px&#34; height=&#34;190px&#34;&gt;&lt;/amp-img&gt;
&lt;figcaption&gt;construcción &lt;em&gt;makefile&lt;/em&gt;&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Es decir, debe estar especificado Apache Ant, así como el &lt;em&gt;path&lt;/em&gt; JNI, y &lt;em&gt;Java wrappers&lt;/em&gt; debe estar a &lt;em&gt;YES&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&#34;4-construye&#34;&gt;4. Construye&lt;/h1&gt;

&lt;p&gt;Ejecuta el  &lt;em&gt;make&lt;/em&gt; para compilar openCV con soporte para Java y crear el jar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;cris@cris ~/opencv-3.2.0/build $ make -j8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cuando finalice, comprueba que se han creado los archivos &lt;strong&gt;opencv-320.jar&lt;/strong&gt; y &lt;strong&gt;libopencv_java320.so&lt;/strong&gt; (.so o .dll):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    cris@cris ~/opencv-3.2.0/build $ ls -R &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep opencv-320.jar
    opencv-320.jar
    opencv-320.jar.dephelper

    cris@cris ~/opencv-3.2.0/build $ ls -R &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep libopencv_java320.so
    libopencv_java320.so
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ahora que lo tenemos compilado, el siguiente paso será crear un ejemplo en Java para comprobar que funciona. Yo uso el IDE IntelliJ IDEA Ultimate 2016, por lo que en la siguiente sección explicaré como crear un proyecto en Java de OpenCV en INTELLIJ.&lt;/p&gt;

&lt;h1 id=&#34;creando-un-proyecto-java-opencv-en-intellij-16&#34;&gt;Creando un proyecto Java OpenCV en INTELLIJ 16&lt;/h1&gt;

&lt;p&gt;La forma más fácil de crear un proyecto de OpenCV en Java y Scala es usando SBT.
 Así que abrimos IntelliJ y creamos un nuevo proyecto SBT. Una ve creado, seleccionamos &lt;code&gt;File-&amp;gt;Project Structure&lt;/code&gt;  (Comprueba que en Module JDK aparece tu SDK)
 y selecciona la pestaña &lt;strong&gt;Dependencies&lt;/strong&gt;. Aquí, hacemos click en &lt;em&gt;+&lt;/em&gt; y añadimos &lt;strong&gt;opencv-320.jar&lt;/strong&gt; y la librería, que se encuentra en &lt;strong&gt;opencv3.2.0/build/lib&lt;/strong&gt; :&lt;/p&gt;

&lt;figure&gt;
&lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/adding-Opencv-jar-to-IntelliJ-project.png&#34; title=&#34;&#34; alt=&#34;&#34; width=&#34;201px&#34; height=&#34;190px&#34;&gt;&lt;/amp-img&gt;
&lt;figcaption&gt;añadiendo .jar file&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
&lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/adding-libpath-to-intelliJ-project.png&#34; title=&#34;&#34; alt=&#34;&#34; width=&#34;201px&#34; height=&#34;190px&#34;&gt;&lt;/amp-img&gt;
&lt;figcaption&gt;añadiendo .so file&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Finalmente, tomamos el ejemplo de detección de caras de &lt;a href=&#34;http://docs.opencv.org/2.4.4-beta/doc/tutorials/introduction/desktop_java/java_dev_intro.html&#34; title=&#34;docs.opencv.org&#34; target=&#34;_blank&#34;&gt;opencv documentation&lt;/a&gt; , lo corregimos (dado que es para la versión 2.4.4 de OpenCV) y lo guardamos en un fichero llamado &lt;strong&gt;helloOpenCV.java&lt;/strong&gt; dentro de la carpeta &lt;code&gt;src-&amp;gt;main-&amp;gt;java&lt;/code&gt;.  El código de ejemplo adaptado a la versión 3.2 de OpenCV es:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.opencv.core.*&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.opencv.core.Mat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.opencv.core.MatOfRect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.opencv.core.Point&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.opencv.core.Rect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.opencv.core.Scalar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.opencv.imgcodecs.Imgcodecs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.opencv.objdetect.CascadeClassifier&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;opencv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;imgproc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Imgproc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;rectangle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Detects faces in an image, draws boxes around them, and writes the results&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// to &amp;quot;faceDetection.png&amp;quot;.&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;DetectFaceDemo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;\nRunning DetectFaceDemo&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;// Create a face detector from the cascade file in the resources&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// directory.&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;CascadeClassifier&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;faceDetector&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CascadeClassifier&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getClass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;/lbpcascade_frontalface.xml&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getPath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;Mat&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;image&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Imgcodecs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;imread&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getClass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;/lena.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getPath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;// Detect faces in the image.&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// MatOfRect is a special container class for Rect.&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;MatOfRect&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;faceDetections&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MatOfRect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;faceDetector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;detectMultiScale&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;faceDetections&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

        &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Detected %s faces&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;faceDetections&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toArray&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;// Draw a bounding box around each face.&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Rect&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rect&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;faceDetections&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toArray&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;rectangle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Point&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Point&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Scalar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;// Save the visualized detection.&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;faceDetection.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Writing %s&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;Imgcodecs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;imwrite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;HelloOpenCV&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Hello, OpenCV&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;// Load the native library.&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;loadLibrary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Core&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;NATIVE_LIBRARY_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DetectFaceDemo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
     &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Por último ejecutamos el ejemplo &lt;strong&gt;HelloOpenCV&lt;/strong&gt; y comprobamos que funciona, escribiendo la detección de la cara de lenna en la imágen &lt;strong&gt;faceDetection.png&lt;/strong&gt;.&lt;/p&gt;

&lt;figure&gt;
&lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/example-face-detection-with-opencv.png&#34; title=&#34;&#34; alt=&#34;&#34; width=&#34;201px&#34; height=&#34;190px&#34;&gt;&lt;/amp-img&gt;
&lt;figcaption&gt;ejemplo detección de caras&lt;/figcaption&gt;
&lt;/figure&gt;</description>
    </item>
    
    <item>
      <title>Los RSS Del Blog Ahora Muestran El Contenido Completo</title>
      <link>https://elbauldelprogramador.com/los-rss-del-blog-ahora-muestran-el-contenido-completo/</link>
      <pubDate>Sat, 03 Dec 2016 10:40:33 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/los-rss-del-blog-ahora-muestran-el-contenido-completo/</guid>
      <description>&lt;p&gt;Últimamente he recibo varios consejos de lectores a los que les gustaría poder leer los artículos por completo desde sus aplicaciones &lt;em&gt;RSS&lt;/em&gt;. Es por ello que he decidido habilitarlos.&lt;/p&gt;

&lt;p&gt;Si aún no lo sabías, es posible suscribirse a cada una de las categorías de blog independientemente, o al feed completo. Aquí dejo la lista:&lt;/p&gt;

&lt;p&gt;El blog tiene tantos feeds como &lt;em&gt;categorías/etiquetas&lt;/em&gt; además del feed principal. Esto quiere decir:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;El feed principal, con el que recibirás todas las publicaciones es &lt;strong&gt;&lt;a type=&#34;application/rss+xml&#34; href=&#34;https://elbauldelprogramador.com/index.xml&#34; target=&#34;_blank&#34;&gt;/index.xml&lt;/a&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Para cada &lt;em&gt;categoría/etiqueta&lt;/em&gt; se crea un feed, por ejemplo, en &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/categories/security-now/&#34;&gt;/categories/security-now/&lt;/a&gt;&lt;/strong&gt; existe el feed &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/categories/security-now/index.xml&#34;&gt;/categories/security-now/index.xml&lt;/a&gt;&lt;/strong&gt;, en el cual se publicarán únicamente los artículos de la categoría &lt;em&gt;Security Now!&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;De igual manera ocurre con las etiquetas, para suscribirse al RSS de una etiqueta, por ejemplo &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/tags/gentoo/&#34;&gt;/tags/gentoo/&lt;/a&gt;&lt;/strong&gt; el feed correspondiente es &lt;strong&gt;&lt;a href=&#34;https://elbauldelprogramador.com/tags/gentoo/index.xml&#34;&gt;/tags/gentoo/index.xml&lt;/a&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Guía Gratuita: 5 Lightweight Linux Distros Ideal for an Intel Atom Processor PC</title>
      <link>https://elbauldelprogramador.com/5-lightweight-linux-distros-ideal-for-an-intel-atom-processor-pc/</link>
      <pubDate>Sun, 27 Nov 2016 10:18:24 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/5-lightweight-linux-distros-ideal-for-an-intel-atom-processor-pc/</guid>
      <description>&lt;figure&gt;
   &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/guides/5-Lightweight-Linux-Distros-Ideal-for-an-Intel-Atom-Processor-PC-centered.jpg&#34; alt=&#34;Guía Gratuita: 5 Lightweight Linux Distros Ideal for an Intel Atom Processor PC&#34; title=&#34;Guía Gratuita: 5 Lightweight Linux Distros Ideal for an Intel Atom Processor PC&#34; width=&#34;800&#34; height=&#34;420&#34;&gt;
   &lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;Bring your Atom-powered device back to life with a lightweight distribution! There&amp;rsquo;s no shortage of Linux distributions, or lightweight distros for that matter.&lt;/p&gt;

&lt;p&gt;Here are the top five lean distros to breathe new life into your Atom-powered devices.&lt;/p&gt;


&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt;: Si quieres apoyar el trabajo que realizamos en &lt;em&gt;El Baúl del Programador&lt;/em&gt;, descargar alguna de estas guías es una buena forma. Para ello en el formuario de descarga &lt;strong&gt; debes indicar que trabajas en el sector relacionado con la guía que descargas, a que te dedicas etc, de lo contrario no obtendremos comisión&lt;/strong&gt; ($1.5). Si tienes un blog y quieres usar esta forma de monetización, puedes darte de alta en &lt;a id=&#34;revresponse&#34; href=&#34;http://www.revresponse.com/join.php?refbrand=bashyc-blogspot&#34; target=&#34;_blank&#34; title=&#34;RevResponse&#34;&gt;RevResponse&lt;/a&gt; y empezar a ofrecer guías de interés a tus lectores. Visita el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; target=&#34;_blank&#34; title=&#34;Catálogo completo de Guías gratuítas&#34;&gt;catálogo completo de guías.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;div class=&#34;button-post&#34;&gt;
  &lt;h2&gt;&lt;a href=&#34;http://bashyc-blogspot.tradepub.com/c/pubRD.mpl?sr=oc&amp;_t=oc:&amp;qf=w_make313&#34; target=&#34;_blank&#34;&gt;Descárgala ahora&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;

&lt;p&gt;Visita la página &lt;a href=&#34;https://elbauldelprogramador.com/manuales-gratuitos/&#34; target=&#34;_blank&#34;&gt;Manuales gratuitos&lt;/a&gt; o consulta el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; title=&#34;Catálogo completo de Guías gratuítas &#34; target=&#34;_blank&#34;&gt;catálogo completo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Guía Gratuita: The Power of Predictive Analytics</title>
      <link>https://elbauldelprogramador.com/the-power-of-predictive-analytics/</link>
      <pubDate>Sun, 27 Nov 2016 09:54:40 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/the-power-of-predictive-analytics/</guid>
      <description>&lt;figure&gt;
   &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/guides/The-Power-of-Predictive-Analytics-centered.jpg&#34; alt=&#34;{{ title }}&#34; title=&#34;{{ title }}&#34; width=&#34;800&#34; height=&#34;420&#34;&gt;
   &lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;Predictive analytics provide companies the ability to systematically leverage data from across the value chain to peer into the future and identify the most likely outcomes.&lt;/p&gt;

&lt;p&gt;Traditional systems and processes are focused on internal operations and not designed to use real-time data from trading partners. Predictive analytics, on the other hand, provide the ability to systematically leverage data from across the value chain to peer into the future and identify the most likely outcomes.&lt;/p&gt;

&lt;p&gt;Learn about using predictive analytics to help new product introductions and promotions succeed.&lt;/p&gt;


&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt;: Si quieres apoyar el trabajo que realizamos en &lt;em&gt;El Baúl del Programador&lt;/em&gt;, descargar alguna de estas guías es una buena forma. Para ello en el formuario de descarga &lt;strong&gt; debes indicar que trabajas en el sector relacionado con la guía que descargas, a que te dedicas etc, de lo contrario no obtendremos comisión&lt;/strong&gt; ($1.5). Si tienes un blog y quieres usar esta forma de monetización, puedes darte de alta en &lt;a id=&#34;revresponse&#34; href=&#34;http://www.revresponse.com/join.php?refbrand=bashyc-blogspot&#34; target=&#34;_blank&#34; title=&#34;RevResponse&#34;&gt;RevResponse&lt;/a&gt; y empezar a ofrecer guías de interés a tus lectores. Visita el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; target=&#34;_blank&#34; title=&#34;Catálogo completo de Guías gratuítas&#34;&gt;catálogo completo de guías.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;div class=&#34;button-post&#34;&gt;
  &lt;h2&gt;&lt;a href=&#34;http://bashyc-blogspot.tradepub.com/c/pubRD.mpl?sr=oc&amp;_t=oc:&amp;qf=w_eope20&#34; target=&#34;_blank&#34;&gt;Descárgala ahora&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;

&lt;p&gt;Visita la página &lt;a href=&#34;https://elbauldelprogramador.com/manuales-gratuitos/&#34; target=&#34;_blank&#34;&gt;Manuales gratuitos&lt;/a&gt; o consulta el &lt;a href=&#34;http://elbauldelprogramador.tradepub.com/category/information-technology/1207/&#34; title=&#34;Catálogo completo de Guías gratuítas &#34; target=&#34;_blank&#34;&gt;catálogo completo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cómo Eliminar Ficheros Demasiado Grandes Para GitHub</title>
      <link>https://elbauldelprogramador.com/eliminar-ficheros-grandes-github/</link>
      <pubDate>Sat, 12 Nov 2016 08:12:16 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/eliminar-ficheros-grandes-github/</guid>
      <description>&lt;p&gt;Trabajando en un repositorio &lt;a href=&#34;https://elbauldelprogramador.com/git/&#34; title=&#34;Artículos sobre Git&#34; target=&#34;_blank&#34;&gt;git&lt;/a&gt;, cometí el error de hacer un &lt;a href=&#34;https://elbauldelprogramador.com/mini-tutorial-y-chuleta-de-comandos-git/&#34; title=&#34;Git: Mini Tutorial y chuleta de comandos&#34; target=&#34;_blank&#34;&gt;commit&lt;/a&gt; de un fichero demasiado grande (~240mb). Github tiene un tamaño máximo de 100mb, por lo que no me dejaba subir los cambios a Github. Tras borrar el fichero, seguía con el problema, ya que el fichero seguía en el historial del repositorio. Tras buscar un rato, encontré la solución, veamos:&lt;/p&gt;

&lt;h2 id=&#34;1-eliminar-el-fichero-del-historial-de-git&#34;&gt;1. Eliminar el fichero del historial de git&lt;/h2&gt;

&lt;p&gt;Para ello basta ejecutar el siguiente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ git filter-branch --index-filter &lt;span class=&#34;s1&#34;&gt;&amp;#39;git rm -r --cached --ignore-unmatch &amp;lt;file/dir&amp;gt;&amp;#39;&lt;/span&gt; HEAD
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;Y reemplazar &lt;code&gt;&amp;lt;file/dir&amp;gt;&lt;/code&gt; con la ruta de nuestro fichero.&lt;/p&gt;

&lt;h2 id=&#34;2-eliminar-por-completo-el-rastro-del-fichero&#34;&gt;2. Eliminar por completo el rastro del fichero&lt;/h2&gt;

&lt;p&gt;El comando anterior crea una copia de seguridad en caso de que hayamos cometido un error, si ejecutamos&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ git lola --name-status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Veremos un commit parecido a este (&lt;code&gt;* SHA1 (refs/original/refs/heads/master) mensaje del commit&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;En este commit aún está el fichero problemático, para borrarlo definitivamente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ git update-ref -d refs/original/refs/heads/master
$ git reflog expire --expire&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;now --all
$ git gc --prune&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;now
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;3-enviar-los-cambios&#34;&gt;3. Enviar los cambios&lt;/h2&gt;

&lt;p&gt;Una vez hecho esto, solo resta enviar los cambios a Github:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;$ git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Y habremos solucionado el problema.&lt;/p&gt;

&lt;h2 id=&#34;fuentes&#34;&gt;Fuentes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/2100907/how-to-remove-delete-a-large-file-from-commit-history-in-git-repository&#34; title=&#34;How to remove/delete a large file from commit history in Git repository?&#34; target=&#34;_blank&#34;&gt;How to remove/delete a large file from commit history in Git repository?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/19573031/cant-push-to-github-because-of-large-file-which-i-already-deleted&#34; title=&#34;Can&#39;t push to GitHub because of large file which I already deleted&#34; target=&#34;_blank&#34;&gt;Can&amp;rsquo;t push to GitHub because of large file which I already deleted&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Cómo Pasé De Usar Excel a Usar R Y Python</title>
      <link>https://elbauldelprogramador.com/de-excel-a-python-y-r/</link>
      <pubDate>Fri, 04 Nov 2016 15:23:40 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/de-excel-a-python-y-r/</guid>
      <description>&lt;p&gt;Cómo pasé de analizar resultados con Excel a analizarlos con R+Python&lt;/p&gt;

&lt;h2 id=&#34;cómo-empezó-todo&#34;&gt;Cómo empezó todo&amp;hellip;&lt;/h2&gt;

&lt;p&gt;Todo empezó cuando me mandaron hacer una práctica para la universidad en la que tenía que:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Desarrollar cuatro algoritmos diferentes.&lt;/li&gt;
&lt;li&gt;Ejecutarlos en 20 casos diferentes, desde tamaño &lt;strong&gt;&lt;em&gt;n = 20&lt;/em&gt;&lt;/strong&gt; hasta tamaño &lt;strong&gt;&lt;em&gt;n = 256&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Hacer una documentación explicando el problema a resolver, cada algoritmo desarrollado e incluyendo un pseudocódigo de los mismos.&lt;/li&gt;
&lt;li&gt;Incluir en dicha documentación un estudio estadístico de los resultados, valorando cada algoritmo en función de cómo había trabajado con casos grandes (&lt;strong&gt;&lt;em&gt;n&lt;/em&gt;&lt;/strong&gt; grande) o casos pequeños (&lt;strong&gt;&lt;em&gt;n&lt;/em&gt;&lt;/strong&gt; pequeño) y sobre la eficacia del algoritmo en comparación con el mejor resultado conocido y con los resultados obtenidos por el resto de algoritmos. Además, incluir gráficas que apoyaran tus conclusiones estaba &amp;ldquo;muy bien visto&amp;rdquo; (codo, codo, guiño guiño).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;

&lt;p&gt;y todo esto en unas tres semanas aproximadamente.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Puedes ver una práctica del estilo en &lt;a href=&#34;https://elbauldelprogramador.com/peso-hamming-y-optimizacion/&#34; title=&#34;Optimizando código y evaluando el rendimiento&#34; target=&#34;_blank&#34;&gt;Optimizando código y evaluando el rendimiento&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;dormida-en-los-laureles&#34;&gt;Dormida en los laureles&lt;/h3&gt;

&lt;p&gt;Empecé con bastante tranquilidad pensando que en dos semanas tendría todo el trabajo hecho y me quedaría otra semana extra para documentar. A la hora de realizar los algoritmos me encontré con algunos fallos y varios quebraderos de cabeza, pero pude tenerlos todos terminados en esas dos semanas. Empecé a hacer mi documentación explicando con todo detalle todo lo que había hecho, centrándome en obtener tanto una buena presentación como una buena redacción y, finalmente, me quedaron dos días para hacer lo más importante: el análisis de los resultados.&lt;/p&gt;

&lt;p&gt;Para hacer el análisis, el profesor nos había dejado preparada una hoja de cálculo &lt;em&gt;plantilla&lt;/em&gt; con todos los datos que teníamos que rellenar y calcular. En rellenar la maldita plantilla se me fue media mañana, por no decir la mañana entera, ya que en &lt;em&gt;Calc&lt;/em&gt; tienes que introducir los decimales con una coma y &lt;em&gt;Python&lt;/em&gt; los devolvía con un punto. A pesar de esto aún no cundía demasiado el pánico pues tenía otro día más.&lt;/p&gt;

&lt;p&gt;Cuando ya calculé con &lt;em&gt;Calc&lt;/em&gt; todo lo que había que calcular vino &lt;strong&gt;el problema&lt;/strong&gt;: poner todos los datos que había calculado en mi documento de LaTeX. Un amigo me pasó un script que te permite exportar la tabla con sintaxis &lt;code&gt;tabular&lt;/code&gt; de &lt;a href=&#34;https://elbauldelprogramador.com/categories/latex/&#34; title=&#34;Artículos sobre LaTeX&#34; target=&#34;_blank&#34;&gt;LaTeX&lt;/a&gt; pero, en la hoja de cálculo tenía las tablas que había hecho para todos y cada uno de los algoritmos y en mi documento tenían que ir separadas en secciones. Al final después de pelearme con &lt;em&gt;Calc&lt;/em&gt; conseguí separar las tablas e incluirlas en mi documento, pero había perdido un precioso día para documentar y analizar los resultados que había estado &lt;strong&gt;todo el día&lt;/strong&gt; preparando.&lt;/p&gt;

&lt;h3 id=&#34;último-día-kernel-panic&#34;&gt;Último día. Kernel panic.&lt;/h3&gt;

&lt;p&gt;Llegó el último día que, como tenía clase por la tarde, era en realidad &lt;em&gt;la última mañana&lt;/em&gt;. Decidí que sería una buena idea poner gráficas en mi documentación, pues con las tablas no me había dado como para escribir &lt;em&gt;todo lo que me hubiese gustado&lt;/em&gt; y además, le darían a mi documento un extra de &amp;ldquo;profesionalidad&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Así que me dispuse a intentar generar un gráfico en la hoja de cálculo que tenía. Intenté todas las combinaciones posibles de datos, tipos de gráficos, colores, leyendas y demás herramientas que proporciona &lt;em&gt;Calc&lt;/em&gt; para hacer gráficos y con ninguna obtenía un buen gráfico que realmente reflejase lo que quería. De hecho, lo más decente que pude obtener fueron dos gráficos que no decían absolutamente nada sobre los datos y que no supe ni siquiera etiquetar&amp;hellip; supongo que por los nervios de que la entrega se aproximaba y mi análisis daba pena.&lt;/p&gt;

&lt;p&gt;Estos son los gráficos que finalmente incluí en la que iba a ser la chachi documentación extra profesional a 5 minutos de que la entrega se cerrase.&lt;/p&gt;

&lt;figure&gt;
    &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/calc1.png&#34; alt=&#34;{{ title }}&#34; title=&#34;{{ title }}&#34; width=&#34;605&#34; height=&#34;340&#34;&gt;&lt;/amp-img&gt;
    &lt;figcaption&gt;Primer gráfico horrible&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/calc2.png&#34; alt=&#34;{{ title }}&#34; title=&#34;{{ title }}&#34; width=&#34;605&#34; height=&#34;340&#34;&gt;&lt;/amp-img&gt;
    &lt;figcaption&gt;Segundo gráfico horrible&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;¿Podéis sacar alguna conclusión de ellos? Yo no.&lt;/p&gt;

&lt;h2 id=&#34;cuello-de-botella&#34;&gt;Cuello de botella&lt;/h2&gt;

&lt;p&gt;Tras el gran desastre que hice en la primera práctica, me prometí que no me pasaría lo mismo en la segunda. Tras un rato de reflexión, me di cuenta de que mi principal problema fue el tiempo que &lt;strong&gt;gasté&lt;/strong&gt; metiendo datos en la hoja de cálculo a mano e intentando hacer una gráfica medio decente. Tareas tediosas y, sobre todo, que podría haber automatizado con un script.&lt;/p&gt;

&lt;p&gt;Empecé a investigar cómo podría hacer un equivalente a mi hoja de cálculo, pero &lt;em&gt;exportable&lt;/em&gt; a LaTeX y sin tener que usar &lt;em&gt;Calc&lt;/em&gt;. Fue entonces cuando encontré el maravillo paquete de &lt;em&gt;Python&lt;/em&gt; llamado &lt;code&gt;tabulate&lt;/code&gt;. Este paquete, te permite generar a partir de una &lt;em&gt;lista de listas&lt;/em&gt; una preciosa tabla en varios formatos (podéis consultarlos en su &lt;a href=&#34;https://pypi.python.org/pypi/tabulate&#34; target=&#34;_blank&#34;&gt;documentación&lt;/a&gt;) entre los que se encontraba &lt;code&gt;tabular&lt;/code&gt; de LaTeX.&lt;/p&gt;

&lt;p&gt;Tuve la suerte de haber hecho mi práctica en &lt;em&gt;python&lt;/em&gt;, por lo que añadirle el script que voy a describir a continuación fue pan comido.&lt;/p&gt;

&lt;h2 id=&#34;mi-script-con-tabulate&#34;&gt;Mi script con &lt;code&gt;tabulate&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Si habéis leído la documentación de &lt;code&gt;tabulate&lt;/code&gt; habréis visto que es bastante sencillo de usar: sólo hay que hacer una lista de listas, donde cada lista de la lista representa una fila de la tabla. En mi caso, la información que tenía que almacenar para cada algoritmo era:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Caso&lt;/th&gt;
&lt;th&gt;Coste obtenido&lt;/th&gt;
&lt;th&gt;Tiempo de ejecución&lt;/th&gt;
&lt;th&gt;Desviación&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;La última columna era una forma de reflejar la diferencia del coste obtenido por el algoritmo con el mejor coste obtenido para ese caso del problema.&lt;/p&gt;

&lt;p&gt;Mi script consistió en ejecutar todos los casos del algoritmo y guardar dos medidas, en dos listas separadas: tiempo de ejecución y coste de la solución obtenida. De antemano tenía guardados los distintos casos que tenía que ejecutar y las mejores soluciones conocidas de cada algoritmo, que usé para calcular la desviación de cada solución con la siguiente fórmula:&lt;/p&gt;

&lt;figure&gt;
    &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/zzpvyzc.png&#34; alt=&#34;{{ title }}&#34; title=&#34;{{ title }}&#34; width=&#34;197&#34; height=&#34;36&#34;&gt;&lt;/amp-img&gt;
&lt;/figure&gt;

&lt;p&gt;Una vez tenía estos datos, generé la tabla en formato LaTeX consultando las diferentes listas que había creado.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;imprime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Calculamos la desviación de cada solución con respecto a la mejor&lt;/span&gt;
    &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;calcula_desv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Generamos cada fila de la tabla accediendo a los datos guardados en cada&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# una de las listas&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ficheros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;valores&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tiempos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;desviaciones&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ficheros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))]&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Añadimos a la tabla una cabecera para cada columna&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tabulate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Fichero&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Coste&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Tiempo&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Desviación&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;tablefmt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;latex&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Además, calculamos la desviación media y el tiempo medio de ejecución&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Desviación = &amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;desv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Tiempo = &amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tiempo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;y-los-gráficos-qué&#34;&gt;Y los gráficos, ¿qué?&lt;/h2&gt;

&lt;p&gt;Una vez tuve mi script &amp;ldquo;hoja de cálculo&amp;rdquo; hecho, pasé a pensar cómo podría automatizar la creación de los gráficos que yo quería. Justo por esa época, @JJ dio una &lt;a href=&#34;http://jj.github.io/data-vis/#/&#34; target=&#34;_blank&#34;&gt;charla&lt;/a&gt; sobre &lt;em&gt;Visualización de datos con R&lt;/em&gt; en la que describía el paquete &lt;code&gt;ggplot2&lt;/code&gt;. El funcionamiento de &lt;code&gt;ggplot2&lt;/code&gt; es muy sencillo, y permite obtener gráficos muy bonitos e ilustrativos a partir de un &lt;em&gt;Data frame&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Antes de describir el script en &lt;a href=&#34;https://elbauldelprogramador.com/tags/r&#34; title=&#34;Artículos sobre R&#34; target=&#34;_blank&#34;&gt;R&lt;/a&gt; que hice, quiero enseñaros los gráficos que obtuve para que los comparéis con los que obtuve con &lt;em&gt;Calc&lt;/em&gt;.&lt;/p&gt;

&lt;figure&gt;
    &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/chrp1.png&#34; alt=&#34;Gráfico que muestra el rendimiento en un caso pequeño&#34; title=&#34;Gráfico que muestra el rendimiento en un caso pequeño&#34; width=&#34;800&#34; height=&#34;800&#34;&gt;&lt;/amp-img&gt;
    &lt;figcaption&gt;Gráfico que muestra el rendimiento en un caso pequeño&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/taip1.png&#34; alt=&#34;Gráfico que muestra el rendimiento en un caso grande&#34; title=&#34;Gráfico que muestra el rendimiento en un caso grande&#34; width=&#34;800&#34; height=&#34;800&#34;&gt;&lt;/amp-img&gt;
    &lt;figcaption&gt;Gráfico que muestra el rendimiento en un caso grande&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;¿Qué algoritmo funciona mejor en casos pequeños? ¿Y en casos grandes?&lt;/p&gt;

&lt;figure&gt;
    &lt;amp-img on=&#34;tap:lightbox1&#34; role=&#34;button&#34; tabindex=&#34;0&#34; layout=&#34;responsive&#34; src=&#34;https://elbauldelprogramador.com/img/converp2.png&#34; alt=&#34;Gráfico de convergencia&#34; title=&#34;Gráfico de convergencia&#34; width=&#34;800&#34; height=&#34;800&#34;&gt;&lt;/amp-img&gt;
    &lt;figcaption&gt;Gráfico de convergencia&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Este último gráfico lo hice con los datos de la práctica 2, en vez de con los de la práctica 1. Representa la convergencia a una solución, al ser algoritmos multiarranque, pueden llegar a una buena solución y después dar con otra peor. ¿Qué algoritmo da con la mejor solución? ¿Qué algoritmo converge más rápido?&lt;/p&gt;

&lt;h2 id=&#34;mi-script-con-ggplot2&#34;&gt;Mi script con &lt;code&gt;ggplot2&lt;/code&gt;&lt;/h2&gt;

&lt;h3 id=&#34;pasando-datos-de-python-a-r&#34;&gt;Pasando datos de Python a R&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;ggplot2&lt;/code&gt; era ideal, pero tenía un problema: ¿cómo paso mis datos de python a R? La respuesta no fue muy difícil de encontrar. Lo que hice fue añadir una función más a mi script en python que guardaba los datos de la &amp;ldquo;hoja de cálculo&amp;rdquo; en un fichero &lt;code&gt;csv&lt;/code&gt;. Con el fichero &lt;code&gt;csv&lt;/code&gt; de cada algoritmo, creaba un &lt;em&gt;Data frame&lt;/em&gt; en R con los datos que me interesaban para mi gráfica.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Resultados/&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nombre_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csvfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;fieldnames&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Coste&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Tiempo&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Desviacion&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DictWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;csvfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fieldnames&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fieldnames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writeheader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ficheros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)):&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writerow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Coste&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;valores&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt;
                &lt;span class=&#34;s1&#34;&gt;&amp;#39;Tiempo&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tiempos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Desviacion&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;desviaciones&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])})&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;csvfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Como también representaba en la gráfica los mejores resultados conocidos para cada caso, hice un &lt;code&gt;csv&lt;/code&gt; para almacenarlos y poder leerlos con R. Esta función sólo tuve que ejecutarla una vez pues la mejor solución de cada caso es la misma la compares con el algoritmo que la compares.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;mejor_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;mejor_csv.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csvfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;fieldnames&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Caso&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Coste&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DictWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;csvfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fieldnames&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fieldnames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writeheader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ficheros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)):&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writerow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Caso&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ficheros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                &lt;span class=&#34;s1&#34;&gt;&amp;#39;Coste&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mejores_sol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])})&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;csvfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;representando-en-r-los-datos&#34;&gt;Representando en R los datos&lt;/h3&gt;

&lt;p&gt;Una vez tenía los datos en ficheros &lt;code&gt;csv&lt;/code&gt; sólo tenía que usar la función &lt;code&gt;read.csv&lt;/code&gt; para convertirlos en un &lt;em&gt;Data frame&lt;/em&gt;. En mi caso, como habréis visto en las gráficas, sólo estaba interesada en el coste obtenido por cada algoritmo en casos pequeños y grandes, por lo que obivé los datos relacionados con el tiempo de ejecución.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Parámetros de la función:&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#   resultados: nombre de los ficheros csv de cada algoritmo&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#   nombres: nombres de las columnas en el data frame&lt;/span&gt;
construye_datos &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;resultados&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; nombres&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# leemos los datos sobre los mejores costes obtenidos para cada caso&lt;/span&gt;
    mejor &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; read.csv&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;Resultados/mejor_csv.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# y los costes obtenidos por el algoritmo greedy, este algoritmo se compara&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# con todos los algoritmos desarrollados en todas las prácticas.&lt;/span&gt;
    greedy &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; read.csv&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;Resultados/resultados_greedy.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# leemos el resto de datos de los algoritmos de la práctica concreta&lt;/span&gt;
    algoritmos &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;lapply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;X&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;resultados&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FUN&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;r&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; read.csv&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Resultados/&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; r&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; sep&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# hacemos un data frame guardando únicamente el coste obtenido por cada&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# algoritmo.&lt;/span&gt;
    d &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;data.frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;cbind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mejor&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; greedy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; algoritmos&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Caso&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;MejorCoste&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;CosteGreedy&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;TiempoGreedy&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;DesvGreedy&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; nombres&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    d
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Una vez tenía un &lt;em&gt;Data frame&lt;/em&gt; con los datos que quería representar en la gráfica, pasaba a realizar la gráfica con otra función. Debido a que quería representar tres medidas diferentes en la gráfica (&lt;strong&gt;coste&lt;/strong&gt; obtenido por cada &lt;strong&gt;algoritmo&lt;/strong&gt; en algunos de los &lt;strong&gt;casos&lt;/strong&gt;), tuve que hacer un tratamiento previo al &lt;em&gt;Data frame&lt;/em&gt; para conseguirlo.&lt;/p&gt;

&lt;p&gt;La función &lt;code&gt;construye_datos&lt;/code&gt; aplicada sobre dos algoritmos &lt;em&gt;&amp;ldquo;Ejemplo 1&amp;rdquo;&lt;/em&gt; y &lt;em&gt;&amp;ldquo;Ejemplo 2&amp;rdquo;&lt;/em&gt; nos devuelve un &lt;em&gt;Data frame&lt;/em&gt; con la siguiente forma:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Caso&lt;/th&gt;
&lt;th&gt;MejorCoste&lt;/th&gt;
&lt;th&gt;CosteGreedy&lt;/th&gt;
&lt;th&gt;TiempoGreedy&lt;/th&gt;
&lt;th&gt;DesvGreedy&lt;/th&gt;
&lt;th&gt;CosteEj1&lt;/th&gt;
&lt;th&gt;TiempoEj1&lt;/th&gt;
&lt;th&gt;DesvEj1&lt;/th&gt;
&lt;th&gt;CosteEj2&lt;/th&gt;
&lt;th&gt;TiempoEj2&lt;/th&gt;
&lt;th&gt;DesvEj2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;De esos datos, como he dicho antes, sólo nos interesan los relativos al coste obtenido para cada caso. Por tanto, el primer &amp;ldquo;procesamiento&amp;rdquo; que debemos hacer al &lt;em&gt;Data frame&lt;/em&gt; es quedarnos sólo con las columnas que nos interesan:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Caso&lt;/th&gt;
&lt;th&gt;MejorCoste&lt;/th&gt;
&lt;th&gt;CosteGreedy&lt;/th&gt;
&lt;th&gt;CosteEj1&lt;/th&gt;
&lt;th&gt;CosteEj2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Una vez hecho esto, tenía que &amp;ldquo;reorganizar&amp;rdquo; el &lt;em&gt;Data frame&lt;/em&gt; de forma que pasase a tener únicamente 3 columnas, que son las que iba a representar en la gráfica:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Caso&lt;/th&gt;
&lt;th&gt;variable&lt;/th&gt;
&lt;th&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;chr20a.dat&lt;/td&gt;
&lt;td&gt;MejorCoste&lt;/td&gt;
&lt;td&gt;2192&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr20c.dat&lt;/td&gt;
&lt;td&gt;MejorCoste&lt;/td&gt;
&lt;td&gt;14142&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr22b.dat&lt;/td&gt;
&lt;td&gt;MejorCoste&lt;/td&gt;
&lt;td&gt;6194&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr25a.dat&lt;/td&gt;
&lt;td&gt;MejorCoste&lt;/td&gt;
&lt;td&gt;3796&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr20a.dat&lt;/td&gt;
&lt;td&gt;CosteGreedy&lt;/td&gt;
&lt;td&gt;8100&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr20c.dat&lt;/td&gt;
&lt;td&gt;CosteGreedy&lt;/td&gt;
&lt;td&gt;78718&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr22b.dat&lt;/td&gt;
&lt;td&gt;CosteGreedy&lt;/td&gt;
&lt;td&gt;11942&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr25a.dat&lt;/td&gt;
&lt;td&gt;CosteGreedy&lt;/td&gt;
&lt;td&gt;17556&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr20a.dat&lt;/td&gt;
&lt;td&gt;CosteEj1&lt;/td&gt;
&lt;td&gt;2418&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr20c.dat&lt;/td&gt;
&lt;td&gt;CosteEj1&lt;/td&gt;
&lt;td&gt;15672&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr22b.dat&lt;/td&gt;
&lt;td&gt;CosteEj1&lt;/td&gt;
&lt;td&gt;6530&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr25a.dat&lt;/td&gt;
&lt;td&gt;CosteEj1&lt;/td&gt;
&lt;td&gt;4762&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr20a.dat&lt;/td&gt;
&lt;td&gt;CosteEj2&lt;/td&gt;
&lt;td&gt;2546&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr20c.dat&lt;/td&gt;
&lt;td&gt;CosteEj2&lt;/td&gt;
&lt;td&gt;16986&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr22b.dat&lt;/td&gt;
&lt;td&gt;CosteEj2&lt;/td&gt;
&lt;td&gt;6660&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;chr25a.dat&lt;/td&gt;
&lt;td&gt;CosteEj2&lt;/td&gt;
&lt;td&gt;4440&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Como veis, usando la columna &lt;em&gt;Caso&lt;/em&gt; como &lt;strong&gt;identificador&lt;/strong&gt;, hemos reordenado la tabla de manera que, para cada algoritmo, tendremos un gráfico de barras representando el coste obtenido en cada caso.&lt;/p&gt;

&lt;p&gt;Una vez explicado paso a paso el tratamiento que hice a los datos, paso a enseñar la función que hace la gráfica:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Parámetros de la función:&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#   datos: Data frame que devuelve la función constuye_datos&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#   cols: columnas del data frame que vamos a representar en la gráfica&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#         (en nuestro caso, el coste obtenido por cada algoritmo para cada caso)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#   nombres: nombres de cada columna del data frame que aparecerán en la gráfica&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#   file: nombre del archivo en el que guardaremos las gráficas finalmente&lt;/span&gt;
representa_datos &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;datos&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; cols&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; nombres&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# importación de librerías&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ggplot2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# para hacer gŕaficos&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;reshape2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# para poder redistribuir el data frame&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# nos quedamos con las columnas del data frame que nos interesan&lt;/span&gt;
    d_c &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;data.frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;cbind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;datos&lt;span class=&#34;p&#34;&gt;[,&lt;/span&gt;cols&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_c&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Caso&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Mejor Coste&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Coste Greedy&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; nombres&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    d_c&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;Caso &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; datos&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;Caso
    &lt;span class=&#34;c1&#34;&gt;# filtramos los casos que empiezan por chr2, ya que estos son casos&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# bastante pequeños y redistribuimos el data frame&lt;/span&gt;
    d_chr &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; melt&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_c&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;grepl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;chr2&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;datos&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;Caso&lt;span class=&#34;p&#34;&gt;),])&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_chr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Caso&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Algoritmo&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Coste&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# representamos la gráfica de barras&lt;/span&gt;
    ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_chr&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;Caso&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; Coste&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_bar&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;fill&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;Algoritmo&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; position&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dodge&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; stat&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;identity&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# guardamos el archivo&lt;/span&gt;
    ggsave&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;chr&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;sep&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# repetimos para casos tai, que son casos grandes.&lt;/span&gt;
    d_tai &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; melt&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_c&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;grepl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;tai&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;datos&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;Caso&lt;span class=&#34;p&#34;&gt;),])&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_tai&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Caso&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Algoritmo&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Coste&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_tai&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;Caso&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; Coste&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_bar&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;fill&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;Algoritmo&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; position&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;dodge&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; stat&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;identity&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    ggsave&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;tai&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;sep&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Por ejemplo, para obtener la gráfica de los algoritmos &lt;em&gt;&amp;ldquo;Ejemplo 1&amp;rdquo;&lt;/em&gt; y &lt;em&gt;&amp;ldquo;Ejemplo 2&amp;rdquo;&lt;/em&gt;, realizaríamos la siguiente llamada:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;datos_prueba &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; construye_datos&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;resultados &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;resultados_Ej1.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;resultados_Ej2.csv&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
    nombres &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;CosteEj1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;TiempoEj1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;DesvEj1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;CosteEj2&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;TiempoEj2&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;DesvEj2&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
representa_datos&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;datos&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;datos_prueba&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; cols&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; nombres&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Coste Ej1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Coste Ej2), file=&amp;quot;&lt;/span&gt;prueba&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Conseguí optimizar tanto el tiempo con estos scripts, que me sobró tiempo para implementar un gráfico de convergencia en R. Para ello, modifiqué mi práctica para que guardase en un &lt;code&gt;csv&lt;/code&gt; cada coste que iba encontrando, para después representarlo en una gráfica. Una vez comprendida la función anterior, esta no tiene apenas ninguna diferencia:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span&gt;&lt;/span&gt;representa_convergencia &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;resultados&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; nombres&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ggplot2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;reshape2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# leemos la convergencia de cada algoritmo&lt;/span&gt;
    convergencias &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;lapply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;X&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;resultados&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FUN&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;r&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; read.csv&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Resultados/&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;r&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;sep&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# El csv guarda tanto las iteraciones dadas por el algoritmo como el coste&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# obtenido en cada iteración. Como sólo nos interesa el coste, nos quedamos&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# con la segunda columna.&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;lapply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;X&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;convergencias&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FUN&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;conv&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; conv&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]])&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# hacemos un nuevo data frame con la siguiente estructura:&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;#   Iteraciones    ConvergenciaAlgoritmo 1 ..... ConvergenciaAlgoritmo n&lt;/span&gt;
    d_c &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;data.frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;convergencias&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]][,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_c&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; nombres
    d_c
    &lt;span class=&#34;c1&#34;&gt;# reorganizamos el data frame&lt;/span&gt;
    d_cm &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; melt&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_c&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; id.vars&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;nombres&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_cm&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;nombres&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Algoritmo&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Coste&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# lo representamos con ggplot. Hago la distinción de si los datos se han&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# obtenido por número de llamadas a la función de evaluación o por número de&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# iteraciones.&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;nombres&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Evaluaciones&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_cm&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;Evaluaciones&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;Coste&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;color&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;Algoritmo&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;else&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;d_cm&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;Iteraciones&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;Coste&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;color&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;Algoritmo&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# y lo guardamos.&lt;/span&gt;
    ggsave&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;conver&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; sep&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;referencias&#34;&gt;Referencias&lt;/h2&gt;

&lt;p&gt;El código de la práctica está disponible en el GitHub de Marta: &lt;a href=&#34;https://github.com/mgmacias95/Analisis-Resultados-R-Python&#34; title=&#34;Enlace al Repo&#34; target=&#34;_blank&#34;&gt;github.com/mgmacias95/Analisis-Resultados-R-Python&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;más-sobre-r-y-python&#34;&gt;Más sobre R y Python&lt;/h2&gt;

&lt;p&gt;Puedes consultar los siguientes atrículos sobre R y python:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/vectorizar-acceso-columnas-r/&#34; title=&#34;Vectorizar El Acceso a Columnas en R&#34; target=&#34;_blank&#34;&gt;Vectorizar El Acceso a Columnas en R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/acceder-variable-dentro-funcion-r/&#34; title=&#34;Cómo modificar Una Variable Desde Dentro De Una Función en R&#34; target=&#34;_blank&#34;&gt;Cómo modificar Una Variable Desde Dentro De Una Función en R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/introduccion-a-las-expresiones-regulares-en-python/&#34; title=&#34;Introducción a las expresiones regulares en python&#34; target=&#34;_blank&#34;&gt;Introducción a las expresiones regulares en python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/generar-listas-de-reproduccion-determinada-duracion-python/&#34; title=&#34;Generar listas de reproducción de una determinada duración con Python&#34; target=&#34;_blank&#34;&gt;Generar listas de reproducción de una determinada duración con Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/python-lista-de-listas-eficiente/&#34; title=&#34;Crear Una Lista De Listas De Forma Eficiente en Python&#34; target=&#34;_blank&#34;&gt;Crear Una Lista De Listas De Forma Eficiente en Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elbauldelprogramador.com/como-anadir-automaticamente-el-tamao-de-una-imagen-en-html-con-python/&#34; title=&#34;Cómo Añadir Automáticamente El Tamaño De Una Imagen en HTML Con Python&#34; target=&#34;_blank&#34;&gt;Cómo Añadir Automáticamente El Tamaño De Una Imagen en HTML Con Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Los artículos etiquetados con estos temas se encuentran en &lt;a href=&#34;https://elbauldelprogramador.com/tags/r&#34;&gt;/tags/r&lt;/a&gt; y &lt;a href=&#34;https://elbauldelprogramador.com/tags/python&#34;&gt;/tags/python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Liberado El Curso De Android</title>
      <link>https://elbauldelprogramador.com/descargar-curso-android-gratuito/</link>
      <pubDate>Sat, 22 Oct 2016 06:03:57 +0000</pubDate>
      
      <guid>https://elbauldelprogramador.com/descargar-curso-android-gratuito/</guid>
      <description>&lt;p&gt;He decidido liberar el &lt;a href=&#34;https://elbauldelprogramador.com/curso-programacion-android/&#34; title=&#34;Curso de Programación en Android&#34; target=&#34;_blank&#34;&gt;curso de programación Android&lt;/a&gt;, ya que está algo antiguo, podéis descargarlo en: &lt;a href=&#34;http://elbauldelprogramador.com/pdfs/PaqueteProgramacionAndroid.zip&#34; id=&#34;androidCourse&#34;&gt;Curso de Programación Android Gratuíto&lt;/a&gt;. De todos modos, si valoras el trabajo realizado, se aceptan donaciones mediante nuestro &lt;a href=&#34;https://www.paypal.me/elbaul&#34; target=&#34;_blank&#34;&gt;enlace de Paypal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Espero que os resulte útil.&lt;/p&gt;

&lt;p&gt;&lt;!--ad--&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>